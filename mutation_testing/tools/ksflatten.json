{"work-items": {"4": {"module-name": "tools.ksflatten", "op-name": "number_replacer", "result-data": [{"line_number": 65, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "occurrence": 3}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/tools/ksflatten.py", "+++ b/home/atodorov/repos/git/pykickstart/tools/ksflatten.py", "@@ -34,7 +34,7 @@", "             f = open(opts.output, 'w')", "         except IOError as msg:", "             print((_(\"Failed to open output file '%(filename)s' : %(error_msg)s\") % {'filename': opts.output, 'error_msg': msg}), file=sys.stderr)", "-            sys.exit(1)", "+            sys.exit(2)", "     else:", "         f = sys.stdout", "     f.write(('%s' % ksparser.handler))"]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "tools.ksflatten", "number_replacer", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/tools/ksflatten.py"], "occurrence": 3}, "10": {"module-name": "tools.ksflatten", "op-name": "replace_Eq_with_Gt", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/tools/ksflatten.py", "+++ b/home/atodorov/repos/git/pykickstart/tools/ksflatten.py", "@@ -39,6 +39,6 @@", "         f = sys.stdout", "     f.write(('%s' % ksparser.handler))", "     f.close()", "-if (__name__ == '__main__'):", "+if (__name__ > '__main__'):", "     main()", " "]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "tools.ksflatten", "replace_Eq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/tools/ksflatten.py"], "occurrence": 0}, "2": {"module-name": "tools.ksflatten", "op-name": "number_replacer", "result-data": [{"line_number": 55, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/tools/ksflatten.py", "+++ b/home/atodorov/repos/git/pykickstart/tools/ksflatten.py", "@@ -25,7 +25,7 @@", "         ksparser.readKickstart(opts.kscfg)", "     except IOError as msg:", "         print((_(\"Failed to read kickstart file '%(filename)s' : %(error_msg)s\") % {'filename': opts.kscfg, 'error_msg': msg}), file=sys.stderr)", "-        sys.exit(1)", "+        sys.exit(2)", "     except pykickstart.errors.KickstartError as e:", "         print((_(\"Failed to parse kickstart file '%(filename)s' : %(error_msg)s\") % {'filename': opts.kscfg, 'error_msg': e}), file=sys.stderr)", "         sys.exit(1)"]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "tools.ksflatten", "number_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/tools/ksflatten.py"], "occurrence": 1}, "5": {"module-name": "tools.ksflatten", "op-name": "replace_Eq_with_Is", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/tools/ksflatten.py", "+++ b/home/atodorov/repos/git/pykickstart/tools/ksflatten.py", "@@ -39,6 +39,6 @@", "         f = sys.stdout", "     f.write(('%s' % ksparser.handler))", "     f.close()", "-if (__name__ == '__main__'):", "+if (__name__ is '__main__'):", "     main()", " "]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "tools.ksflatten", "replace_Eq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/tools/ksflatten.py"], "occurrence": 0}, "9": {"module-name": "tools.ksflatten", "op-name": "replace_Eq_with_In", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/tools/ksflatten.py", "+++ b/home/atodorov/repos/git/pykickstart/tools/ksflatten.py", "@@ -39,6 +39,6 @@", "         f = sys.stdout", "     f.write(('%s' % ksparser.handler))", "     f.close()", "-if (__name__ == '__main__'):", "+if (__name__ in '__main__'):", "     main()", " "]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "tools.ksflatten", "replace_Eq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/tools/ksflatten.py"], "occurrence": 0}, "7": {"module-name": "tools.ksflatten", "op-name": "replace_Eq_with_GtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/tools/ksflatten.py", "+++ b/home/atodorov/repos/git/pykickstart/tools/ksflatten.py", "@@ -39,6 +39,6 @@", "         f = sys.stdout", "     f.write(('%s' % ksparser.handler))", "     f.close()", "-if (__name__ == '__main__'):", "+if (__name__ >= '__main__'):", "     main()", " "]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "tools.ksflatten", "replace_Eq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/tools/ksflatten.py"], "occurrence": 0}, "11": {"module-name": "tools.ksflatten", "op-name": "boolean_replacer", "result-data": [{"line_number": 34, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/tools/ksflatten.py", "+++ b/home/atodorov/repos/git/pykickstart/tools/ksflatten.py", "@@ -9,7 +9,7 @@", " ", " def parse_args():", "     parser = argparse.ArgumentParser()", "-    parser.add_argument('-c', '--config', dest='kscfg', required=True, help=_('Path to kickstart config file'))", "+    parser.add_argument('-c', '--config', dest='kscfg', required=False, help=_('Path to kickstart config file'))", "     parser.add_argument('-v', '--version', dest='version', default=DEVEL, help=_('Kickstart version to use for interpreting config'))", "     parser.add_argument('-o', '--output', dest='output', help=_('Write flattened config to OUTPUT'))", "     return parser.parse_args()"]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "tools.ksflatten", "boolean_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/tools/ksflatten.py"], "occurrence": 0}, "1": {"module-name": "tools.ksflatten", "op-name": "number_replacer", "result-data": [{"line_number": 47, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/tools/ksflatten.py", "+++ b/home/atodorov/repos/git/pykickstart/tools/ksflatten.py", "@@ -18,7 +18,7 @@", "     opts = parse_args()", "     if (not opts.kscfg):", "         print(_('Need to specify a config to flatten'), file=sys.stderr)", "-        sys.exit(1)", "+        sys.exit(2)", "     ksversion = makeVersion(opts.version)", "     ksparser = pykickstart.parser.KickstartParser(ksversion)", "     try:"]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "tools.ksflatten", "number_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/tools/ksflatten.py"], "occurrence": 0}, "3": {"module-name": "tools.ksflatten", "op-name": "number_replacer", "result-data": [{"line_number": 58, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/tools/ksflatten.py", "+++ b/home/atodorov/repos/git/pykickstart/tools/ksflatten.py", "@@ -28,7 +28,7 @@", "         sys.exit(1)", "     except pykickstart.errors.KickstartError as e:", "         print((_(\"Failed to parse kickstart file '%(filename)s' : %(error_msg)s\") % {'filename': opts.kscfg, 'error_msg': e}), file=sys.stderr)", "-        sys.exit(1)", "+        sys.exit(2)", "     if opts.output:", "         try:", "             f = open(opts.output, 'w')"]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "tools.ksflatten", "number_replacer", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/tools/ksflatten.py"], "occurrence": 2}, "13": {"module-name": "tools.ksflatten", "op-name": "replace_Eq_with_LtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/tools/ksflatten.py", "+++ b/home/atodorov/repos/git/pykickstart/tools/ksflatten.py", "@@ -39,6 +39,6 @@", "         f = sys.stdout", "     f.write(('%s' % ksparser.handler))", "     f.close()", "-if (__name__ == '__main__'):", "+if (__name__ <= '__main__'):", "     main()", " "]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "tools.ksflatten", "replace_Eq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/tools/ksflatten.py"], "occurrence": 0}, "12": {"module-name": "tools.ksflatten", "op-name": "replace_Eq_with_IsNot", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/tools/ksflatten.py", "+++ b/home/atodorov/repos/git/pykickstart/tools/ksflatten.py", "@@ -39,6 +39,6 @@", "         f = sys.stdout", "     f.write(('%s' % ksparser.handler))", "     f.close()", "-if (__name__ == '__main__'):", "+if (__name__ is not '__main__'):", "     main()", " "]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "tools.ksflatten", "replace_Eq_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/tools/ksflatten.py"], "occurrence": 0}, "8": {"module-name": "tools.ksflatten", "op-name": "replace_Eq_with_NotEq", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/tools/ksflatten.py", "+++ b/home/atodorov/repos/git/pykickstart/tools/ksflatten.py", "@@ -39,6 +39,6 @@", "         f = sys.stdout", "     f.write(('%s' % ksparser.handler))", "     f.close()", "-if (__name__ == '__main__'):", "+if (__name__ != '__main__'):", "     main()", " "]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "tools.ksflatten", "replace_Eq_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/tools/ksflatten.py"], "occurrence": 0}, "6": {"module-name": "tools.ksflatten", "op-name": "replace_Eq_with_Lt", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/tools/ksflatten.py", "+++ b/home/atodorov/repos/git/pykickstart/tools/ksflatten.py", "@@ -39,6 +39,6 @@", "         f = sys.stdout", "     f.write(('%s' % ksparser.handler))", "     f.close()", "-if (__name__ == '__main__'):", "+if (__name__ < '__main__'):", "     main()", " "]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "tools.ksflatten", "replace_Eq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/tools/ksflatten.py"], "occurrence": 0}, "14": {"module-name": "tools.ksflatten", "op-name": "replace_Eq_with_NotIn", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/tools/ksflatten.py", "+++ b/home/atodorov/repos/git/pykickstart/tools/ksflatten.py", "@@ -39,6 +39,6 @@", "         f = sys.stdout", "     f.write(('%s' % ksparser.handler))", "     f.close()", "-if (__name__ == '__main__'):", "+if (__name__ not in '__main__'):", "     main()", " "]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "tools.ksflatten", "replace_Eq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/tools/ksflatten.py"], "occurrence": 0}}, "work-parameters": {"1": {"timeout": 2.57052, "test-runner": "nose", "test-args": ["-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/tools/ksflatten.py"]}}, "_default": {}}