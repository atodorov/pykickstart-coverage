{"work-parameters": {"1": {"timeout": 3.35949, "test-runner": "nose", "test-args": ["-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/errors.py"]}}, "work-items": {"4": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/errors.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/errors.py", "@@ -4,7 +4,7 @@", " ", " def formatErrorMsg(lineno, msg=''):", "     'Properly format the error message msg for inclusion in an exception.'", "-    if (msg != ''):", "+    if (msg <= ''):", "         mapping = {'lineno': lineno, 'msg': msg}", "         return (_('The following problem occurred on line %(lineno)s of the kickstart file:\\n\\n%(msg)s\\n') % mapping)", "     else:"]]], "module-name": "pykickstart.errors", "occurrence": 0, "result-type": "normal", "op-name": "replace_NotEq_with_LtE", "command": ["cosmic-ray", "worker", "pykickstart.errors", "replace_NotEq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/errors.py"]}, "8": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/errors.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/errors.py", "@@ -4,7 +4,7 @@", " ", " def formatErrorMsg(lineno, msg=''):", "     'Properly format the error message msg for inclusion in an exception.'", "-    if (msg != ''):", "+    if (msg < ''):", "         mapping = {'lineno': lineno, 'msg': msg}", "         return (_('The following problem occurred on line %(lineno)s of the kickstart file:\\n\\n%(msg)s\\n') % mapping)", "     else:"]]], "module-name": "pykickstart.errors", "occurrence": 0, "result-type": "normal", "op-name": "replace_NotEq_with_Lt", "command": ["cosmic-ray", "worker", "pykickstart.errors", "replace_NotEq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/errors.py"]}, "3": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/errors.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/errors.py", "@@ -4,7 +4,7 @@", " ", " def formatErrorMsg(lineno, msg=''):", "     'Properly format the error message msg for inclusion in an exception.'", "-    if (msg != ''):", "+    if (msg == ''):", "         mapping = {'lineno': lineno, 'msg': msg}", "         return (_('The following problem occurred on line %(lineno)s of the kickstart file:\\n\\n%(msg)s\\n') % mapping)", "     else:"]]], "module-name": "pykickstart.errors", "occurrence": 0, "result-type": "normal", "op-name": "replace_NotEq_with_Eq", "command": ["cosmic-ray", "worker", "pykickstart.errors", "replace_NotEq_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/errors.py"]}, "7": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/errors.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/errors.py", "@@ -4,7 +4,7 @@", " ", " def formatErrorMsg(lineno, msg=''):", "     'Properly format the error message msg for inclusion in an exception.'", "-    if (msg != ''):", "+    if (msg is ''):", "         mapping = {'lineno': lineno, 'msg': msg}", "         return (_('The following problem occurred on line %(lineno)s of the kickstart file:\\n\\n%(msg)s\\n') % mapping)", "     else:"]]], "module-name": "pykickstart.errors", "occurrence": 0, "result-type": "normal", "op-name": "replace_NotEq_with_Is", "command": ["cosmic-ray", "worker", "pykickstart.errors", "replace_NotEq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/errors.py"]}, "5": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/errors.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/errors.py", "@@ -4,7 +4,7 @@", " ", " def formatErrorMsg(lineno, msg=''):", "     'Properly format the error message msg for inclusion in an exception.'", "-    if (msg != ''):", "+    if (msg not in ''):", "         mapping = {'lineno': lineno, 'msg': msg}", "         return (_('The following problem occurred on line %(lineno)s of the kickstart file:\\n\\n%(msg)s\\n') % mapping)", "     else:"]]], "module-name": "pykickstart.errors", "occurrence": 0, "result-type": "normal", "op-name": "replace_NotEq_with_NotIn", "command": ["cosmic-ray", "worker", "pykickstart.errors", "replace_NotEq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/errors.py"]}, "1": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/errors.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/errors.py", "@@ -4,7 +4,7 @@", " ", " def formatErrorMsg(lineno, msg=''):", "     'Properly format the error message msg for inclusion in an exception.'", "-    if (msg != ''):", "+    if (msg >= ''):", "         mapping = {'lineno': lineno, 'msg': msg}", "         return (_('The following problem occurred on line %(lineno)s of the kickstart file:\\n\\n%(msg)s\\n') % mapping)", "     else:"]]], "module-name": "pykickstart.errors", "occurrence": 0, "result-type": "normal", "op-name": "replace_NotEq_with_GtE", "command": ["cosmic-ray", "worker", "pykickstart.errors", "replace_NotEq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/errors.py"]}, "2": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/errors.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/errors.py", "@@ -4,7 +4,7 @@", " ", " def formatErrorMsg(lineno, msg=''):", "     'Properly format the error message msg for inclusion in an exception.'", "-    if (msg != ''):", "+    if (msg > ''):", "         mapping = {'lineno': lineno, 'msg': msg}", "         return (_('The following problem occurred on line %(lineno)s of the kickstart file:\\n\\n%(msg)s\\n') % mapping)", "     else:"]]], "module-name": "pykickstart.errors", "occurrence": 0, "result-type": "normal", "op-name": "replace_NotEq_with_Gt", "command": ["cosmic-ray", "worker", "pykickstart.errors", "replace_NotEq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/errors.py"]}, "6": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/errors.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/errors.py", "@@ -4,7 +4,7 @@", " ", " def formatErrorMsg(lineno, msg=''):", "     'Properly format the error message msg for inclusion in an exception.'", "-    if (msg != ''):", "+    if (msg in ''):", "         mapping = {'lineno': lineno, 'msg': msg}", "         return (_('The following problem occurred on line %(lineno)s of the kickstart file:\\n\\n%(msg)s\\n') % mapping)", "     else:"]]], "module-name": "pykickstart.errors", "occurrence": 0, "result-type": "normal", "op-name": "replace_NotEq_with_In", "command": ["cosmic-ray", "worker", "pykickstart.errors", "replace_NotEq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/errors.py"]}}, "_default": {}}