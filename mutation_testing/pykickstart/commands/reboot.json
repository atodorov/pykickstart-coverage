{"work-items": {"3": {"result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -27,7 +27,7 @@", "         return retval", " ", "     def parse(self, args):", "-        if (self.currentCmd == 'reboot'):", "+        if (self.currentCmd in 'reboot'):", "             self.action = KS_REBOOT", "         else:", "             self.action = KS_SHUTDOWN"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_In", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Eq_with_In", "module-name": "pykickstart.commands.reboot"}, "30": {"result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 57, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 47, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 35, in runTest\n    self.assertEqual(str(cmd), \"# Shutdown after installation\\nshutdown\\n\")\nAssertionError: '# Reboot after installation\\nreboot\\n' != '# Shutdown after installation\\nshutdown\\n'\n- # Reboot after installation\n?   ^^^ ^^\n+ # Shutdown after installation\n?   ^^^^^ ^^\n- reboot\n+ shutdown\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -18,7 +18,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.action == KS_REBOOT):", "+        if (self.action >= KS_REBOOT):", "             retval += '# Reboot after installation\\nreboot'", "             retval += (self._getArgsAsStr() + '\\n')", "         elif (self.action == KS_SHUTDOWN):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Eq_with_GtE", "module-name": "pykickstart.commands.reboot"}, "40": {"result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 57, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 47, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 35, in runTest\n    self.assertEqual(str(cmd), \"# Shutdown after installation\\nshutdown\\n\")\nAssertionError: '' != '# Shutdown after installation\\nshutdown\\n'\n+ # Shutdown after installation\n+ shutdown\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -21,7 +21,7 @@", "         if (self.action == KS_REBOOT):", "             retval += '# Reboot after installation\\nreboot'", "             retval += (self._getArgsAsStr() + '\\n')", "-        elif (self.action == KS_SHUTDOWN):", "+        elif (self.action != KS_SHUTDOWN):", "             retval += '# Shutdown after installation\\nshutdown'", "             retval += (self._getArgsAsStr() + '\\n')", "         return retval"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Eq_with_NotEq", "module-name": "pykickstart.commands.reboot"}, "51": {"result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 57, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 47, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 34, in runTest\n    self.assertEqual(cmd.action, KS_SHUTDOWN)\nAssertionError: 1 != 2\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -27,7 +27,7 @@", "         return retval", " ", "     def parse(self, args):", "-        if (self.currentCmd == 'reboot'):", "+        if (self.currentCmd is not 'reboot'):", "             self.action = KS_REBOOT", "         else:", "             self.action = KS_SHUTDOWN"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_IsNot", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Eq_with_IsNot", "module-name": "pykickstart.commands.reboot"}, "41": {"result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 57, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 47, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 31, in runTest\n    self.assertEqual(cmd.action, KS_REBOOT)\nAssertionError: 2 != 1\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -27,7 +27,7 @@", "         return retval", " ", "     def parse(self, args):", "-        if (self.currentCmd == 'reboot'):", "+        if (self.currentCmd != 'reboot'):", "             self.action = KS_REBOOT", "         else:", "             self.action = KS_SHUTDOWN"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_NotEq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Eq_with_NotEq", "module-name": "pykickstart.commands.reboot"}, "29": {"result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 57, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 47, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 31, in runTest\n    self.assertEqual(cmd.action, KS_REBOOT)\nAssertionError: 0 != 1\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -80,7 +80,7 @@", " ", "     def parse(self, args):", "         FC6_Reboot.parse(self, args)", "-        if (self.currentCmd == 'halt'):", "+        if (self.currentCmd > 'halt'):", "             self.action = KS_WAIT", "         return self", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_Gt", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 4, "result-type": "normal", "op-name": "replace_Eq_with_Gt", "module-name": "pykickstart.commands.reboot"}, "43": {"result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 57, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 47, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 31, in runTest\n    self.assertEqual(cmd.action, KS_REBOOT)\nAssertionError: 0 != 1\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -80,7 +80,7 @@", " ", "     def parse(self, args):", "         FC6_Reboot.parse(self, args)", "-        if (self.currentCmd == 'halt'):", "+        if (self.currentCmd != 'halt'):", "             self.action = KS_WAIT", "         return self", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_NotEq", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 4, "result-type": "normal", "op-name": "replace_Eq_with_NotEq", "module-name": "pykickstart.commands.reboot"}, "46": {"result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 57, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 47, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 31, in runTest\n    self.assertEqual(cmd.action, KS_REBOOT)\nAssertionError: 2 != 1\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -27,7 +27,7 @@", "         return retval", " ", "     def parse(self, args):", "-        if (self.currentCmd == 'reboot'):", "+        if (self.currentCmd < 'reboot'):", "             self.action = KS_REBOOT", "         else:", "             self.action = KS_SHUTDOWN"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_Lt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Eq_with_Lt", "module-name": "pykickstart.commands.reboot"}, "10": {"result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 61, in runTest\n    self.assertEqual(cmd.action, KS_WAIT)\nAssertionError: 2 != 0\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -80,7 +80,7 @@", " ", "     def parse(self, args):", "         FC6_Reboot.parse(self, args)", "-        if (self.currentCmd == 'halt'):", "+        if (self.currentCmd is 'halt'):", "             self.action = KS_WAIT", "         return self", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_Is", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 4, "result-type": "normal", "op-name": "replace_Eq_with_Is", "module-name": "pykickstart.commands.reboot"}, "19": {"result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 174}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 69, in runTest\n    F18_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 57, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 47, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 32, in runTest\n    self.assertEqual(str(cmd), \"# Reboot after installation\\nreboot\\n\")\nAssertionError: '# Reboot after installation\\nreboot --kexec\\n' != '# Reboot after installation\\nreboot\\n'\n  # Reboot after installation\n- reboot --kexec\n+ reboot\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -107,6 +107,6 @@", " ", "     def _getParser(self):", "         op = F18_Reboot._getParser(self)", "-        op.add_argument('--kexec', action='store_true', version=F23, default=False, help='\\n                        Use kexec to reboot into the new system, bypassing\\n                        BIOS/Firmware and bootloader.')", "+        op.add_argument('--kexec', action='store_true', version=F23, default=True, help='\\n                        Use kexec to reboot into the new system, bypassing\\n                        BIOS/Firmware and bootloader.')", "         return op", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "boolean_replacer", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 3, "result-type": "normal", "op-name": "boolean_replacer", "module-name": "pykickstart.commands.reboot"}, "50": {"result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 57, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 47, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 35, in runTest\n    self.assertEqual(str(cmd), \"# Shutdown after installation\\nshutdown\\n\")\nAssertionError: '' != '# Shutdown after installation\\nshutdown\\n'\n+ # Shutdown after installation\n+ shutdown\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -21,7 +21,7 @@", "         if (self.action == KS_REBOOT):", "             retval += '# Reboot after installation\\nreboot'", "             retval += (self._getArgsAsStr() + '\\n')", "-        elif (self.action == KS_SHUTDOWN):", "+        elif (self.action is not KS_SHUTDOWN):", "             retval += '# Shutdown after installation\\nshutdown'", "             retval += (self._getArgsAsStr() + '\\n')", "         return retval"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_IsNot", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Eq_with_IsNot", "module-name": "pykickstart.commands.reboot"}, "2": {"result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 57, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 47, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 35, in runTest\n    self.assertEqual(str(cmd), \"# Shutdown after installation\\nshutdown\\n\")\n  File \"pykickstart.commands.reboot\", line 122, in __str__\n  File \"pykickstart.commands.reboot\", line 43, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -21,7 +21,7 @@", "         if (self.action == KS_REBOOT):", "             retval += '# Reboot after installation\\nreboot'", "             retval += (self._getArgsAsStr() + '\\n')", "-        elif (self.action == KS_SHUTDOWN):", "+        elif (self.action in KS_SHUTDOWN):", "             retval += '# Shutdown after installation\\nshutdown'", "             retval += (self._getArgsAsStr() + '\\n')", "         return retval"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Eq_with_In", "module-name": "pykickstart.commands.reboot"}, "6": {"result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -18,7 +18,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.action == KS_REBOOT):", "+        if (self.action is KS_REBOOT):", "             retval += '# Reboot after installation\\nreboot'", "             retval += (self._getArgsAsStr() + '\\n')", "         elif (self.action == KS_SHUTDOWN):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Eq_with_Is", "module-name": "pykickstart.commands.reboot"}, "25": {"result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 57, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 47, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 32, in runTest\n    self.assertEqual(str(cmd), \"# Reboot after installation\\nreboot\\n\")\nAssertionError: '' != '# Reboot after installation\\nreboot\\n'\n+ # Reboot after installation\n+ reboot\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -18,7 +18,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.action == KS_REBOOT):", "+        if (self.action > KS_REBOOT):", "             retval += '# Reboot after installation\\nreboot'", "             retval += (self._getArgsAsStr() + '\\n')", "         elif (self.action == KS_SHUTDOWN):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Eq_with_Gt", "module-name": "pykickstart.commands.reboot"}, "32": {"result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 57, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 47, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 34, in runTest\n    self.assertEqual(cmd.action, KS_SHUTDOWN)\nAssertionError: 1 != 2\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -27,7 +27,7 @@", "         return retval", " ", "     def parse(self, args):", "-        if (self.currentCmd == 'reboot'):", "+        if (self.currentCmd >= 'reboot'):", "             self.action = KS_REBOOT", "         else:", "             self.action = KS_SHUTDOWN"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_GtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Eq_with_GtE", "module-name": "pykickstart.commands.reboot"}, "34": {"result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 57, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 47, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 31, in runTest\n    self.assertEqual(cmd.action, KS_REBOOT)\nAssertionError: 0 != 1\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -80,7 +80,7 @@", " ", "     def parse(self, args):", "         FC6_Reboot.parse(self, args)", "-        if (self.currentCmd == 'halt'):", "+        if (self.currentCmd >= 'halt'):", "             self.action = KS_WAIT", "         return self", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_GtE", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 4, "result-type": "normal", "op-name": "replace_Eq_with_GtE", "module-name": "pykickstart.commands.reboot"}, "52": {"result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 57, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 47, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 32, in runTest\n    self.assertEqual(str(cmd), \"# Reboot after installation\\nreboot\\n\")\nAssertionError: '# Halt after installation\\nhalt\\n' != '# Reboot after installation\\nreboot\\n'\n- # Halt after installation\n?   ^^^\n+ # Reboot after installation\n?   ^^^^^\n- halt\n+ reboot\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -73,7 +73,7 @@", " ", "     def __str__(self):", "         retval = FC6_Reboot.__str__(self)", "-        if (self.action == KS_WAIT):", "+        if (self.action is not KS_WAIT):", "             retval = '# Halt after installation\\nhalt'", "             retval += (self._getArgsAsStr() + '\\n')", "         return retval"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_IsNot", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 3, "result-type": "normal", "op-name": "replace_Eq_with_IsNot", "module-name": "pykickstart.commands.reboot"}, "49": {"result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 57, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 47, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 32, in runTest\n    self.assertEqual(str(cmd), \"# Reboot after installation\\nreboot\\n\")\nAssertionError: '' != '# Reboot after installation\\nreboot\\n'\n+ # Reboot after installation\n+ reboot\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -18,7 +18,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.action == KS_REBOOT):", "+        if (self.action is not KS_REBOOT):", "             retval += '# Reboot after installation\\nreboot'", "             retval += (self._getArgsAsStr() + '\\n')", "         elif (self.action == KS_SHUTDOWN):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Eq_with_IsNot", "module-name": "pykickstart.commands.reboot"}, "11": {"result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 57, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 47, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 32, in runTest\n    self.assertEqual(str(cmd), \"# Reboot after installation\\nreboot\\n\")\n  File \"pykickstart.commands.reboot\", line 122, in __str__\n  File \"pykickstart.commands.reboot\", line 40, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -18,7 +18,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.action == KS_REBOOT):", "+        if (self.action not in KS_REBOOT):", "             retval += '# Reboot after installation\\nreboot'", "             retval += (self._getArgsAsStr() + '\\n')", "         elif (self.action == KS_SHUTDOWN):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Eq_with_NotIn", "module-name": "pykickstart.commands.reboot"}, "36": {"result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 85}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -41,7 +41,7 @@", "     removedKeywords = FC3_Reboot.removedKeywords", "     removedAttrs = FC3_Reboot.removedAttrs", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         FC3_Reboot.__init__(self, writePriority, *args, **kwargs)", "         self.op = self._getParser()", "         self.eject = kwargs.get('eject', False)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "number_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 1, "result-type": "normal", "op-name": "number_replacer", "module-name": "pykickstart.commands.reboot"}, "42": {"result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 57, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 47, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 32, in runTest\n    self.assertEqual(str(cmd), \"# Reboot after installation\\nreboot\\n\")\nAssertionError: '# Halt after installation\\nhalt\\n' != '# Reboot after installation\\nreboot\\n'\n- # Halt after installation\n?   ^^^\n+ # Reboot after installation\n?   ^^^^^\n- halt\n+ reboot\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -73,7 +73,7 @@", " ", "     def __str__(self):", "         retval = FC6_Reboot.__str__(self)", "-        if (self.action == KS_WAIT):", "+        if (self.action != KS_WAIT):", "             retval = '# Halt after installation\\nhalt'", "             retval += (self._getArgsAsStr() + '\\n')", "         return retval"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_NotEq", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 3, "result-type": "normal", "op-name": "replace_Eq_with_NotEq", "module-name": "pykickstart.commands.reboot"}, "4": {"result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 57, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 47, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 32, in runTest\n    self.assertEqual(str(cmd), \"# Reboot after installation\\nreboot\\n\")\n  File \"pykickstart.commands.reboot\", line 124, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -73,7 +73,7 @@", " ", "     def __str__(self):", "         retval = FC6_Reboot.__str__(self)", "-        if (self.action == KS_WAIT):", "+        if (self.action in KS_WAIT):", "             retval = '# Halt after installation\\nhalt'", "             retval += (self._getArgsAsStr() + '\\n')", "         return retval"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_In", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 3, "result-type": "normal", "op-name": "replace_Eq_with_In", "module-name": "pykickstart.commands.reboot"}, "24": {"result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -80,7 +80,7 @@", " ", "     def parse(self, args):", "         FC6_Reboot.parse(self, args)", "-        if (self.currentCmd == 'halt'):", "+        if (self.currentCmd <= 'halt'):", "             self.action = KS_WAIT", "         return self", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_LtE", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 4, "result-type": "normal", "op-name": "replace_Eq_with_LtE", "module-name": "pykickstart.commands.reboot"}, "44": {"result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 57, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 47, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 32, in runTest\n    self.assertEqual(str(cmd), \"# Reboot after installation\\nreboot\\n\")\nAssertionError: '' != '# Reboot after installation\\nreboot\\n'\n+ # Reboot after installation\n+ reboot\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -18,7 +18,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.action == KS_REBOOT):", "+        if (self.action < KS_REBOOT):", "             retval += '# Reboot after installation\\nreboot'", "             retval += (self._getArgsAsStr() + '\\n')", "         elif (self.action == KS_SHUTDOWN):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Eq_with_Lt", "module-name": "pykickstart.commands.reboot"}, "26": {"result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 57, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 47, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 35, in runTest\n    self.assertEqual(str(cmd), \"# Shutdown after installation\\nshutdown\\n\")\nAssertionError: '' != '# Shutdown after installation\\nshutdown\\n'\n+ # Shutdown after installation\n+ shutdown\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -21,7 +21,7 @@", "         if (self.action == KS_REBOOT):", "             retval += '# Reboot after installation\\nreboot'", "             retval += (self._getArgsAsStr() + '\\n')", "-        elif (self.action == KS_SHUTDOWN):", "+        elif (self.action > KS_SHUTDOWN):", "             retval += '# Shutdown after installation\\nshutdown'", "             retval += (self._getArgsAsStr() + '\\n')", "         return retval"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Eq_with_Gt", "module-name": "pykickstart.commands.reboot"}, "15": {"result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 57, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 47, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 31, in runTest\n    self.assertEqual(cmd.action, KS_REBOOT)\nAssertionError: 0 != 1\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -80,7 +80,7 @@", " ", "     def parse(self, args):", "         FC6_Reboot.parse(self, args)", "-        if (self.currentCmd == 'halt'):", "+        if (self.currentCmd not in 'halt'):", "             self.action = KS_WAIT", "         return self", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_NotIn", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 4, "result-type": "normal", "op-name": "replace_Eq_with_NotIn", "module-name": "pykickstart.commands.reboot"}, "38": {"result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 157}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -94,7 +94,7 @@", "     removedKeywords = F18_Reboot.removedKeywords", "     removedAttrs = F18_Reboot.removedAttrs", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         F18_Reboot.__init__(self, writePriority, *args, **kwargs)", "         self.op = self._getParser()", "         self.kexec = kwargs.get('kexec', False)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "number_replacer", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 3, "result-type": "normal", "op-name": "number_replacer", "module-name": "pykickstart.commands.reboot"}, "22": {"result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 57, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 47, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 43, in runTest\n    self.assertEqual(cmd.action, KS_SHUTDOWN)\nAssertionError: 1 != 2\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -27,7 +27,7 @@", "         return retval", " ", "     def parse(self, args):", "-        if (self.currentCmd == 'reboot'):", "+        if (self.currentCmd <= 'reboot'):", "             self.action = KS_REBOOT", "         else:", "             self.action = KS_SHUTDOWN"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_LtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Eq_with_LtE", "module-name": "pykickstart.commands.reboot"}, "17": {"result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 102}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 57, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 47, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 32, in runTest\n    self.assertEqual(str(cmd), \"# Reboot after installation\\nreboot\\n\")\nAssertionError: '# Reboot after installation\\nreboot --eject\\n' != '# Reboot after installation\\nreboot\\n'\n  # Reboot after installation\n- reboot --eject\n+ reboot\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -54,7 +54,7 @@", " ", "     def _getParser(self):", "         op = FC3_Reboot._getParser(self)", "-        op.add_argument('--eject', action='store_true', version=FC6, default=False, help='\\n                        Attempt to eject CD or DVD media before rebooting.\\n                        ')", "+        op.add_argument('--eject', action='store_true', version=FC6, default=True, help='\\n                        Attempt to eject CD or DVD media before rebooting.\\n                        ')", "         return op", " ", "     def parse(self, args):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "boolean_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 1, "result-type": "normal", "op-name": "boolean_replacer", "module-name": "pykickstart.commands.reboot"}, "47": {"result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 62, in runTest\n    self.assertEqual(str(cmd), \"# Halt after installation\\nhalt\\n\")\nAssertionError: '' != '# Halt after installation\\nhalt\\n'\n+ # Halt after installation\n+ halt\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -73,7 +73,7 @@", " ", "     def __str__(self):", "         retval = FC6_Reboot.__str__(self)", "-        if (self.action == KS_WAIT):", "+        if (self.action < KS_WAIT):", "             retval = '# Halt after installation\\nhalt'", "             retval += (self._getArgsAsStr() + '\\n')", "         return retval"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_Lt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 3, "result-type": "normal", "op-name": "replace_Eq_with_Lt", "module-name": "pykickstart.commands.reboot"}, "14": {"result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 57, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 47, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 32, in runTest\n    self.assertEqual(str(cmd), \"# Reboot after installation\\nreboot\\n\")\n  File \"pykickstart.commands.reboot\", line 124, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -73,7 +73,7 @@", " ", "     def __str__(self):", "         retval = FC6_Reboot.__str__(self)", "-        if (self.action == KS_WAIT):", "+        if (self.action not in KS_WAIT):", "             retval = '# Halt after installation\\nhalt'", "             retval += (self._getArgsAsStr() + '\\n')", "         return retval"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_NotIn", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 3, "result-type": "normal", "op-name": "replace_Eq_with_NotIn", "module-name": "pykickstart.commands.reboot"}, "35": {"result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 30}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -9,7 +9,7 @@", "     removedKeywords = KickstartCommand.removedKeywords", "     removedAttrs = KickstartCommand.removedAttrs", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         KickstartCommand.__init__(self, writePriority, *args, **kwargs)", "         self.action = kwargs.get('action', None)", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "number_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 0, "result-type": "normal", "op-name": "number_replacer", "module-name": "pykickstart.commands.reboot"}, "48": {"result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 61, in runTest\n    self.assertEqual(cmd.action, KS_WAIT)\nAssertionError: 2 != 0\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -80,7 +80,7 @@", " ", "     def parse(self, args):", "         FC6_Reboot.parse(self, args)", "-        if (self.currentCmd == 'halt'):", "+        if (self.currentCmd < 'halt'):", "             self.action = KS_WAIT", "         return self", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_Lt", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 4, "result-type": "normal", "op-name": "replace_Eq_with_Lt", "module-name": "pykickstart.commands.reboot"}, "39": {"result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 57, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 47, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 32, in runTest\n    self.assertEqual(str(cmd), \"# Reboot after installation\\nreboot\\n\")\nAssertionError: '' != '# Reboot after installation\\nreboot\\n'\n+ # Reboot after installation\n+ reboot\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -18,7 +18,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.action == KS_REBOOT):", "+        if (self.action != KS_REBOOT):", "             retval += '# Reboot after installation\\nreboot'", "             retval += (self._getArgsAsStr() + '\\n')", "         elif (self.action == KS_SHUTDOWN):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Eq_with_NotEq", "module-name": "pykickstart.commands.reboot"}, "27": {"result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 57, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 47, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 31, in runTest\n    self.assertEqual(cmd.action, KS_REBOOT)\nAssertionError: 2 != 1\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -27,7 +27,7 @@", "         return retval", " ", "     def parse(self, args):", "-        if (self.currentCmd == 'reboot'):", "+        if (self.currentCmd > 'reboot'):", "             self.action = KS_REBOOT", "         else:", "             self.action = KS_SHUTDOWN"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_Gt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Eq_with_Gt", "module-name": "pykickstart.commands.reboot"}, "53": {"result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 57, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 47, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 31, in runTest\n    self.assertEqual(cmd.action, KS_REBOOT)\nAssertionError: 0 != 1\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -80,7 +80,7 @@", " ", "     def parse(self, args):", "         FC6_Reboot.parse(self, args)", "-        if (self.currentCmd == 'halt'):", "+        if (self.currentCmd is not 'halt'):", "             self.action = KS_WAIT", "         return self", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_IsNot", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 4, "result-type": "normal", "op-name": "replace_Eq_with_IsNot", "module-name": "pykickstart.commands.reboot"}, "31": {"result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -21,7 +21,7 @@", "         if (self.action == KS_REBOOT):", "             retval += '# Reboot after installation\\nreboot'", "             retval += (self._getArgsAsStr() + '\\n')", "-        elif (self.action == KS_SHUTDOWN):", "+        elif (self.action >= KS_SHUTDOWN):", "             retval += '# Shutdown after installation\\nshutdown'", "             retval += (self._getArgsAsStr() + '\\n')", "         return retval"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Eq_with_GtE", "module-name": "pykickstart.commands.reboot"}, "12": {"result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 57, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 47, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 35, in runTest\n    self.assertEqual(str(cmd), \"# Shutdown after installation\\nshutdown\\n\")\n  File \"pykickstart.commands.reboot\", line 122, in __str__\n  File \"pykickstart.commands.reboot\", line 43, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -21,7 +21,7 @@", "         if (self.action == KS_REBOOT):", "             retval += '# Reboot after installation\\nreboot'", "             retval += (self._getArgsAsStr() + '\\n')", "-        elif (self.action == KS_SHUTDOWN):", "+        elif (self.action not in KS_SHUTDOWN):", "             retval += '# Shutdown after installation\\nshutdown'", "             retval += (self._getArgsAsStr() + '\\n')", "         return retval"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Eq_with_NotIn", "module-name": "pykickstart.commands.reboot"}, "1": {"result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 57, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 47, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 32, in runTest\n    self.assertEqual(str(cmd), \"# Reboot after installation\\nreboot\\n\")\n  File \"pykickstart.commands.reboot\", line 122, in __str__\n  File \"pykickstart.commands.reboot\", line 40, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -18,7 +18,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.action == KS_REBOOT):", "+        if (self.action in KS_REBOOT):", "             retval += '# Reboot after installation\\nreboot'", "             retval += (self._getArgsAsStr() + '\\n')", "         elif (self.action == KS_SHUTDOWN):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Eq_with_In", "module-name": "pykickstart.commands.reboot"}, "13": {"result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 57, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 47, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 31, in runTest\n    self.assertEqual(cmd.action, KS_REBOOT)\nAssertionError: 2 != 1\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -27,7 +27,7 @@", "         return retval", " ", "     def parse(self, args):", "-        if (self.currentCmd == 'reboot'):", "+        if (self.currentCmd not in 'reboot'):", "             self.action = KS_REBOOT", "         else:", "             self.action = KS_SHUTDOWN"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_NotIn", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Eq_with_NotIn", "module-name": "pykickstart.commands.reboot"}, "8": {"result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 57, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 47, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 31, in runTest\n    self.assertEqual(cmd.action, KS_REBOOT)\nAssertionError: 2 != 1\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -27,7 +27,7 @@", "         return retval", " ", "     def parse(self, args):", "-        if (self.currentCmd == 'reboot'):", "+        if (self.currentCmd is 'reboot'):", "             self.action = KS_REBOOT", "         else:", "             self.action = KS_SHUTDOWN"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_Is", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Eq_with_Is", "module-name": "pykickstart.commands.reboot"}, "5": {"result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -80,7 +80,7 @@", " ", "     def parse(self, args):", "         FC6_Reboot.parse(self, args)", "-        if (self.currentCmd == 'halt'):", "+        if (self.currentCmd in 'halt'):", "             self.action = KS_WAIT", "         return self", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_In", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 4, "result-type": "normal", "op-name": "replace_Eq_with_In", "module-name": "pykickstart.commands.reboot"}, "37": {"result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 117}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -67,7 +67,7 @@", "     removedKeywords = FC6_Reboot.removedKeywords", "     removedAttrs = FC6_Reboot.removedAttrs", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         FC6_Reboot.__init__(self, writePriority, *args, **kwargs)", "         self.op = self._getParser()", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "number_replacer", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 2, "result-type": "normal", "op-name": "number_replacer", "module-name": "pykickstart.commands.reboot"}, "20": {"result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -18,7 +18,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.action == KS_REBOOT):", "+        if (self.action <= KS_REBOOT):", "             retval += '# Reboot after installation\\nreboot'", "             retval += (self._getArgsAsStr() + '\\n')", "         elif (self.action == KS_SHUTDOWN):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Eq_with_LtE", "module-name": "pykickstart.commands.reboot"}, "16": {"result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 89}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -44,7 +44,7 @@", "     def __init__(self, writePriority=0, *args, **kwargs):", "         FC3_Reboot.__init__(self, writePriority, *args, **kwargs)", "         self.op = self._getParser()", "-        self.eject = kwargs.get('eject', False)", "+        self.eject = kwargs.get('eject', True)", " ", "     def _getArgsAsStr(self):", "         retval = FC3_Reboot._getArgsAsStr(self)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "boolean_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 0, "result-type": "normal", "op-name": "boolean_replacer", "module-name": "pykickstart.commands.reboot"}, "18": {"result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 161}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -97,7 +97,7 @@", "     def __init__(self, writePriority=0, *args, **kwargs):", "         F18_Reboot.__init__(self, writePriority, *args, **kwargs)", "         self.op = self._getParser()", "-        self.kexec = kwargs.get('kexec', False)", "+        self.kexec = kwargs.get('kexec', True)", " ", "     def _getArgsAsStr(self):", "         retval = F18_Reboot._getArgsAsStr(self)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "boolean_replacer", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 2, "result-type": "normal", "op-name": "boolean_replacer", "module-name": "pykickstart.commands.reboot"}, "45": {"result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 57, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 47, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 35, in runTest\n    self.assertEqual(str(cmd), \"# Shutdown after installation\\nshutdown\\n\")\nAssertionError: '' != '# Shutdown after installation\\nshutdown\\n'\n+ # Shutdown after installation\n+ shutdown\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -21,7 +21,7 @@", "         if (self.action == KS_REBOOT):", "             retval += '# Reboot after installation\\nreboot'", "             retval += (self._getArgsAsStr() + '\\n')", "-        elif (self.action == KS_SHUTDOWN):", "+        elif (self.action < KS_SHUTDOWN):", "             retval += '# Shutdown after installation\\nshutdown'", "             retval += (self._getArgsAsStr() + '\\n')", "         return retval"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Eq_with_Lt", "module-name": "pykickstart.commands.reboot"}, "9": {"result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -73,7 +73,7 @@", " ", "     def __str__(self):", "         retval = FC6_Reboot.__str__(self)", "-        if (self.action == KS_WAIT):", "+        if (self.action is KS_WAIT):", "             retval = '# Halt after installation\\nhalt'", "             retval += (self._getArgsAsStr() + '\\n')", "         return retval"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_Is", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 3, "result-type": "normal", "op-name": "replace_Eq_with_Is", "module-name": "pykickstart.commands.reboot"}, "33": {"result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 57, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 47, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 32, in runTest\n    self.assertEqual(str(cmd), \"# Reboot after installation\\nreboot\\n\")\nAssertionError: '# Halt after installation\\nhalt\\n' != '# Reboot after installation\\nreboot\\n'\n- # Halt after installation\n?   ^^^\n+ # Reboot after installation\n?   ^^^^^\n- halt\n+ reboot\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -73,7 +73,7 @@", " ", "     def __str__(self):", "         retval = FC6_Reboot.__str__(self)", "-        if (self.action == KS_WAIT):", "+        if (self.action >= KS_WAIT):", "             retval = '# Halt after installation\\nhalt'", "             retval += (self._getArgsAsStr() + '\\n')", "         return retval"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_GtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 3, "result-type": "normal", "op-name": "replace_Eq_with_GtE", "module-name": "pykickstart.commands.reboot"}, "23": {"result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -73,7 +73,7 @@", " ", "     def __str__(self):", "         retval = FC6_Reboot.__str__(self)", "-        if (self.action == KS_WAIT):", "+        if (self.action <= KS_WAIT):", "             retval = '# Halt after installation\\nhalt'", "             retval += (self._getArgsAsStr() + '\\n')", "         return retval"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_LtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 3, "result-type": "normal", "op-name": "replace_Eq_with_LtE", "module-name": "pykickstart.commands.reboot"}, "21": {"result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -21,7 +21,7 @@", "         if (self.action == KS_REBOOT):", "             retval += '# Reboot after installation\\nreboot'", "             retval += (self._getArgsAsStr() + '\\n')", "-        elif (self.action == KS_SHUTDOWN):", "+        elif (self.action <= KS_SHUTDOWN):", "             retval += '# Shutdown after installation\\nshutdown'", "             retval += (self._getArgsAsStr() + '\\n')", "         return retval"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Eq_with_LtE", "module-name": "pykickstart.commands.reboot"}, "7": {"result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -21,7 +21,7 @@", "         if (self.action == KS_REBOOT):", "             retval += '# Reboot after installation\\nreboot'", "             retval += (self._getArgsAsStr() + '\\n')", "-        elif (self.action == KS_SHUTDOWN):", "+        elif (self.action is KS_SHUTDOWN):", "             retval += '# Shutdown after installation\\nshutdown'", "             retval += (self._getArgsAsStr() + '\\n')", "         return retval"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Eq_with_Is", "module-name": "pykickstart.commands.reboot"}, "28": {"result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 57, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 47, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reboot.py\", line 32, in runTest\n    self.assertEqual(str(cmd), \"# Reboot after installation\\nreboot\\n\")\nAssertionError: '# Halt after installation\\nhalt\\n' != '# Reboot after installation\\nreboot\\n'\n- # Halt after installation\n?   ^^^\n+ # Reboot after installation\n?   ^^^^^\n- halt\n+ reboot\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reboot.py", "@@ -73,7 +73,7 @@", " ", "     def __str__(self):", "         retval = FC6_Reboot.__str__(self)", "-        if (self.action == KS_WAIT):", "+        if (self.action > KS_WAIT):", "             retval = '# Halt after installation\\nhalt'", "             retval += (self._getArgsAsStr() + '\\n')", "         return retval"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.reboot", "replace_Eq_with_Gt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"], "occurrence": 3, "result-type": "normal", "op-name": "replace_Eq_with_Gt", "module-name": "pykickstart.commands.reboot"}}, "work-parameters": {"1": {"timeout": 9.95721, "test-runner": "nose", "test-args": ["-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reboot.py"]}}, "_default": {}}