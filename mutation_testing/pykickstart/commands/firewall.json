{"work-items": {"87": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Is_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Is_with_Eq", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithEq"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -18,7 +18,7 @@", "         extra = []", "         filteredPorts = []", "         retval = KickstartCommand.__str__(self)", "-        if (self.enabled is None):", "+        if (self.enabled == None):", "             return retval", "         if self.enabled:", "             for port in self.ports:"]]], "module-name": "pykickstart.commands.firewall"}, "32": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_Gt", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 4, "result-type": "normal", "op-name": "replace_Eq_with_Gt", "result-data": [{"occurrence": 4, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 36, in runTest\n    \"firewall --enabled --port=imap:tcp --trust=eth0 --service=ssh\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --ftp --trust=eth0 --service=ssh\\n' != 'firewall --enabled --port=imap:tcp --trust=eth0 --service=ssh\\n'\n- firewall --enabled --ftp --trust=eth0 --service=ssh\n?                      ^\n+ firewall --enabled --port=imap:tcp --trust=eth0 --service=ssh\n?                      ^^^ ++++ ++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -30,7 +30,7 @@", "                     extra.append(' --smtp')", "                 elif (port == 'http:tcp'):", "                     extra.append(' --http')", "-                elif (port == 'ftp:tcp'):", "+                elif (port > 'ftp:tcp'):", "                     extra.append(' --ftp')", "                 else:", "                     filteredPorts.append(port)"]]], "module-name": "pykickstart.commands.firewall"}, "35": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Is_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Is_with_NotIn", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firewall\", line 165, in __str__\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -96,7 +96,7 @@", "         self.services = kwargs.get('services', [])", " ", "     def __str__(self):", "-        if (self.enabled is None):", "+        if (self.enabled not in None):", "             return ''", "         retval = F9_Firewall.__str__(self)", "         if self.enabled:"]]], "module-name": "pykickstart.commands.firewall"}, "49": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_Is", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 4, "result-type": "normal", "op-name": "replace_Eq_with_Is", "result-data": [{"occurrence": 4, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 45, in runTest\n    \"firewall --enabled --ssh --telnet --smtp --http --ftp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --ssh --telnet --smtp --http --port=ftp:tcp\\n' != 'firewall --enabled --ssh --telnet --smtp --http --ftp\\n'\n- firewall --enabled --ssh --telnet --smtp --http --port=ftp:tcp\n?                                                   -----   ----\n+ firewall --enabled --ssh --telnet --smtp --http --ftp\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -30,7 +30,7 @@", "                     extra.append(' --smtp')", "                 elif (port == 'http:tcp'):", "                     extra.append(' --http')", "-                elif (port == 'ftp:tcp'):", "+                elif (port is 'ftp:tcp'):", "                     extra.append(' --ftp')", "                 else:", "                     filteredPorts.append(port)"]]], "module-name": "pykickstart.commands.firewall"}, "39": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Is_with_LtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Is_with_LtE", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 99, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 92, in runTest\n    F10_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firewall\", line 233, in __str__\nTypeError: unorderable types: bool() <= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -141,7 +141,7 @@", "         return op", " ", "     def __str__(self):", "-        if (self.enabled is None):", "+        if (self.enabled <= None):", "             return ''", "         retval = F14_Firewall.__str__(self)", "         if self.enabled:"]]], "module-name": "pykickstart.commands.firewall"}, "44": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "boolean_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 0, "result-type": "normal", "op-name": "boolean_replacer", "result-data": [{"occurrence": 0, "line_number": 105, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -60,7 +60,7 @@", "             return retval", "         op = KSOptionParser(prog='firewall', description='\\n                            This option corresponds to the Firewall Configuration\\n                            screen in the installation program', version=FC3)", "         op.add_argument('--disable', '--disabled', dest='enabled', action='store_false', version=FC3, help='Do not configure any iptables rules.')", "-        op.add_argument('--enable', '--enabled', dest='enabled', action='store_true', default=True, help='\\n                        Reject incoming connections that are not in response\\n                        to outbound requests, such as DNS replies or DHCP\\n                        requests. If access to services running on this machine\\n                        is needed, you can choose to allow specific services\\n                        through the firewall.', version=FC3)", "+        op.add_argument('--enable', '--enabled', dest='enabled', action='store_true', default=False, help='\\n                        Reject incoming connections that are not in response\\n                        to outbound requests, such as DNS replies or DHCP\\n                        requests. If access to services running on this machine\\n                        is needed, you can choose to allow specific services\\n                        through the firewall.', version=FC3)", "         op.add_argument('--ftp', dest='ports', action='append_const', const='21:tcp', version=FC3, help='')", "         op.add_argument('--http', dest='ports', action=ExtendConstAction, const=['80:tcp', '443:tcp'], nargs=0, version=FC3, help='')", "         op.add_argument('--smtp', dest='ports', action='append_const', const='25:tcp', version=FC3, help='')"]]], "module-name": "pykickstart.commands.firewall"}, "21": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Is_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Is_with_NotEq", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithNotEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '\\n' != 'firewall --enabled --port=47:tcp\\n'\n- \n+ firewall --enabled --port=47:tcp\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -18,7 +18,7 @@", "         extra = []", "         filteredPorts = []", "         retval = KickstartCommand.__str__(self)", "-        if (self.enabled is None):", "+        if (self.enabled != None):", "             return retval", "         if self.enabled:", "             for port in self.ports:"]]], "module-name": "pykickstart.commands.firewall"}, "3": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_NotEq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Gt_with_NotEq", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotEq"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -102,7 +102,7 @@", "         if self.enabled:", "             retval = retval.strip()", "             svcstr = ','.join(self.services)", "-            if (len(svcstr) > 0):", "+            if (len(svcstr) != 0):", "                 svcstr = (' --service=' + svcstr)", "             else:", "                 svcstr = ''"]]], "module-name": "pykickstart.commands.firewall"}, "102": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Eq_with_LtE", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --ssh\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --ssh\n?                      ^^^\n+ firewall --enabled --port=47:tcp\n?                      ^^^^^^^^^^^\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -22,7 +22,7 @@", "             return retval", "         if self.enabled:", "             for port in self.ports:", "-                if (port == 'ssh:tcp'):", "+                if (port <= 'ssh:tcp'):", "                     extra.append(' --ssh')", "                 elif (port == 'telnet:tcp'):", "                     extra.append(' --telnet')"]]], "module-name": "pykickstart.commands.firewall"}, "118": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_GtE", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 5, "result-type": "normal", "op-name": "replace_Eq_with_GtE", "result-data": [{"occurrence": 5, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 36, in runTest\n    \"firewall --enabled --port=imap:tcp --trust=eth0 --service=ssh\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --port=imap:tcp:tcp --trust=eth0 --service=ssh\\n' != 'firewall --enabled --port=imap:tcp --trust=eth0 --service=ssh\\n'\n- firewall --enabled --port=imap:tcp:tcp --trust=eth0 --service=ssh\n?                                   ----\n+ firewall --enabled --port=imap:tcp --trust=eth0 --service=ssh\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -54,7 +54,7 @@", "             retval = []", "             for p in value.split(','):", "                 p = p.strip()", "-                if (p.find(':') == (- 1)):", "+                if (p.find(':') >= (- 1)):", "                     p = ('%s:tcp' % p)", "                 retval.append(p)", "             return retval"]]], "module-name": "pykickstart.commands.firewall"}, "30": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_Gt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Eq_with_Gt", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 45, in runTest\n    \"firewall --enabled --ssh --telnet --smtp --http --ftp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --ssh --telnet --http --ftp --port=smtp:tcp\\n' != 'firewall --enabled --ssh --telnet --smtp --http --ftp\\n'\n- firewall --enabled --ssh --telnet --http --ftp --port=smtp:tcp\n?                                               ----------------\n+ firewall --enabled --ssh --telnet --smtp --http --ftp\n?                                   +++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -26,7 +26,7 @@", "                     extra.append(' --ssh')", "                 elif (port == 'telnet:tcp'):", "                     extra.append(' --telnet')", "-                elif (port == 'smtp:tcp'):", "+                elif (port > 'smtp:tcp'):", "                     extra.append(' --smtp')", "                 elif (port == 'http:tcp'):", "                     extra.append(' --http')"]]], "module-name": "pykickstart.commands.firewall"}, "38": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Is_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Is_with_LtE", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firewall\", line 165, in __str__\nTypeError: unorderable types: bool() <= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -96,7 +96,7 @@", "         self.services = kwargs.get('services', [])", " ", "     def __str__(self):", "-        if (self.enabled is None):", "+        if (self.enabled <= None):", "             return ''", "         retval = F9_Firewall.__str__(self)", "         if self.enabled:"]]], "module-name": "pykickstart.commands.firewall"}, "103": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Eq_with_LtE", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --telnet\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --telnet\n?                       ^^^^\n+ firewall --enabled --port=47:tcp\n?                      +++ ^^^^ ++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -24,7 +24,7 @@", "             for port in self.ports:", "                 if (port == 'ssh:tcp'):", "                     extra.append(' --ssh')", "-                elif (port == 'telnet:tcp'):", "+                elif (port <= 'telnet:tcp'):", "                     extra.append(' --telnet')", "                 elif (port == 'smtp:tcp'):", "                     extra.append(' --smtp')"]]], "module-name": "pykickstart.commands.firewall"}, "74": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_In", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 4, "result-type": "normal", "op-name": "replace_Eq_with_In", "result-data": [{"occurrence": 4, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -30,7 +30,7 @@", "                     extra.append(' --smtp')", "                 elif (port == 'http:tcp'):", "                     extra.append(' --http')", "-                elif (port == 'ftp:tcp'):", "+                elif (port in 'ftp:tcp'):", "                     extra.append(' --ftp')", "                 else:", "                     filteredPorts.append(port)"]]], "module-name": "pykickstart.commands.firewall"}, "27": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_NotIn", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 3, "result-type": "normal", "op-name": "replace_Gt_with_NotIn", "result-data": [{"occurrence": 3, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 99, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 92, in runTest\n    F10_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firewall\", line 241, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -147,7 +147,7 @@", "         if self.enabled:", "             retval = retval.strip()", "             svcstr = ','.join(self.remove_services)", "-            if (len(svcstr) > 0):", "+            if (len(svcstr) not in 0):", "                 svcstr = (' --remove-service=' + svcstr)", "             else:", "                 svcstr = ''"]]], "module-name": "pykickstart.commands.firewall"}, "31": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_Gt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 3, "result-type": "normal", "op-name": "replace_Eq_with_Gt", "result-data": [{"occurrence": 3, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 36, in runTest\n    \"firewall --enabled --port=imap:tcp --trust=eth0 --service=ssh\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --http --trust=eth0 --service=ssh\\n' != 'firewall --enabled --port=imap:tcp --trust=eth0 --service=ssh\\n'\n- firewall --enabled --http --trust=eth0 --service=ssh\n?                      ^\n+ firewall --enabled --port=imap:tcp --trust=eth0 --service=ssh\n?                      ^^^ ++++++ +\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -28,7 +28,7 @@", "                     extra.append(' --telnet')", "                 elif (port == 'smtp:tcp'):", "                     extra.append(' --smtp')", "-                elif (port == 'http:tcp'):", "+                elif (port > 'http:tcp'):", "                     extra.append(' --http')", "                 elif (port == 'ftp:tcp'):", "                     extra.append(' --ftp')"]]], "module-name": "pykickstart.commands.firewall"}, "36": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Is_with_NotIn", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Is_with_NotIn", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 99, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 92, in runTest\n    F10_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firewall\", line 233, in __str__\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -141,7 +141,7 @@", "         return op", " ", "     def __str__(self):", "-        if (self.enabled is None):", "+        if (self.enabled not in None):", "             return ''", "         retval = F14_Firewall.__str__(self)", "         if self.enabled:"]]], "module-name": "pykickstart.commands.firewall"}, "16": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Eq_with_NotIn", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --telnet\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --telnet\n?                       ^^^^\n+ firewall --enabled --port=47:tcp\n?                      +++ ^^^^ ++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -24,7 +24,7 @@", "             for port in self.ports:", "                 if (port == 'ssh:tcp'):", "                     extra.append(' --ssh')", "-                elif (port == 'telnet:tcp'):", "+                elif (port not in 'telnet:tcp'):", "                     extra.append(' --telnet')", "                 elif (port == 'smtp:tcp'):", "                     extra.append(' --smtp')"]]], "module-name": "pykickstart.commands.firewall"}, "93": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Is_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Is_with_Gt", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithGt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firewall\", line 168, in __str__\n  File \"pykickstart.commands.firewall\", line 42, in __str__\nTypeError: unorderable types: bool() > NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -18,7 +18,7 @@", "         extra = []", "         filteredPorts = []", "         retval = KickstartCommand.__str__(self)", "-        if (self.enabled is None):", "+        if (self.enabled > None):", "             return retval", "         if self.enabled:", "             for port in self.ports:"]]], "module-name": "pykickstart.commands.firewall"}, "19": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_NotIn", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 4, "result-type": "normal", "op-name": "replace_Eq_with_NotIn", "result-data": [{"occurrence": 4, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --ftp\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --ftp\n?                      ^\n+ firewall --enabled --port=47:tcp\n?                      ^^^ ++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -30,7 +30,7 @@", "                     extra.append(' --smtp')", "                 elif (port == 'http:tcp'):", "                     extra.append(' --http')", "-                elif (port == 'ftp:tcp'):", "+                elif (port not in 'ftp:tcp'):", "                     extra.append(' --ftp')", "                 else:", "                     filteredPorts.append(port)"]]], "module-name": "pykickstart.commands.firewall"}, "121": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_In", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Gt_with_In", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firewall\", line 173, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -102,7 +102,7 @@", "         if self.enabled:", "             retval = retval.strip()", "             svcstr = ','.join(self.services)", "-            if (len(svcstr) > 0):", "+            if (len(svcstr) in 0):", "                 svcstr = (' --service=' + svcstr)", "             else:", "                 svcstr = ''"]]], "module-name": "pykickstart.commands.firewall"}, "59": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "number_replacer", "8", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 8, "result-type": "normal", "op-name": "number_replacer", "result-data": [{"occurrence": 8, "line_number": 241, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -147,7 +147,7 @@", "         if self.enabled:", "             retval = retval.strip()", "             svcstr = ','.join(self.remove_services)", "-            if (len(svcstr) > 0):", "+            if (len(svcstr) > 1):", "                 svcstr = (' --remove-service=' + svcstr)", "             else:", "                 svcstr = ''"]]], "module-name": "pykickstart.commands.firewall"}, "99": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_IsNot", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 3, "result-type": "normal", "op-name": "replace_Eq_with_IsNot", "result-data": [{"occurrence": 3, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --http\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --http\n?                      ^\n+ firewall --enabled --port=47:tcp\n?                      ^^^ ++++ +\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -28,7 +28,7 @@", "                     extra.append(' --telnet')", "                 elif (port == 'smtp:tcp'):", "                     extra.append(' --smtp')", "-                elif (port == 'http:tcp'):", "+                elif (port is not 'http:tcp'):", "                     extra.append(' --http')", "                 elif (port == 'ftp:tcp'):", "                     extra.append(' --ftp')"]]], "module-name": "pykickstart.commands.firewall"}, "34": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Is_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Is_with_NotIn", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firewall\", line 168, in __str__\n  File \"pykickstart.commands.firewall\", line 42, in __str__\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -18,7 +18,7 @@", "         extra = []", "         filteredPorts = []", "         retval = KickstartCommand.__str__(self)", "-        if (self.enabled is None):", "+        if (self.enabled not in None):", "             return retval", "         if self.enabled:", "             for port in self.ports:"]]], "module-name": "pykickstart.commands.firewall"}, "106": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_LtE", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 4, "result-type": "normal", "op-name": "replace_Eq_with_LtE", "result-data": [{"occurrence": 4, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --ftp\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --ftp\n?                      ^\n+ firewall --enabled --port=47:tcp\n?                      ^^^ ++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -30,7 +30,7 @@", "                     extra.append(' --smtp')", "                 elif (port == 'http:tcp'):", "                     extra.append(' --http')", "-                elif (port == 'ftp:tcp'):", "+                elif (port <= 'ftp:tcp'):", "                     extra.append(' --ftp')", "                 else:", "                     filteredPorts.append(port)"]]], "module-name": "pykickstart.commands.firewall"}, "9": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Gt_with_GtE", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --port=47:tcp --trust=\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --port=47:tcp --trust=\n?                                 ---------\n+ firewall --enabled --port=47:tcp\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -41,7 +41,7 @@", "                 portstr = ''", "             extrastr = ''.join(extra)", "             truststr = ','.join(self.trusts)", "-            if (len(truststr) > 0):", "+            if (len(truststr) >= 0):", "                 truststr = (' --trust=' + truststr)", "             retval += ('# Firewall configuration\\nfirewall --enabled%s%s%s\\n' % (extrastr, portstr, truststr))", "         else:"]]], "module-name": "pykickstart.commands.firewall"}, "85": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_IsNot", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Gt_with_IsNot", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIsNot"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -102,7 +102,7 @@", "         if self.enabled:", "             retval = retval.strip()", "             svcstr = ','.join(self.services)", "-            if (len(svcstr) > 0):", "+            if (len(svcstr) is not 0):", "                 svcstr = (' --service=' + svcstr)", "             else:", "                 svcstr = ''"]]], "module-name": "pykickstart.commands.firewall"}, "90": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Is_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Is_with_GtE", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firewall\", line 168, in __str__\n  File \"pykickstart.commands.firewall\", line 42, in __str__\nTypeError: unorderable types: bool() >= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -18,7 +18,7 @@", "         extra = []", "         filteredPorts = []", "         retval = KickstartCommand.__str__(self)", "-        if (self.enabled is None):", "+        if (self.enabled >= None):", "             return retval", "         if self.enabled:", "             for port in self.ports:"]]], "module-name": "pykickstart.commands.firewall"}, "107": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_LtE", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 5, "result-type": "normal", "op-name": "replace_Eq_with_LtE", "result-data": [{"occurrence": 5, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -54,7 +54,7 @@", "             retval = []", "             for p in value.split(','):", "                 p = p.strip()", "-                if (p.find(':') == (- 1)):", "+                if (p.find(':') <= (- 1)):", "                     p = ('%s:tcp' % p)", "                 retval.append(p)", "             return retval"]]], "module-name": "pykickstart.commands.firewall"}, "29": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Eq_with_Gt", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 45, in runTest\n    \"firewall --enabled --ssh --telnet --smtp --http --ftp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --ssh --smtp --http --ftp --port=telnet:tcp\\n' != 'firewall --enabled --ssh --telnet --smtp --http --ftp\\n'\n- firewall --enabled --ssh --smtp --http --ftp --port=telnet:tcp\n?                                             ------------------\n+ firewall --enabled --ssh --telnet --smtp --http --ftp\n?                         +++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -24,7 +24,7 @@", "             for port in self.ports:", "                 if (port == 'ssh:tcp'):", "                     extra.append(' --ssh')", "-                elif (port == 'telnet:tcp'):", "+                elif (port > 'telnet:tcp'):", "                     extra.append(' --telnet')", "                 elif (port == 'smtp:tcp'):", "                     extra.append(' --smtp')"]]], "module-name": "pykickstart.commands.firewall"}, "13": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Is_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Is_with_Lt", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firewall\", line 165, in __str__\nTypeError: unorderable types: bool() < NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -96,7 +96,7 @@", "         self.services = kwargs.get('services', [])", " ", "     def __str__(self):", "-        if (self.enabled is None):", "+        if (self.enabled < None):", "             return ''", "         retval = F9_Firewall.__str__(self)", "         if self.enabled:"]]], "module-name": "pykickstart.commands.firewall"}, "112": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "arithmetic_operator_deletion", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 0, "result-type": "normal", "op-name": "arithmetic_operator_deletion", "result-data": [{"occurrence": 0, "line_number": 90, "operator": "cosmic_ray.operators.arithmetic_operator_deletion.ReverseUnarySub"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --port=47\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --port=47\n+ firewall --enabled --port=47:tcp\n?                             ++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -54,7 +54,7 @@", "             retval = []", "             for p in value.split(','):", "                 p = p.strip()", "-                if (p.find(':') == (- 1)):", "+                if (p.find(':') == (+ 1)):", "                     p = ('%s:tcp' % p)", "                 retval.append(p)", "             return retval"]]], "module-name": "pykickstart.commands.firewall"}, "96": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Eq_with_IsNot", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --ssh\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --ssh\n?                      ^^^\n+ firewall --enabled --port=47:tcp\n?                      ^^^^^^^^^^^\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -22,7 +22,7 @@", "             return retval", "         if self.enabled:", "             for port in self.ports:", "-                if (port == 'ssh:tcp'):", "+                if (port is not 'ssh:tcp'):", "                     extra.append(' --ssh')", "                 elif (port == 'telnet:tcp'):", "                     extra.append(' --telnet')"]]], "module-name": "pykickstart.commands.firewall"}, "82": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_Lt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 3, "result-type": "normal", "op-name": "replace_Gt_with_Lt", "result-data": [{"occurrence": 3, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 103, in runTest\n    \"firewall --enabled --remove-service=mdns\\n\")  # remove only\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled\\n' != 'firewall --enabled --remove-service=mdns\\n'\n- firewall --enabled\n+ firewall --enabled --remove-service=mdns\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -147,7 +147,7 @@", "         if self.enabled:", "             retval = retval.strip()", "             svcstr = ','.join(self.remove_services)", "-            if (len(svcstr) > 0):", "+            if (len(svcstr) < 0):", "                 svcstr = (' --remove-service=' + svcstr)", "             else:", "                 svcstr = ''"]]], "module-name": "pykickstart.commands.firewall"}, "56": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "number_replacer", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 5, "result-type": "normal", "op-name": "number_replacer", "result-data": [{"occurrence": 5, "line_number": 160, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -91,7 +91,7 @@", "     removedKeywords = F9_Firewall.removedKeywords", "     removedAttrs = F9_Firewall.removedAttrs", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         F9_Firewall.__init__(self, writePriority, *args, **kwargs)", "         self.services = kwargs.get('services', [])", " "]]], "module-name": "pykickstart.commands.firewall"}, "125": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_Lt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Eq_with_Lt", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --smtp\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --smtp\n?                      ^^\n+ firewall --enabled --port=47:tcp\n?                      ^^^ ++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -26,7 +26,7 @@", "                     extra.append(' --ssh')", "                 elif (port == 'telnet:tcp'):", "                     extra.append(' --telnet')", "-                elif (port == 'smtp:tcp'):", "+                elif (port < 'smtp:tcp'):", "                     extra.append(' --smtp')", "                 elif (port == 'http:tcp'):", "                     extra.append(' --http')"]]], "module-name": "pykickstart.commands.firewall"}, "122": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_In", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 3, "result-type": "normal", "op-name": "replace_Gt_with_In", "result-data": [{"occurrence": 3, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 99, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 92, in runTest\n    F10_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firewall\", line 241, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -147,7 +147,7 @@", "         if self.enabled:", "             retval = retval.strip()", "             svcstr = ','.join(self.remove_services)", "-            if (len(svcstr) > 0):", "+            if (len(svcstr) in 0):", "                 svcstr = (' --remove-service=' + svcstr)", "             else:", "                 svcstr = ''"]]], "module-name": "pykickstart.commands.firewall"}, "66": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_NotEq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Eq_with_NotEq", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --smtp\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --smtp\n?                      ^^\n+ firewall --enabled --port=47:tcp\n?                      ^^^ ++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -26,7 +26,7 @@", "                     extra.append(' --ssh')", "                 elif (port == 'telnet:tcp'):", "                     extra.append(' --telnet')", "-                elif (port == 'smtp:tcp'):", "+                elif (port != 'smtp:tcp'):", "                     extra.append(' --smtp')", "                 elif (port == 'http:tcp'):", "                     extra.append(' --http')"]]], "module-name": "pykickstart.commands.firewall"}, "2": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Gt_with_NotEq", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotEq"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -41,7 +41,7 @@", "                 portstr = ''", "             extrastr = ''.join(extra)", "             truststr = ','.join(self.trusts)", "-            if (len(truststr) > 0):", "+            if (len(truststr) != 0):", "                 truststr = (' --trust=' + truststr)", "             retval += ('# Firewall configuration\\nfirewall --enabled%s%s%s\\n' % (extrastr, portstr, truststr))", "         else:"]]], "module-name": "pykickstart.commands.firewall"}, "110": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_LtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Gt_with_LtE", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --port=47:tcp --service=\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --port=47:tcp --service=\n?                                 -----------\n+ firewall --enabled --port=47:tcp\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -102,7 +102,7 @@", "         if self.enabled:", "             retval = retval.strip()", "             svcstr = ','.join(self.services)", "-            if (len(svcstr) > 0):", "+            if (len(svcstr) <= 0):", "                 svcstr = (' --service=' + svcstr)", "             else:", "                 svcstr = ''"]]], "module-name": "pykickstart.commands.firewall"}, "57": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "number_replacer", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 6, "result-type": "normal", "op-name": "number_replacer", "result-data": [{"occurrence": 6, "line_number": 173, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -102,7 +102,7 @@", "         if self.enabled:", "             retval = retval.strip()", "             svcstr = ','.join(self.services)", "-            if (len(svcstr) > 0):", "+            if (len(svcstr) > 1):", "                 svcstr = (' --service=' + svcstr)", "             else:", "                 svcstr = ''"]]], "module-name": "pykickstart.commands.firewall"}, "86": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_IsNot", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 3, "result-type": "normal", "op-name": "replace_Gt_with_IsNot", "result-data": [{"occurrence": 3, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIsNot"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -147,7 +147,7 @@", "         if self.enabled:", "             retval = retval.strip()", "             svcstr = ','.join(self.remove_services)", "-            if (len(svcstr) > 0):", "+            if (len(svcstr) is not 0):", "                 svcstr = (' --remove-service=' + svcstr)", "             else:", "                 svcstr = ''"]]], "module-name": "pykickstart.commands.firewall"}, "104": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_LtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Eq_with_LtE", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --smtp\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --smtp\n?                      ^^\n+ firewall --enabled --port=47:tcp\n?                      ^^^ ++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -26,7 +26,7 @@", "                     extra.append(' --ssh')", "                 elif (port == 'telnet:tcp'):", "                     extra.append(' --telnet')", "-                elif (port == 'smtp:tcp'):", "+                elif (port <= 'smtp:tcp'):", "                     extra.append(' --smtp')", "                 elif (port == 'http:tcp'):", "                     extra.append(' --http')"]]], "module-name": "pykickstart.commands.firewall"}, "127": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_Lt", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 4, "result-type": "normal", "op-name": "replace_Eq_with_Lt", "result-data": [{"occurrence": 4, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --ftp\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --ftp\n?                      ^\n+ firewall --enabled --port=47:tcp\n?                      ^^^ ++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -30,7 +30,7 @@", "                     extra.append(' --smtp')", "                 elif (port == 'http:tcp'):", "                     extra.append(' --http')", "-                elif (port == 'ftp:tcp'):", "+                elif (port < 'ftp:tcp'):", "                     extra.append(' --ftp')", "                 else:", "                     filteredPorts.append(port)"]]], "module-name": "pykickstart.commands.firewall"}, "105": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_LtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 3, "result-type": "normal", "op-name": "replace_Eq_with_LtE", "result-data": [{"occurrence": 3, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --http\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --http\n?                      ^\n+ firewall --enabled --port=47:tcp\n?                      ^^^ ++++ +\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -28,7 +28,7 @@", "                     extra.append(' --telnet')", "                 elif (port == 'smtp:tcp'):", "                     extra.append(' --smtp')", "-                elif (port == 'http:tcp'):", "+                elif (port <= 'http:tcp'):", "                     extra.append(' --http')", "                 elif (port == 'ftp:tcp'):", "                     extra.append(' --ftp')"]]], "module-name": "pykickstart.commands.firewall"}, "115": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_GtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Eq_with_GtE", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -26,7 +26,7 @@", "                     extra.append(' --ssh')", "                 elif (port == 'telnet:tcp'):", "                     extra.append(' --telnet')", "-                elif (port == 'smtp:tcp'):", "+                elif (port >= 'smtp:tcp'):", "                     extra.append(' --smtp')", "                 elif (port == 'http:tcp'):", "                     extra.append(' --http')"]]], "module-name": "pykickstart.commands.firewall"}, "114": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Eq_with_GtE", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -24,7 +24,7 @@", "             for port in self.ports:", "                 if (port == 'ssh:tcp'):", "                     extra.append(' --ssh')", "-                elif (port == 'telnet:tcp'):", "+                elif (port >= 'telnet:tcp'):", "                     extra.append(' --telnet')", "                 elif (port == 'smtp:tcp'):", "                     extra.append(' --smtp')"]]], "module-name": "pykickstart.commands.firewall"}, "108": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Gt_with_LtE", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled\n+ firewall --enabled --port=47:tcp\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -35,7 +35,7 @@", "                 else:", "                     filteredPorts.append(port)", "             portstr = ','.join(filteredPorts)", "-            if (len(portstr) > 0):", "+            if (len(portstr) <= 0):", "                 portstr = (' --port=' + portstr)", "             else:", "                 portstr = ''"]]], "module-name": "pykickstart.commands.firewall"}, "64": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Eq_with_NotEq", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --ssh\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --ssh\n?                      ^^^\n+ firewall --enabled --port=47:tcp\n?                      ^^^^^^^^^^^\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -22,7 +22,7 @@", "             return retval", "         if self.enabled:", "             for port in self.ports:", "-                if (port == 'ssh:tcp'):", "+                if (port != 'ssh:tcp'):", "                     extra.append(' --ssh')", "                 elif (port == 'telnet:tcp'):", "                     extra.append(' --telnet')"]]], "module-name": "pykickstart.commands.firewall"}, "79": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Gt_with_Lt", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled\n+ firewall --enabled --port=47:tcp\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -35,7 +35,7 @@", "                 else:", "                     filteredPorts.append(port)", "             portstr = ','.join(filteredPorts)", "-            if (len(portstr) > 0):", "+            if (len(portstr) < 0):", "                 portstr = (' --port=' + portstr)", "             else:", "                 portstr = ''"]]], "module-name": "pykickstart.commands.firewall"}, "8": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Gt_with_GtE", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 37, in runTest\n    self.assert_parse(\"firewall --enabled --ssh --ftp\", \"firewall --enabled --service=ssh,ftp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --port= --service=ssh,ftp\\n' != 'firewall --enabled --service=ssh,ftp\\n'\n- firewall --enabled --port= --service=ssh,ftp\n?                   --------\n+ firewall --enabled --service=ssh,ftp\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -35,7 +35,7 @@", "                 else:", "                     filteredPorts.append(port)", "             portstr = ','.join(filteredPorts)", "-            if (len(portstr) > 0):", "+            if (len(portstr) >= 0):", "                 portstr = (' --port=' + portstr)", "             else:", "                 portstr = ''"]]], "module-name": "pykickstart.commands.firewall"}, "71": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Eq_with_In", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -24,7 +24,7 @@", "             for port in self.ports:", "                 if (port == 'ssh:tcp'):", "                     extra.append(' --ssh')", "-                elif (port == 'telnet:tcp'):", "+                elif (port in 'telnet:tcp'):", "                     extra.append(' --telnet')", "                 elif (port == 'smtp:tcp'):", "                     extra.append(' --smtp')"]]], "module-name": "pykickstart.commands.firewall"}, "4": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_NotEq", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 3, "result-type": "normal", "op-name": "replace_Gt_with_NotEq", "result-data": [{"occurrence": 3, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotEq"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -147,7 +147,7 @@", "         if self.enabled:", "             retval = retval.strip()", "             svcstr = ','.join(self.remove_services)", "-            if (len(svcstr) > 0):", "+            if (len(svcstr) != 0):", "                 svcstr = (' --remove-service=' + svcstr)", "             else:", "                 svcstr = ''"]]], "module-name": "pykickstart.commands.firewall"}, "77": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Is_with_IsNot", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Is_with_IsNot", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithIsNot"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'firewall --enabled --port=47:tcp\\n'\n+ firewall --enabled --port=47:tcp\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -96,7 +96,7 @@", "         self.services = kwargs.get('services', [])", " ", "     def __str__(self):", "-        if (self.enabled is None):", "+        if (self.enabled is not None):", "             return ''", "         retval = F9_Firewall.__str__(self)", "         if self.enabled:"]]], "module-name": "pykickstart.commands.firewall"}, "81": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_Lt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Gt_with_Lt", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 36, in runTest\n    \"firewall --enabled --port=imap:tcp --trust=eth0 --service=ssh\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --port=imap:tcp --trust=eth0\\n' != 'firewall --enabled --port=imap:tcp --trust=eth0 --service=ssh\\n'\n- firewall --enabled --port=imap:tcp --trust=eth0\n+ firewall --enabled --port=imap:tcp --trust=eth0 --service=ssh\n?                                                ++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -102,7 +102,7 @@", "         if self.enabled:", "             retval = retval.strip()", "             svcstr = ','.join(self.services)", "-            if (len(svcstr) > 0):", "+            if (len(svcstr) < 0):", "                 svcstr = (' --service=' + svcstr)", "             else:", "                 svcstr = ''"]]], "module-name": "pykickstart.commands.firewall"}, "54": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "number_replacer", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 3, "result-type": "normal", "op-name": "number_replacer", "result-data": [{"occurrence": 3, "line_number": 90, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --port=47\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --port=47\n+ firewall --enabled --port=47:tcp\n?                             ++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -54,7 +54,7 @@", "             retval = []", "             for p in value.split(','):", "                 p = p.strip()", "-                if (p.find(':') == (- 1)):", "+                if (p.find(':') == (- 2)):", "                     p = ('%s:tcp' % p)", "                 retval.append(p)", "             return retval"]]], "module-name": "pykickstart.commands.firewall"}, "76": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Is_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Is_with_IsNot", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithIsNot"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '\\n' != 'firewall --enabled --port=47:tcp\\n'\n- \n+ firewall --enabled --port=47:tcp\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -18,7 +18,7 @@", "         extra = []", "         filteredPorts = []", "         retval = KickstartCommand.__str__(self)", "-        if (self.enabled is None):", "+        if (self.enabled is not None):", "             return retval", "         if self.enabled:", "             for port in self.ports:"]]], "module-name": "pykickstart.commands.firewall"}, "67": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_NotEq", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 3, "result-type": "normal", "op-name": "replace_Eq_with_NotEq", "result-data": [{"occurrence": 3, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --http\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --http\n?                      ^\n+ firewall --enabled --port=47:tcp\n?                      ^^^ ++++ +\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -28,7 +28,7 @@", "                     extra.append(' --telnet')", "                 elif (port == 'smtp:tcp'):", "                     extra.append(' --smtp')", "-                elif (port == 'http:tcp'):", "+                elif (port != 'http:tcp'):", "                     extra.append(' --http')", "                 elif (port == 'ftp:tcp'):", "                     extra.append(' --ftp')"]]], "module-name": "pykickstart.commands.firewall"}, "101": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_IsNot", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 5, "result-type": "normal", "op-name": "replace_Eq_with_IsNot", "result-data": [{"occurrence": 5, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --port=47\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --port=47\n+ firewall --enabled --port=47:tcp\n?                             ++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -54,7 +54,7 @@", "             retval = []", "             for p in value.split(','):", "                 p = p.strip()", "-                if (p.find(':') == (- 1)):", "+                if (p.find(':') is not (- 1)):", "                     p = ('%s:tcp' % p)", "                 retval.append(p)", "             return retval"]]], "module-name": "pykickstart.commands.firewall"}, "94": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Is_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Is_with_Gt", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithGt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firewall\", line 165, in __str__\nTypeError: unorderable types: bool() > NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -96,7 +96,7 @@", "         self.services = kwargs.get('services', [])", " ", "     def __str__(self):", "-        if (self.enabled is None):", "+        if (self.enabled > None):", "             return ''", "         retval = F9_Firewall.__str__(self)", "         if self.enabled:"]]], "module-name": "pykickstart.commands.firewall"}, "63": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_Eq", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 3, "result-type": "normal", "op-name": "replace_Gt_with_Eq", "result-data": [{"occurrence": 3, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 99, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 92, in runTest\n    F10_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --port=47:tcp --remove-service=\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --port=47:tcp --remove-service=\n?                                 ------------------\n+ firewall --enabled --port=47:tcp\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -147,7 +147,7 @@", "         if self.enabled:", "             retval = retval.strip()", "             svcstr = ','.join(self.remove_services)", "-            if (len(svcstr) > 0):", "+            if (len(svcstr) == 0):", "                 svcstr = (' --remove-service=' + svcstr)", "             else:", "                 svcstr = ''"]]], "module-name": "pykickstart.commands.firewall"}, "65": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Eq_with_NotEq", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --telnet\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --telnet\n?                       ^^^^\n+ firewall --enabled --port=47:tcp\n?                      +++ ^^^^ ++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -24,7 +24,7 @@", "             for port in self.ports:", "                 if (port == 'ssh:tcp'):", "                     extra.append(' --ssh')", "-                elif (port == 'telnet:tcp'):", "+                elif (port != 'telnet:tcp'):", "                     extra.append(' --telnet')", "                 elif (port == 'smtp:tcp'):", "                     extra.append(' --smtp')"]]], "module-name": "pykickstart.commands.firewall"}, "123": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Eq_with_Lt", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --ssh\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --ssh\n?                      ^^^\n+ firewall --enabled --port=47:tcp\n?                      ^^^^^^^^^^^\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -22,7 +22,7 @@", "             return retval", "         if self.enabled:", "             for port in self.ports:", "-                if (port == 'ssh:tcp'):", "+                if (port < 'ssh:tcp'):", "                     extra.append(' --ssh')", "                 elif (port == 'telnet:tcp'):", "                     extra.append(' --telnet')"]]], "module-name": "pykickstart.commands.firewall"}, "58": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "number_replacer", "7", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 7, "result-type": "normal", "op-name": "number_replacer", "result-data": [{"occurrence": 7, "line_number": 222, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -131,7 +131,7 @@", " ", " class F20_Firewall(F14_Firewall):", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         F14_Firewall.__init__(self, writePriority, *args, **kwargs)", "         self.remove_services = kwargs.get('remove_services', [])", " "]]], "module-name": "pykickstart.commands.firewall"}, "26": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_NotIn", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Gt_with_NotIn", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firewall\", line 173, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -102,7 +102,7 @@", "         if self.enabled:", "             retval = retval.strip()", "             svcstr = ','.join(self.services)", "-            if (len(svcstr) > 0):", "+            if (len(svcstr) not in 0):", "                 svcstr = (' --service=' + svcstr)", "             else:", "                 svcstr = ''"]]], "module-name": "pykickstart.commands.firewall"}, "61": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_Eq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Gt_with_Eq", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --port=47:tcp --trust=\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --port=47:tcp --trust=\n?                                 ---------\n+ firewall --enabled --port=47:tcp\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -41,7 +41,7 @@", "                 portstr = ''", "             extrastr = ''.join(extra)", "             truststr = ','.join(self.trusts)", "-            if (len(truststr) > 0):", "+            if (len(truststr) == 0):", "                 truststr = (' --trust=' + truststr)", "             retval += ('# Firewall configuration\\nfirewall --enabled%s%s%s\\n' % (extrastr, portstr, truststr))", "         else:"]]], "module-name": "pykickstart.commands.firewall"}, "89": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Is_with_Eq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Is_with_Eq", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithEq"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -141,7 +141,7 @@", "         return op", " ", "     def __str__(self):", "-        if (self.enabled is None):", "+        if (self.enabled == None):", "             return ''", "         retval = F14_Firewall.__str__(self)", "         if self.enabled:"]]], "module-name": "pykickstart.commands.firewall"}, "47": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_Is", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Eq_with_Is", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 45, in runTest\n    \"firewall --enabled --ssh --telnet --smtp --http --ftp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --ssh --telnet --http --ftp --port=smtp:tcp\\n' != 'firewall --enabled --ssh --telnet --smtp --http --ftp\\n'\n- firewall --enabled --ssh --telnet --http --ftp --port=smtp:tcp\n?                                               ----------------\n+ firewall --enabled --ssh --telnet --smtp --http --ftp\n?                                   +++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -26,7 +26,7 @@", "                     extra.append(' --ssh')", "                 elif (port == 'telnet:tcp'):", "                     extra.append(' --telnet')", "-                elif (port == 'smtp:tcp'):", "+                elif (port is 'smtp:tcp'):", "                     extra.append(' --smtp')", "                 elif (port == 'http:tcp'):", "                     extra.append(' --http')"]]], "module-name": "pykickstart.commands.firewall"}, "28": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Eq_with_Gt", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 45, in runTest\n    \"firewall --enabled --ssh --telnet --smtp --http --ftp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --ssh --smtp --http --ftp --port=ssh:tcp\\n' != 'firewall --enabled --ssh --telnet --smtp --http --ftp\\n'\n- firewall --enabled --ssh --smtp --http --ftp --port=ssh:tcp\n?                                             ---------------\n+ firewall --enabled --ssh --telnet --smtp --http --ftp\n?                         +++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -22,7 +22,7 @@", "             return retval", "         if self.enabled:", "             for port in self.ports:", "-                if (port == 'ssh:tcp'):", "+                if (port > 'ssh:tcp'):", "                     extra.append(' --ssh')", "                 elif (port == 'telnet:tcp'):", "                     extra.append(' --telnet')"]]], "module-name": "pykickstart.commands.firewall"}, "17": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_NotIn", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Eq_with_NotIn", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --smtp\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --smtp\n?                      ^^\n+ firewall --enabled --port=47:tcp\n?                      ^^^ ++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -26,7 +26,7 @@", "                     extra.append(' --ssh')", "                 elif (port == 'telnet:tcp'):", "                     extra.append(' --telnet')", "-                elif (port == 'smtp:tcp'):", "+                elif (port not in 'smtp:tcp'):", "                     extra.append(' --smtp')", "                 elif (port == 'http:tcp'):", "                     extra.append(' --http')"]]], "module-name": "pykickstart.commands.firewall"}, "43": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_Is", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 3, "result-type": "normal", "op-name": "replace_Gt_with_Is", "result-data": [{"occurrence": 3, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 99, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 92, in runTest\n    F10_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --port=47:tcp --remove-service=\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --port=47:tcp --remove-service=\n?                                 ------------------\n+ firewall --enabled --port=47:tcp\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -147,7 +147,7 @@", "         if self.enabled:", "             retval = retval.strip()", "             svcstr = ','.join(self.remove_services)", "-            if (len(svcstr) > 0):", "+            if (len(svcstr) is 0):", "                 svcstr = (' --remove-service=' + svcstr)", "             else:", "                 svcstr = ''"]]], "module-name": "pykickstart.commands.firewall"}, "68": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_NotEq", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 4, "result-type": "normal", "op-name": "replace_Eq_with_NotEq", "result-data": [{"occurrence": 4, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --ftp\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --ftp\n?                      ^\n+ firewall --enabled --port=47:tcp\n?                      ^^^ ++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -30,7 +30,7 @@", "                     extra.append(' --smtp')", "                 elif (port == 'http:tcp'):", "                     extra.append(' --http')", "-                elif (port == 'ftp:tcp'):", "+                elif (port != 'ftp:tcp'):", "                     extra.append(' --ftp')", "                 else:", "                     filteredPorts.append(port)"]]], "module-name": "pykickstart.commands.firewall"}, "6": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Is_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Is_with_In", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firewall\", line 165, in __str__\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -96,7 +96,7 @@", "         self.services = kwargs.get('services', [])", " ", "     def __str__(self):", "-        if (self.enabled is None):", "+        if (self.enabled in None):", "             return ''", "         retval = F9_Firewall.__str__(self)", "         if self.enabled:"]]], "module-name": "pykickstart.commands.firewall"}, "12": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Is_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Is_with_Lt", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firewall\", line 168, in __str__\n  File \"pykickstart.commands.firewall\", line 42, in __str__\nTypeError: unorderable types: bool() < NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -18,7 +18,7 @@", "         extra = []", "         filteredPorts = []", "         retval = KickstartCommand.__str__(self)", "-        if (self.enabled is None):", "+        if (self.enabled < None):", "             return retval", "         if self.enabled:", "             for port in self.ports:"]]], "module-name": "pykickstart.commands.firewall"}, "69": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_NotEq", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 5, "result-type": "normal", "op-name": "replace_Eq_with_NotEq", "result-data": [{"occurrence": 5, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --port=47\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --port=47\n+ firewall --enabled --port=47:tcp\n?                             ++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -54,7 +54,7 @@", "             retval = []", "             for p in value.split(','):", "                 p = p.strip()", "-                if (p.find(':') == (- 1)):", "+                if (p.find(':') != (- 1)):", "                     p = ('%s:tcp' % p)", "                 retval.append(p)", "             return retval"]]], "module-name": "pykickstart.commands.firewall"}, "15": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Eq_with_NotIn", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --ssh\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --ssh\n?                      ^^^\n+ firewall --enabled --port=47:tcp\n?                      ^^^^^^^^^^^\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -22,7 +22,7 @@", "             return retval", "         if self.enabled:", "             for port in self.ports:", "-                if (port == 'ssh:tcp'):", "+                if (port not in 'ssh:tcp'):", "                     extra.append(' --ssh')", "                 elif (port == 'telnet:tcp'):", "                     extra.append(' --telnet')"]]], "module-name": "pykickstart.commands.firewall"}, "20": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_NotIn", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 5, "result-type": "normal", "op-name": "replace_Eq_with_NotIn", "result-data": [{"occurrence": 5, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/argparse.py\", line 2287, in _get_value\n    result = type_func(arg_string)\n  File \"pykickstart.commands.firewall\", line 90, in firewall_port_cb\nTypeError: argument of type 'int' is not iterable\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/argparse.py\", line 1759, in parse_known_args\n    namespace, args = self._parse_known_args(args, namespace)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/argparse.py\", line 1965, in _parse_known_args\n    start_index = consume_optional(start_index)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/argparse.py\", line 1905, in consume_optional\n    take_action(action, args, option_string)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/argparse.py\", line 1817, in take_action\n    argument_values = self._get_values(action, argument_strings)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/argparse.py\", line 2258, in _get_values\n    value = self._get_value(action, arg_string)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/argparse.py\", line 2300, in _get_value\n    raise ArgumentError(action, msg % args)\nargparse.ArgumentError: argument --port: invalid firewall_port_cb value: '47'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.firewall\", line 142, in parse\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/options.py\", line 262, in parse_args\n    return ArgumentParser.parse_args(self, *args, **kwargs)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/argparse.py\", line 1727, in parse_args\n    args, argv = self.parse_known_args(args, namespace)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/options.py\", line 268, in parse_known_args\n    return ArgumentParser.parse_known_args(self, *args, **kwargs)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/argparse.py\", line 1766, in parse_known_args\n    self.error(str(err))\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/options.py\", line 249, in error\n    raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nargument --port: invalid firewall_port_cb value: '47'\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -54,7 +54,7 @@", "             retval = []", "             for p in value.split(','):", "                 p = p.strip()", "-                if (p.find(':') == (- 1)):", "+                if (p.find(':') not in (- 1)):", "                     p = ('%s:tcp' % p)", "                 retval.append(p)", "             return retval"]]], "module-name": "pykickstart.commands.firewall"}, "52": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "number_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 1, "result-type": "normal", "op-name": "number_replacer", "result-data": [{"occurrence": 1, "line_number": 65, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -35,7 +35,7 @@", "                 else:", "                     filteredPorts.append(port)", "             portstr = ','.join(filteredPorts)", "-            if (len(portstr) > 0):", "+            if (len(portstr) > 1):", "                 portstr = (' --port=' + portstr)", "             else:", "                 portstr = ''"]]], "module-name": "pykickstart.commands.firewall"}, "18": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_NotIn", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 3, "result-type": "normal", "op-name": "replace_Eq_with_NotIn", "result-data": [{"occurrence": 3, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --http\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --http\n?                      ^\n+ firewall --enabled --port=47:tcp\n?                      ^^^ ++++ +\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -28,7 +28,7 @@", "                     extra.append(' --telnet')", "                 elif (port == 'smtp:tcp'):", "                     extra.append(' --smtp')", "-                elif (port == 'http:tcp'):", "+                elif (port not in 'http:tcp'):", "                     extra.append(' --http')", "                 elif (port == 'ftp:tcp'):", "                     extra.append(' --ftp')"]]], "module-name": "pykickstart.commands.firewall"}, "42": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_Is", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Gt_with_Is", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --port=47:tcp --service=\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --port=47:tcp --service=\n?                                 -----------\n+ firewall --enabled --port=47:tcp\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -102,7 +102,7 @@", "         if self.enabled:", "             retval = retval.strip()", "             svcstr = ','.join(self.services)", "-            if (len(svcstr) > 0):", "+            if (len(svcstr) is 0):", "                 svcstr = (' --service=' + svcstr)", "             else:", "                 svcstr = ''"]]], "module-name": "pykickstart.commands.firewall"}, "37": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Is_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Is_with_LtE", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firewall\", line 168, in __str__\n  File \"pykickstart.commands.firewall\", line 42, in __str__\nTypeError: unorderable types: bool() <= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -18,7 +18,7 @@", "         extra = []", "         filteredPorts = []", "         retval = KickstartCommand.__str__(self)", "-        if (self.enabled is None):", "+        if (self.enabled <= None):", "             return retval", "         if self.enabled:", "             for port in self.ports:"]]], "module-name": "pykickstart.commands.firewall"}, "98": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_IsNot", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Eq_with_IsNot", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --smtp\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --smtp\n?                      ^^\n+ firewall --enabled --port=47:tcp\n?                      ^^^ ++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -26,7 +26,7 @@", "                     extra.append(' --ssh')", "                 elif (port == 'telnet:tcp'):", "                     extra.append(' --telnet')", "-                elif (port == 'smtp:tcp'):", "+                elif (port is not 'smtp:tcp'):", "                     extra.append(' --smtp')", "                 elif (port == 'http:tcp'):", "                     extra.append(' --http')"]]], "module-name": "pykickstart.commands.firewall"}, "126": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_Lt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 3, "result-type": "normal", "op-name": "replace_Eq_with_Lt", "result-data": [{"occurrence": 3, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --http\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --http\n?                      ^\n+ firewall --enabled --port=47:tcp\n?                      ^^^ ++++ +\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -28,7 +28,7 @@", "                     extra.append(' --telnet')", "                 elif (port == 'smtp:tcp'):", "                     extra.append(' --smtp')", "-                elif (port == 'http:tcp'):", "+                elif (port < 'http:tcp'):", "                     extra.append(' --http')", "                 elif (port == 'ftp:tcp'):", "                     extra.append(' --ftp')"]]], "module-name": "pykickstart.commands.firewall"}, "11": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_GtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 3, "result-type": "normal", "op-name": "replace_Gt_with_GtE", "result-data": [{"occurrence": 3, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 99, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 92, in runTest\n    F10_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --port=47:tcp --remove-service=\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --port=47:tcp --remove-service=\n?                                 ------------------\n+ firewall --enabled --port=47:tcp\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -147,7 +147,7 @@", "         if self.enabled:", "             retval = retval.strip()", "             svcstr = ','.join(self.remove_services)", "-            if (len(svcstr) > 0):", "+            if (len(svcstr) >= 0):", "                 svcstr = (' --remove-service=' + svcstr)", "             else:", "                 svcstr = ''"]]], "module-name": "pykickstart.commands.firewall"}, "109": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Gt_with_LtE", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --port=47:tcp --trust=\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --port=47:tcp --trust=\n?                                 ---------\n+ firewall --enabled --port=47:tcp\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -41,7 +41,7 @@", "                 portstr = ''", "             extrastr = ''.join(extra)", "             truststr = ','.join(self.trusts)", "-            if (len(truststr) > 0):", "+            if (len(truststr) <= 0):", "                 truststr = (' --trust=' + truststr)", "             retval += ('# Firewall configuration\\nfirewall --enabled%s%s%s\\n' % (extrastr, portstr, truststr))", "         else:"]]], "module-name": "pykickstart.commands.firewall"}, "23": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Is_with_NotEq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Is_with_NotEq", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithNotEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 99, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 92, in runTest\n    F10_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'firewall --enabled --port=47:tcp\\n'\n+ firewall --enabled --port=47:tcp\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -141,7 +141,7 @@", "         return op", " ", "     def __str__(self):", "-        if (self.enabled is None):", "+        if (self.enabled != None):", "             return ''", "         retval = F14_Firewall.__str__(self)", "         if self.enabled:"]]], "module-name": "pykickstart.commands.firewall"}, "22": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Is_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Is_with_NotEq", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithNotEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'firewall --enabled --port=47:tcp\\n'\n+ firewall --enabled --port=47:tcp\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -96,7 +96,7 @@", "         self.services = kwargs.get('services', [])", " ", "     def __str__(self):", "-        if (self.enabled is None):", "+        if (self.enabled != None):", "             return ''", "         retval = F9_Firewall.__str__(self)", "         if self.enabled:"]]], "module-name": "pykickstart.commands.firewall"}, "73": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_In", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 3, "result-type": "normal", "op-name": "replace_Eq_with_In", "result-data": [{"occurrence": 3, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -28,7 +28,7 @@", "                     extra.append(' --telnet')", "                 elif (port == 'smtp:tcp'):", "                     extra.append(' --smtp')", "-                elif (port == 'http:tcp'):", "+                elif (port in 'http:tcp'):", "                     extra.append(' --http')", "                 elif (port == 'ftp:tcp'):", "                     extra.append(' --ftp')"]]], "module-name": "pykickstart.commands.firewall"}, "72": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_In", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Eq_with_In", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -26,7 +26,7 @@", "                     extra.append(' --ssh')", "                 elif (port == 'telnet:tcp'):", "                     extra.append(' --telnet')", "-                elif (port == 'smtp:tcp'):", "+                elif (port in 'smtp:tcp'):", "                     extra.append(' --smtp')", "                 elif (port == 'http:tcp'):", "                     extra.append(' --http')"]]], "module-name": "pykickstart.commands.firewall"}, "51": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "number_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 0, "result-type": "normal", "op-name": "number_replacer", "result-data": [{"occurrence": 0, "line_number": 28, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -7,7 +7,7 @@", "     removedKeywords = KickstartCommand.removedKeywords", "     removedAttrs = KickstartCommand.removedAttrs", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         KickstartCommand.__init__(self, writePriority, *args, **kwargs)", "         self.op = self._getParser()", "         self.enabled = kwargs.get('enabled', None)"]]], "module-name": "pykickstart.commands.firewall"}, "116": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_GtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 3, "result-type": "normal", "op-name": "replace_Eq_with_GtE", "result-data": [{"occurrence": 3, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 36, in runTest\n    \"firewall --enabled --port=imap:tcp --trust=eth0 --service=ssh\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --http --trust=eth0 --service=ssh\\n' != 'firewall --enabled --port=imap:tcp --trust=eth0 --service=ssh\\n'\n- firewall --enabled --http --trust=eth0 --service=ssh\n?                      ^\n+ firewall --enabled --port=imap:tcp --trust=eth0 --service=ssh\n?                      ^^^ ++++++ +\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -28,7 +28,7 @@", "                     extra.append(' --telnet')", "                 elif (port == 'smtp:tcp'):", "                     extra.append(' --smtp')", "-                elif (port == 'http:tcp'):", "+                elif (port >= 'http:tcp'):", "                     extra.append(' --http')", "                 elif (port == 'ftp:tcp'):", "                     extra.append(' --ftp')"]]], "module-name": "pykickstart.commands.firewall"}, "120": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Gt_with_In", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firewall\", line 168, in __str__\n  File \"pykickstart.commands.firewall\", line 73, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -41,7 +41,7 @@", "                 portstr = ''", "             extrastr = ''.join(extra)", "             truststr = ','.join(self.trusts)", "-            if (len(truststr) > 0):", "+            if (len(truststr) in 0):", "                 truststr = (' --trust=' + truststr)", "             retval += ('# Firewall configuration\\nfirewall --enabled%s%s%s\\n' % (extrastr, portstr, truststr))", "         else:"]]], "module-name": "pykickstart.commands.firewall"}, "111": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_LtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 3, "result-type": "normal", "op-name": "replace_Gt_with_LtE", "result-data": [{"occurrence": 3, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 99, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 92, in runTest\n    F10_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --port=47:tcp --remove-service=\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --port=47:tcp --remove-service=\n?                                 ------------------\n+ firewall --enabled --port=47:tcp\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -147,7 +147,7 @@", "         if self.enabled:", "             retval = retval.strip()", "             svcstr = ','.join(self.remove_services)", "-            if (len(svcstr) > 0):", "+            if (len(svcstr) <= 0):", "                 svcstr = (' --remove-service=' + svcstr)", "             else:", "                 svcstr = ''"]]], "module-name": "pykickstart.commands.firewall"}, "80": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Gt_with_Lt", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 36, in runTest\n    \"firewall --enabled --port=imap:tcp --trust=eth0 --service=ssh\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --port=imap:tcpeth0 --service=ssh\\n' != 'firewall --enabled --port=imap:tcp --trust=eth0 --service=ssh\\n'\n- firewall --enabled --port=imap:tcpeth0 --service=ssh\n+ firewall --enabled --port=imap:tcp --trust=eth0 --service=ssh\n?                                   +++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -41,7 +41,7 @@", "                 portstr = ''", "             extrastr = ''.join(extra)", "             truststr = ','.join(self.trusts)", "-            if (len(truststr) > 0):", "+            if (len(truststr) < 0):", "                 truststr = (' --trust=' + truststr)", "             retval += ('# Firewall configuration\\nfirewall --enabled%s%s%s\\n' % (extrastr, portstr, truststr))", "         else:"]]], "module-name": "pykickstart.commands.firewall"}, "10": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_GtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Gt_with_GtE", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --port=47:tcp --service=\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --port=47:tcp --service=\n?                                 -----------\n+ firewall --enabled --port=47:tcp\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -102,7 +102,7 @@", "         if self.enabled:", "             retval = retval.strip()", "             svcstr = ','.join(self.services)", "-            if (len(svcstr) > 0):", "+            if (len(svcstr) >= 0):", "                 svcstr = (' --service=' + svcstr)", "             else:", "                 svcstr = ''"]]], "module-name": "pykickstart.commands.firewall"}, "50": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_Is", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 5, "result-type": "normal", "op-name": "replace_Eq_with_Is", "result-data": [{"occurrence": 5, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -54,7 +54,7 @@", "             retval = []", "             for p in value.split(','):", "                 p = p.strip()", "-                if (p.find(':') == (- 1)):", "+                if (p.find(':') is (- 1)):", "                     p = ('%s:tcp' % p)", "                 retval.append(p)", "             return retval"]]], "module-name": "pykickstart.commands.firewall"}, "7": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Is_with_In", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Is_with_In", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 99, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 92, in runTest\n    F10_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firewall\", line 233, in __str__\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -141,7 +141,7 @@", "         return op", " ", "     def __str__(self):", "-        if (self.enabled is None):", "+        if (self.enabled in None):", "             return ''", "         retval = F14_Firewall.__str__(self)", "         if self.enabled:"]]], "module-name": "pykickstart.commands.firewall"}, "45": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Eq_with_Is", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 45, in runTest\n    \"firewall --enabled --ssh --telnet --smtp --http --ftp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --telnet --smtp --http --ftp --port=ssh:tcp\\n' != 'firewall --enabled --ssh --telnet --smtp --http --ftp\\n'\n- firewall --enabled --telnet --smtp --http --ftp --port=ssh:tcp\n?                                                ---------------\n+ firewall --enabled --ssh --telnet --smtp --http --ftp\n?                    ++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -22,7 +22,7 @@", "             return retval", "         if self.enabled:", "             for port in self.ports:", "-                if (port == 'ssh:tcp'):", "+                if (port is 'ssh:tcp'):", "                     extra.append(' --ssh')", "                 elif (port == 'telnet:tcp'):", "                     extra.append(' --telnet')"]]], "module-name": "pykickstart.commands.firewall"}, "75": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_In", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 5, "result-type": "normal", "op-name": "replace_Eq_with_In", "result-data": [{"occurrence": 5, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/argparse.py\", line 2287, in _get_value\n    result = type_func(arg_string)\n  File \"pykickstart.commands.firewall\", line 90, in firewall_port_cb\nTypeError: argument of type 'int' is not iterable\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/argparse.py\", line 1759, in parse_known_args\n    namespace, args = self._parse_known_args(args, namespace)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/argparse.py\", line 1965, in _parse_known_args\n    start_index = consume_optional(start_index)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/argparse.py\", line 1905, in consume_optional\n    take_action(action, args, option_string)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/argparse.py\", line 1817, in take_action\n    argument_values = self._get_values(action, argument_strings)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/argparse.py\", line 2258, in _get_values\n    value = self._get_value(action, arg_string)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/argparse.py\", line 2300, in _get_value\n    raise ArgumentError(action, msg % args)\nargparse.ArgumentError: argument --port: invalid firewall_port_cb value: '47'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.firewall\", line 142, in parse\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/options.py\", line 262, in parse_args\n    return ArgumentParser.parse_args(self, *args, **kwargs)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/argparse.py\", line 1727, in parse_args\n    args, argv = self.parse_known_args(args, namespace)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/options.py\", line 268, in parse_known_args\n    return ArgumentParser.parse_known_args(self, *args, **kwargs)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/argparse.py\", line 1766, in parse_known_args\n    self.error(str(err))\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/options.py\", line 249, in error\n    raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nargument --port: invalid firewall_port_cb value: '47'\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -54,7 +54,7 @@", "             retval = []", "             for p in value.split(','):", "                 p = p.strip()", "-                if (p.find(':') == (- 1)):", "+                if (p.find(':') in (- 1)):", "                     p = ('%s:tcp' % p)", "                 retval.append(p)", "             return retval"]]], "module-name": "pykickstart.commands.firewall"}, "124": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Eq_with_Lt", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --telnet\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --telnet\n?                       ^^^^\n+ firewall --enabled --port=47:tcp\n?                      +++ ^^^^ ++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -24,7 +24,7 @@", "             for port in self.ports:", "                 if (port == 'ssh:tcp'):", "                     extra.append(' --ssh')", "-                elif (port == 'telnet:tcp'):", "+                elif (port < 'telnet:tcp'):", "                     extra.append(' --telnet')", "                 elif (port == 'smtp:tcp'):", "                     extra.append(' --smtp')"]]], "module-name": "pykickstart.commands.firewall"}, "14": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Is_with_Lt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Is_with_Lt", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 99, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 92, in runTest\n    F10_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firewall\", line 233, in __str__\nTypeError: unorderable types: bool() < NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -141,7 +141,7 @@", "         return op", " ", "     def __str__(self):", "-        if (self.enabled is None):", "+        if (self.enabled < None):", "             return ''", "         retval = F14_Firewall.__str__(self)", "         if self.enabled:"]]], "module-name": "pykickstart.commands.firewall"}, "95": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Is_with_Gt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Is_with_Gt", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithGt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 99, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 92, in runTest\n    F10_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firewall\", line 233, in __str__\nTypeError: unorderable types: bool() > NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -141,7 +141,7 @@", "         return op", " ", "     def __str__(self):", "-        if (self.enabled is None):", "+        if (self.enabled > None):", "             return ''", "         retval = F14_Firewall.__str__(self)", "         if self.enabled:"]]], "module-name": "pykickstart.commands.firewall"}, "128": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_Lt", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 5, "result-type": "normal", "op-name": "replace_Eq_with_Lt", "result-data": [{"occurrence": 5, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --port=47\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --port=47\n+ firewall --enabled --port=47:tcp\n?                             ++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -54,7 +54,7 @@", "             retval = []", "             for p in value.split(','):", "                 p = p.strip()", "-                if (p.find(':') == (- 1)):", "+                if (p.find(':') < (- 1)):", "                     p = ('%s:tcp' % p)", "                 retval.append(p)", "             return retval"]]], "module-name": "pykickstart.commands.firewall"}, "33": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_Gt", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 5, "result-type": "normal", "op-name": "replace_Eq_with_Gt", "result-data": [{"occurrence": 5, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --port=47\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --port=47\n+ firewall --enabled --port=47:tcp\n?                             ++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -54,7 +54,7 @@", "             retval = []", "             for p in value.split(','):", "                 p = p.strip()", "-                if (p.find(':') == (- 1)):", "+                if (p.find(':') > (- 1)):", "                     p = ('%s:tcp' % p)", "                 retval.append(p)", "             return retval"]]], "module-name": "pykickstart.commands.firewall"}, "40": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Gt_with_Is", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled\n+ firewall --enabled --port=47:tcp\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -35,7 +35,7 @@", "                 else:", "                     filteredPorts.append(port)", "             portstr = ','.join(filteredPorts)", "-            if (len(portstr) > 0):", "+            if (len(portstr) is 0):", "                 portstr = (' --port=' + portstr)", "             else:", "                 portstr = ''"]]], "module-name": "pykickstart.commands.firewall"}, "88": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Is_with_Eq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Is_with_Eq", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithEq"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -96,7 +96,7 @@", "         self.services = kwargs.get('services', [])", " ", "     def __str__(self):", "-        if (self.enabled is None):", "+        if (self.enabled == None):", "             return ''", "         retval = F9_Firewall.__str__(self)", "         if self.enabled:"]]], "module-name": "pykickstart.commands.firewall"}, "100": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_IsNot", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 4, "result-type": "normal", "op-name": "replace_Eq_with_IsNot", "result-data": [{"occurrence": 4, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --ftp\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --ftp\n?                      ^\n+ firewall --enabled --port=47:tcp\n?                      ^^^ ++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -30,7 +30,7 @@", "                     extra.append(' --smtp')", "                 elif (port == 'http:tcp'):", "                     extra.append(' --http')", "-                elif (port == 'ftp:tcp'):", "+                elif (port is not 'ftp:tcp'):", "                     extra.append(' --ftp')", "                 else:", "                     filteredPorts.append(port)"]]], "module-name": "pykickstart.commands.firewall"}, "119": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Gt_with_In", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firewall\", line 168, in __str__\n  File \"pykickstart.commands.firewall\", line 65, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -35,7 +35,7 @@", "                 else:", "                     filteredPorts.append(port)", "             portstr = ','.join(filteredPorts)", "-            if (len(portstr) > 0):", "+            if (len(portstr) in 0):", "                 portstr = (' --port=' + portstr)", "             else:", "                 portstr = ''"]]], "module-name": "pykickstart.commands.firewall"}, "55": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "number_replacer", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 4, "result-type": "normal", "op-name": "number_replacer", "result-data": [{"occurrence": 4, "line_number": 114, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/argparse.py\", line 1759, in parse_known_args\n    namespace, args = self._parse_known_args(args, namespace)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/argparse.py\", line 1965, in _parse_known_args\n    start_index = consume_optional(start_index)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/argparse.py\", line 1895, in consume_optional\n    arg_count = match_argument(action, selected_patterns)\nargparse.ArgumentError: argument --http: expected 1 argument\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.firewall\", line 142, in parse\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/options.py\", line 262, in parse_args\n    return ArgumentParser.parse_args(self, *args, **kwargs)\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nargument --http: expected 1 argument\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 48, in runTest\n    self.assert_parse(\"firewall --enable --trust=eth0,eth1 --ssh --telnet --http --smtp --ftp --port=1234:udp\"\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: The following problem occurred on line 0 of the kickstart file:\n\nargument --http: expected 1 argument\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -62,7 +62,7 @@", "         op.add_argument('--disable', '--disabled', dest='enabled', action='store_false', version=FC3, help='Do not configure any iptables rules.')", "         op.add_argument('--enable', '--enabled', dest='enabled', action='store_true', default=True, help='\\n                        Reject incoming connections that are not in response\\n                        to outbound requests, such as DNS replies or DHCP\\n                        requests. If access to services running on this machine\\n                        is needed, you can choose to allow specific services\\n                        through the firewall.', version=FC3)", "         op.add_argument('--ftp', dest='ports', action='append_const', const='21:tcp', version=FC3, help='')", "-        op.add_argument('--http', dest='ports', action=ExtendConstAction, const=['80:tcp', '443:tcp'], nargs=0, version=FC3, help='')", "+        op.add_argument('--http', dest='ports', action=ExtendConstAction, const=['80:tcp', '443:tcp'], nargs=1, version=FC3, help='')", "         op.add_argument('--smtp', dest='ports', action='append_const', const='25:tcp', version=FC3, help='')", "         op.add_argument('--ssh', dest='ports', action='append_const', const='22:tcp', version=FC3, help='')", "         op.add_argument('--telnet', dest='ports', action='append_const', const='23:tcp', version=FC3, help='')"]]], "module-name": "pykickstart.commands.firewall"}, "83": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Gt_with_IsNot", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIsNot"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -35,7 +35,7 @@", "                 else:", "                     filteredPorts.append(port)", "             portstr = ','.join(filteredPorts)", "-            if (len(portstr) > 0):", "+            if (len(portstr) is not 0):", "                 portstr = (' --port=' + portstr)", "             else:", "                 portstr = ''"]]], "module-name": "pykickstart.commands.firewall"}, "1": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Gt_with_NotEq", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotEq"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -35,7 +35,7 @@", "                 else:", "                     filteredPorts.append(port)", "             portstr = ','.join(filteredPorts)", "-            if (len(portstr) > 0):", "+            if (len(portstr) != 0):", "                 portstr = (' --port=' + portstr)", "             else:", "                 portstr = ''"]]], "module-name": "pykickstart.commands.firewall"}, "84": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_IsNot", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Gt_with_IsNot", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIsNot"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -41,7 +41,7 @@", "                 portstr = ''", "             extrastr = ''.join(extra)", "             truststr = ','.join(self.trusts)", "-            if (len(truststr) > 0):", "+            if (len(truststr) is not 0):", "                 truststr = (' --trust=' + truststr)", "             retval += ('# Firewall configuration\\nfirewall --enabled%s%s%s\\n' % (extrastr, portstr, truststr))", "         else:"]]], "module-name": "pykickstart.commands.firewall"}, "46": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Eq_with_Is", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 45, in runTest\n    \"firewall --enabled --ssh --telnet --smtp --http --ftp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --ssh --smtp --http --ftp --port=telnet:tcp\\n' != 'firewall --enabled --ssh --telnet --smtp --http --ftp\\n'\n- firewall --enabled --ssh --smtp --http --ftp --port=telnet:tcp\n?                                             ------------------\n+ firewall --enabled --ssh --telnet --smtp --http --ftp\n?                         +++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -24,7 +24,7 @@", "             for port in self.ports:", "                 if (port == 'ssh:tcp'):", "                     extra.append(' --ssh')", "-                elif (port == 'telnet:tcp'):", "+                elif (port is 'telnet:tcp'):", "                     extra.append(' --telnet')", "                 elif (port == 'smtp:tcp'):", "                     extra.append(' --smtp')"]]], "module-name": "pykickstart.commands.firewall"}, "97": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_IsNot", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Eq_with_IsNot", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --telnet\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --telnet\n?                       ^^^^\n+ firewall --enabled --port=47:tcp\n?                      +++ ^^^^ ++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -24,7 +24,7 @@", "             for port in self.ports:", "                 if (port == 'ssh:tcp'):", "                     extra.append(' --ssh')", "-                elif (port == 'telnet:tcp'):", "+                elif (port is not 'telnet:tcp'):", "                     extra.append(' --telnet')", "                 elif (port == 'smtp:tcp'):", "                     extra.append(' --smtp')"]]], "module-name": "pykickstart.commands.firewall"}, "53": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "number_replacer", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 2, "result-type": "normal", "op-name": "number_replacer", "result-data": [{"occurrence": 2, "line_number": 73, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -41,7 +41,7 @@", "                 portstr = ''", "             extrastr = ''.join(extra)", "             truststr = ','.join(self.trusts)", "-            if (len(truststr) > 0):", "+            if (len(truststr) > 1):", "                 truststr = (' --trust=' + truststr)", "             retval += ('# Firewall configuration\\nfirewall --enabled%s%s%s\\n' % (extrastr, portstr, truststr))", "         else:"]]], "module-name": "pykickstart.commands.firewall"}, "41": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Gt_with_Is", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --port=47:tcp --trust=\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --port=47:tcp --trust=\n?                                 ---------\n+ firewall --enabled --port=47:tcp\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -41,7 +41,7 @@", "                 portstr = ''", "             extrastr = ''.join(extra)", "             truststr = ','.join(self.trusts)", "-            if (len(truststr) > 0):", "+            if (len(truststr) is 0):", "                 truststr = (' --trust=' + truststr)", "             retval += ('# Firewall configuration\\nfirewall --enabled%s%s%s\\n' % (extrastr, portstr, truststr))", "         else:"]]], "module-name": "pykickstart.commands.firewall"}, "48": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_Is", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 3, "result-type": "normal", "op-name": "replace_Eq_with_Is", "result-data": [{"occurrence": 3, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 45, in runTest\n    \"firewall --enabled --ssh --telnet --smtp --http --ftp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --ssh --telnet --smtp --ftp --port=http:tcp\\n' != 'firewall --enabled --ssh --telnet --smtp --http --ftp\\n'\n- firewall --enabled --ssh --telnet --smtp --ftp --port=http:tcp\n?                                               ----------------\n+ firewall --enabled --ssh --telnet --smtp --http --ftp\n?                                          +++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -28,7 +28,7 @@", "                     extra.append(' --telnet')", "                 elif (port == 'smtp:tcp'):", "                     extra.append(' --smtp')", "-                elif (port == 'http:tcp'):", "+                elif (port is 'http:tcp'):", "                     extra.append(' --http')", "                 elif (port == 'ftp:tcp'):", "                     extra.append(' --ftp')"]]], "module-name": "pykickstart.commands.firewall"}, "92": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Is_with_GtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Is_with_GtE", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 99, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 92, in runTest\n    F10_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firewall\", line 233, in __str__\nTypeError: unorderable types: bool() >= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -141,7 +141,7 @@", "         return op", " ", "     def __str__(self):", "-        if (self.enabled is None):", "+        if (self.enabled >= None):", "             return ''", "         retval = F14_Firewall.__str__(self)", "         if self.enabled:"]]], "module-name": "pykickstart.commands.firewall"}, "70": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Eq_with_In", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -22,7 +22,7 @@", "             return retval", "         if self.enabled:", "             for port in self.ports:", "-                if (port == 'ssh:tcp'):", "+                if (port in 'ssh:tcp'):", "                     extra.append(' --ssh')", "                 elif (port == 'telnet:tcp'):", "                     extra.append(' --telnet')"]]], "module-name": "pykickstart.commands.firewall"}, "25": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Gt_with_NotIn", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firewall\", line 168, in __str__\n  File \"pykickstart.commands.firewall\", line 73, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -41,7 +41,7 @@", "                 portstr = ''", "             extrastr = ''.join(extra)", "             truststr = ','.join(self.trusts)", "-            if (len(truststr) > 0):", "+            if (len(truststr) not in 0):", "                 truststr = (' --trust=' + truststr)", "             retval += ('# Firewall configuration\\nfirewall --enabled%s%s%s\\n' % (extrastr, portstr, truststr))", "         else:"]]], "module-name": "pykickstart.commands.firewall"}, "91": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Is_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 1, "result-type": "normal", "op-name": "replace_Is_with_GtE", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firewall\", line 165, in __str__\nTypeError: unorderable types: bool() >= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -96,7 +96,7 @@", "         self.services = kwargs.get('services', [])", " ", "     def __str__(self):", "-        if (self.enabled is None):", "+        if (self.enabled >= None):", "             return ''", "         retval = F9_Firewall.__str__(self)", "         if self.enabled:"]]], "module-name": "pykickstart.commands.firewall"}, "78": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Is_with_IsNot", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Is_with_IsNot", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithIsNot"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 99, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 92, in runTest\n    F10_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'firewall --enabled --port=47:tcp\\n'\n+ firewall --enabled --port=47:tcp\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -141,7 +141,7 @@", "         return op", " ", "     def __str__(self):", "-        if (self.enabled is None):", "+        if (self.enabled is not None):", "             return ''", "         retval = F14_Firewall.__str__(self)", "         if self.enabled:"]]], "module-name": "pykickstart.commands.firewall"}, "117": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_GtE", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 4, "result-type": "normal", "op-name": "replace_Eq_with_GtE", "result-data": [{"occurrence": 4, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 36, in runTest\n    \"firewall --enabled --port=imap:tcp --trust=eth0 --service=ssh\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --ftp --trust=eth0 --service=ssh\\n' != 'firewall --enabled --port=imap:tcp --trust=eth0 --service=ssh\\n'\n- firewall --enabled --ftp --trust=eth0 --service=ssh\n?                      ^\n+ firewall --enabled --port=imap:tcp --trust=eth0 --service=ssh\n?                      ^^^ ++++ ++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -30,7 +30,7 @@", "                     extra.append(' --smtp')", "                 elif (port == 'http:tcp'):", "                     extra.append(' --http')", "-                elif (port == 'ftp:tcp'):", "+                elif (port >= 'ftp:tcp'):", "                     extra.append(' --ftp')", "                 else:", "                     filteredPorts.append(port)"]]], "module-name": "pykickstart.commands.firewall"}, "5": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Is_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Is_with_In", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firewall\", line 168, in __str__\n  File \"pykickstart.commands.firewall\", line 42, in __str__\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -18,7 +18,7 @@", "         extra = []", "         filteredPorts = []", "         retval = KickstartCommand.__str__(self)", "-        if (self.enabled is None):", "+        if (self.enabled in None):", "             return retval", "         if self.enabled:", "             for port in self.ports:"]]], "module-name": "pykickstart.commands.firewall"}, "60": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Gt_with_Eq", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled\n+ firewall --enabled --port=47:tcp\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -35,7 +35,7 @@", "                 else:", "                     filteredPorts.append(port)", "             portstr = ','.join(filteredPorts)", "-            if (len(portstr) > 0):", "+            if (len(portstr) == 0):", "                 portstr = (' --port=' + portstr)", "             else:", "                 portstr = ''"]]], "module-name": "pykickstart.commands.firewall"}, "24": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Gt_with_NotIn", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firewall\", line 168, in __str__\n  File \"pykickstart.commands.firewall\", line 65, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -35,7 +35,7 @@", "                 else:", "                     filteredPorts.append(port)", "             portstr = ','.join(filteredPorts)", "-            if (len(portstr) > 0):", "+            if (len(portstr) not in 0):", "                 portstr = (' --port=' + portstr)", "             else:", "                 portstr = ''"]]], "module-name": "pykickstart.commands.firewall"}, "113": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Eq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 0, "result-type": "normal", "op-name": "replace_Eq_with_GtE", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 45, in runTest\n    \"firewall --enabled --ssh --telnet --smtp --http --ftp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --ssh --ssh --smtp --http --ftp\\n' != 'firewall --enabled --ssh --telnet --smtp --http --ftp\\n'\n- firewall --enabled --ssh --ssh --smtp --http --ftp\n?                            ^^^\n+ firewall --enabled --ssh --telnet --smtp --http --ftp\n?                            ^^^^^^\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -22,7 +22,7 @@", "             return retval", "         if self.enabled:", "             for port in self.ports:", "-                if (port == 'ssh:tcp'):", "+                if (port >= 'ssh:tcp'):", "                     extra.append(' --ssh')", "                 elif (port == 'telnet:tcp'):", "                     extra.append(' --telnet')"]]], "module-name": "pykickstart.commands.firewall"}, "62": {"command": ["cosmic-ray", "worker", "pykickstart.commands.firewall", "replace_Gt_with_Eq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "occurrence": 2, "result-type": "normal", "op-name": "replace_Gt_with_Eq", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 85, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 77, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firewall.py\", line 31, in runTest\n    \"firewall --enabled --port=47:tcp\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firewall --enabled --port=47:tcp --service=\\n' != 'firewall --enabled --port=47:tcp\\n'\n- firewall --enabled --port=47:tcp --service=\n?                                 -----------\n+ firewall --enabled --port=47:tcp\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firewall.py", "@@ -102,7 +102,7 @@", "         if self.enabled:", "             retval = retval.strip()", "             svcstr = ','.join(self.services)", "-            if (len(svcstr) > 0):", "+            if (len(svcstr) == 0):", "                 svcstr = (' --service=' + svcstr)", "             else:", "                 svcstr = ''"]]], "module-name": "pykickstart.commands.firewall"}}, "work-parameters": {"1": {"test-args": ["-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firewall.py"], "test-runner": "nose", "timeout": 19.21244}}, "_default": {}}