{"work-parameters": {"1": {"test-args": ["-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/cdrom.py"], "test-runner": "nose", "timeout": 3.83129}}, "work-items": {"10": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLt", "occurrence": 0, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/cdrom.py\", line 30, in runTest\n    self.assert_parse_error(\"cdrom --some-arg\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/cdrom.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/cdrom.py", "@@ -17,7 +17,7 @@", "         return retval", " ", "     def parse(self, args):", "-        if (len(args) > 0):", "+        if (len(args) < 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "         return self", " "]]], "op-name": "replace_Gt_with_Lt", "occurrence": 0, "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.cdrom", "replace_Gt_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/cdrom.py"], "module-name": "pykickstart.commands.cdrom"}, "9": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotIn", "occurrence": 0, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/cdrom.py\", line 27, in runTest\n    self.assert_parse(\"cdrom\", \"cdrom\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.cdrom\", line 40, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/cdrom.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/cdrom.py", "@@ -17,7 +17,7 @@", "         return retval", " ", "     def parse(self, args):", "-        if (len(args) > 0):", "+        if (len(args) not in 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "         return self", " "]]], "op-name": "replace_Gt_with_NotIn", "occurrence": 0, "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.cdrom", "replace_Gt_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/cdrom.py"], "module-name": "pykickstart.commands.cdrom"}, "5": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLtE", "occurrence": 0, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/cdrom.py\", line 27, in runTest\n    self.assert_parse(\"cdrom\", \"cdrom\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.cdrom\", line 41, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nKickstart command cdrom does not take any arguments\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/cdrom.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/cdrom.py", "@@ -17,7 +17,7 @@", "         return retval", " ", "     def parse(self, args):", "-        if (len(args) > 0):", "+        if (len(args) <= 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "         return self", " "]]], "op-name": "replace_Gt_with_LtE", "occurrence": 0, "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.cdrom", "replace_Gt_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/cdrom.py"], "module-name": "pykickstart.commands.cdrom"}, "7": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIs", "occurrence": 0, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/cdrom.py\", line 27, in runTest\n    self.assert_parse(\"cdrom\", \"cdrom\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.cdrom\", line 41, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nKickstart command cdrom does not take any arguments\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/cdrom.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/cdrom.py", "@@ -17,7 +17,7 @@", "         return retval", " ", "     def parse(self, args):", "-        if (len(args) > 0):", "+        if (len(args) is 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "         return self", " "]]], "op-name": "replace_Gt_with_Is", "occurrence": 0, "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.cdrom", "replace_Gt_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/cdrom.py"], "module-name": "pykickstart.commands.cdrom"}, "2": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotEq", "occurrence": 0, "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/cdrom.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/cdrom.py", "@@ -17,7 +17,7 @@", "         return retval", " ", "     def parse(self, args):", "-        if (len(args) > 0):", "+        if (len(args) != 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "         return self", " "]]], "op-name": "replace_Gt_with_NotEq", "occurrence": 0, "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.cdrom", "replace_Gt_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/cdrom.py"], "module-name": "pykickstart.commands.cdrom"}, "1": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithEq", "occurrence": 0, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/cdrom.py\", line 27, in runTest\n    self.assert_parse(\"cdrom\", \"cdrom\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.cdrom\", line 41, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nKickstart command cdrom does not take any arguments\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/cdrom.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/cdrom.py", "@@ -17,7 +17,7 @@", "         return retval", " ", "     def parse(self, args):", "-        if (len(args) > 0):", "+        if (len(args) == 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "         return self", " "]]], "op-name": "replace_Gt_with_Eq", "occurrence": 0, "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.cdrom", "replace_Gt_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/cdrom.py"], "module-name": "pykickstart.commands.cdrom"}, "6": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIn", "occurrence": 0, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/cdrom.py\", line 27, in runTest\n    self.assert_parse(\"cdrom\", \"cdrom\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.cdrom\", line 40, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/cdrom.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/cdrom.py", "@@ -17,7 +17,7 @@", "         return retval", " ", "     def parse(self, args):", "-        if (len(args) > 0):", "+        if (len(args) in 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "         return self", " "]]], "op-name": "replace_Gt_with_In", "occurrence": 0, "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.cdrom", "replace_Gt_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/cdrom.py"], "module-name": "pykickstart.commands.cdrom"}, "4": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithGtE", "occurrence": 0, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/cdrom.py\", line 27, in runTest\n    self.assert_parse(\"cdrom\", \"cdrom\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.cdrom\", line 41, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nKickstart command cdrom does not take any arguments\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/cdrom.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/cdrom.py", "@@ -17,7 +17,7 @@", "         return retval", " ", "     def parse(self, args):", "-        if (len(args) > 0):", "+        if (len(args) >= 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "         return self", " "]]], "op-name": "replace_Gt_with_GtE", "occurrence": 0, "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.cdrom", "replace_Gt_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/cdrom.py"], "module-name": "pykickstart.commands.cdrom"}, "8": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIsNot", "occurrence": 0, "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/cdrom.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/cdrom.py", "@@ -17,7 +17,7 @@", "         return retval", " ", "     def parse(self, args):", "-        if (len(args) > 0):", "+        if (len(args) is not 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "         return self", " "]]], "op-name": "replace_Gt_with_IsNot", "occurrence": 0, "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.cdrom", "replace_Gt_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/cdrom.py"], "module-name": "pykickstart.commands.cdrom"}, "3": {"result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "occurrence": 0, "line_number": 40}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/cdrom.py\", line 30, in runTest\n    self.assert_parse_error(\"cdrom --some-arg\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/cdrom.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/cdrom.py", "@@ -17,7 +17,7 @@", "         return retval", " ", "     def parse(self, args):", "-        if (len(args) > 0):", "+        if (len(args) > 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "         return self", " "]]], "op-name": "number_replacer", "occurrence": 0, "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.cdrom", "number_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/cdrom.py"], "module-name": "pykickstart.commands.cdrom"}}, "_default": {}}