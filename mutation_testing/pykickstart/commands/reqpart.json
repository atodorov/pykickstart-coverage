{"work-items": {"1": {"occurrence": 0, "op-name": "boolean_replacer", "module-name": "pykickstart.commands.reqpart", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.reqpart", "boolean_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reqpart.py"], "result-data": [{"line_number": 35, "occurrence": 0, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reqpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reqpart.py", "@@ -12,7 +12,7 @@", " ", "     def __init__(self, writePriority=100, *args, **kwargs):", "         KickstartCommand.__init__(self, writePriority, *args, **kwargs)", "-        self.reqpart = kwargs.get('reqpart', False)", "+        self.reqpart = kwargs.get('reqpart', True)", "         self.addBoot = kwargs.get('addBoot', False)", "         self.op = self._getParser()", " "]]]}, "3": {"occurrence": 2, "op-name": "boolean_replacer", "module-name": "pykickstart.commands.reqpart", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.reqpart", "boolean_replacer", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reqpart.py"], "result-data": [{"line_number": 71, "occurrence": 2, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reqpart.py\", line 30, in runTest\n    self.assert_parse(\"reqpart\", \"reqpart\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'reqpart --add-boot\\n' != 'reqpart\\n'\n- reqpart --add-boot\n+ reqpart\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reqpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reqpart.py", "@@ -30,7 +30,7 @@", " ", "     def _getParser(self):", "         op = KSOptionParser(prog='reqpart', description='\\n                            Automatically create partitions required by your\\n                            hardware platform. These include a ``/boot/efi``\\n                            for x86_64 and Aarch64 systems with UEFI firmware,\\n                            ``biosboot`` for x86_64 systems with BIOS firmware\\n                            and GPT, and ``PRePBoot`` for IBM Power Systems.\\n\\n                            Note: This command can not be used together with\\n                            ``autopart``, because ``autopart`` does the same\\n                            and creates other partitions or logical volumes\\n                            such as ``/`` and ``swap`` on top. In contrast with\\n                            ``autopart``, this command only creates\\n                            platform-specific partitions and leaves the rest of\\n                            the drive empty, allowing you to create a custom\\n                            layout.', version=F23)", "-        op.add_argument('--add-boot', action='store_true', version=F23, dest='addBoot', default=False, help='\\n                        Create a separate ``/boot`` partition in addition to the\\n                        platform-specific partition created by the base command.\\n                        ')", "+        op.add_argument('--add-boot', action='store_true', version=F23, dest='addBoot', default=True, help='\\n                        Create a separate ``/boot`` partition in addition to the\\n                        platform-specific partition created by the base command.\\n                        ')", "         return op", " ", "     def parse(self, args):"]]]}, "2": {"occurrence": 1, "op-name": "boolean_replacer", "module-name": "pykickstart.commands.reqpart", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.reqpart", "boolean_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reqpart.py"], "result-data": [{"line_number": 36, "occurrence": 1, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reqpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reqpart.py", "@@ -13,7 +13,7 @@", "     def __init__(self, writePriority=100, *args, **kwargs):", "         KickstartCommand.__init__(self, writePriority, *args, **kwargs)", "         self.reqpart = kwargs.get('reqpart', False)", "-        self.addBoot = kwargs.get('addBoot', False)", "+        self.addBoot = kwargs.get('addBoot', True)", "         self.op = self._getParser()", " ", "     def _getArgsAsStr(self):"]]]}, "4": {"occurrence": 3, "op-name": "boolean_replacer", "module-name": "pykickstart.commands.reqpart", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.reqpart", "boolean_replacer", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reqpart.py"], "result-data": [{"line_number": 86, "occurrence": 3, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/reqpart.py\", line 30, in runTest\n    self.assert_parse(\"reqpart\", \"reqpart\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'reqpart\\n'\n+ reqpart\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reqpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reqpart.py", "@@ -39,7 +39,7 @@", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=errorMsg))", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        self.reqpart = True", "+        self.reqpart = False", "         return self", " ", " class RHEL7_ReqPart(F23_ReqPart):"]]]}, "5": {"occurrence": 0, "op-name": "number_replacer", "module-name": "pykickstart.commands.reqpart", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.reqpart", "number_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reqpart.py"], "result-data": [{"line_number": 33, "occurrence": 0, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/reqpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/reqpart.py", "@@ -10,7 +10,7 @@", "     removedKeywords = KickstartCommand.removedKeywords", "     removedAttrs = KickstartCommand.removedAttrs", " ", "-    def __init__(self, writePriority=100, *args, **kwargs):", "+    def __init__(self, writePriority=101, *args, **kwargs):", "         KickstartCommand.__init__(self, writePriority, *args, **kwargs)", "         self.reqpart = kwargs.get('reqpart', False)", "         self.addBoot = kwargs.get('addBoot', False)"]]]}}, "work-parameters": {"1": {"test-runner": "nose", "timeout": 9.3047, "test-args": ["-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/reqpart.py"]}}, "_default": {}}