{"work-items": {"4": {"result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -30,7 +30,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'cdrom')):", "+            if ((name == 'method') and (value is not 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_IsNot", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_IsNot", "result-type": "normal", "occurrence": 3, "module-name": "pykickstart.commands.method"}, "40": {"result-data": [{"occurrence": 9, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -36,7 +36,7 @@", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "-            elif ((name == 'method') and (value == 'url')):", "+            elif ((name == 'method') and (value <= 'url')):", "                 setattr(self.handler.url, 'seen', True)", "             KickstartCommand.__setattr__(self, name, value)", "         elif self.handler.cdrom.seen:"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_LtE", "9", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_LtE", "result-type": "normal", "occurrence": 9, "module-name": "pykickstart.commands.method"}, "36": {"result-data": [{"occurrence": 5, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -32,7 +32,7 @@", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "-            elif ((name == 'method') and (value == 'harddrive')):", "+            elif ((name == 'method') and (value <= 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_LtE", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_LtE", "result-type": "normal", "occurrence": 5, "module-name": "pykickstart.commands.method"}, "46": {"result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 80, in runTest\n    self.assertEqual(method.method, None)\n  File \"pykickstart.commands.method\", line 39, in __getattr__\nTypeError: unorderable types: str() >= list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -13,7 +13,7 @@", "             setattr(getattr(self.handler, method), 'seen', False)", " ", "     def __getattr__(self, name):", "-        if (name in self.internals):", "+        if (name >= self.internals):", "             if (name == 'method'):", "                 for method in self._methods:", "                     if getattr(self.handler, method).seen:"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_In_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_In_with_GtE", "result-type": "normal", "occurrence": 0, "module-name": "pykickstart.commands.method"}, "7": {"result-data": [{"occurrence": 6, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -34,7 +34,7 @@", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "-            elif ((name == 'method') and (value == 'nfs')):", "+            elif ((name is not 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "             elif ((name == 'method') and (value == 'url')):", "                 setattr(self.handler.url, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_IsNot", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_IsNot", "result-type": "normal", "occurrence": 6, "module-name": "pykickstart.commands.method"}, "122": {"result-data": [{"occurrence": 13, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -83,7 +83,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'liveimg')):", "+            if ((name is 'method') and (value == 'liveimg')):", "                 setattr(self.handler.liveimg, 'seen', True)", "             else:", "                 FC3_Method.__setattr__(self, name, value)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Is", "13", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Is", "result-type": "normal", "occurrence": 13, "module-name": "pykickstart.commands.method"}, "26": {"result-data": [{"occurrence": 10, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 187, in runTest\n    self.assertEqual(method.method, None)\n  File \"pykickstart.commands.method\", line 102, in __getattr__\nAttributeError\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -69,7 +69,7 @@", "     _methods = (FC3_Method._methods + ['liveimg'])", " ", "     def __getattr__(self, name):", "-        if (name == 'handler'):", "+        if (name != 'handler'):", "             raise AttributeError()", "         if self.handler.liveimg.seen:", "             if (name == 'method'):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_NotEq", "10", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_NotEq", "result-type": "normal", "occurrence": 10, "module-name": "pykickstart.commands.method"}, "138": {"result-data": [{"occurrence": 5, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -32,7 +32,7 @@", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "-            elif ((name == 'method') and (value == 'harddrive')):", "+            elif ((name == 'method') and (value > 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Gt", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Gt", "result-type": "normal", "occurrence": 5, "module-name": "pykickstart.commands.method"}, "10": {"result-data": [{"occurrence": 9, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -36,7 +36,7 @@", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "-            elif ((name == 'method') and (value == 'url')):", "+            elif ((name == 'method') and (value is not 'url')):", "                 setattr(self.handler.url, 'seen', True)", "             KickstartCommand.__setattr__(self, name, value)", "         elif self.handler.cdrom.seen:"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_IsNot", "9", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_IsNot", "result-type": "normal", "occurrence": 9, "module-name": "pykickstart.commands.method"}, "43": {"result-data": [{"occurrence": 12, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 159, in runTest\n    F18_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 139, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 127, in runTest\n    F13_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 33, in runTest\n    self.assert_parse(\"cdrom\", \"cdrom\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 91, in __init__\n    self.currentCmd = \"\"\n  File \"pykickstart.commands.method\", line 115, in __setattr__\n  File \"pykickstart.commands.method\", line 36, in _clear_seen\n  File \"pykickstart.commands.method\", line 102, in __getattr__\nAttributeError\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -81,7 +81,7 @@", " ", "     def __setattr__(self, name, value):", "         if (name in self.internals):", "-            if (name == 'method'):", "+            if (name <= 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'liveimg')):", "                 setattr(self.handler.liveimg, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_LtE", "12", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_LtE", "result-type": "normal", "occurrence": 12, "module-name": "pykickstart.commands.method"}, "41": {"result-data": [{"occurrence": 10, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 194, in runTest\n    self.assertEqual(method.foo, \"liveimg\")\n  File \"pykickstart.commands.method\", line 102, in __getattr__\nAttributeError\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -69,7 +69,7 @@", "     _methods = (FC3_Method._methods + ['liveimg'])", " ", "     def __getattr__(self, name):", "-        if (name == 'handler'):", "+        if (name <= 'handler'):", "             raise AttributeError()", "         if self.handler.liveimg.seen:", "             if (name == 'method'):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_LtE", "10", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_LtE", "result-type": "normal", "occurrence": 10, "module-name": "pykickstart.commands.method"}, "48": {"result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 159, in runTest\n    F18_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 139, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 127, in runTest\n    F13_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 33, in runTest\n    self.assert_parse(\"cdrom\", \"cdrom\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 88, in __init__\n    self.writePriority = writePriority\n  File \"pykickstart.commands.method\", line 113, in __setattr__\nTypeError: unorderable types: str() >= list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -80,7 +80,7 @@", "             return FC3_Method.__getattr__(self, name)", " ", "     def __setattr__(self, name, value):", "-        if (name in self.internals):", "+        if (name >= self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'liveimg')):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_In_with_GtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_In_with_GtE", "result-type": "normal", "occurrence": 2, "module-name": "pykickstart.commands.method"}, "110": {"result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -28,7 +28,7 @@", " ", "     def __setattr__(self, name, value):", "         if (name in self.internals):", "-            if (name == 'method'):", "+            if (name is 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Is", "result-type": "normal", "occurrence": 1, "module-name": "pykickstart.commands.method"}, "50": {"result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 33, in runTest\n    self.assert_parse(\"cdrom\", \"cdrom\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 88, in __init__\n    self.writePriority = writePriority\n  File \"pykickstart.commands.method\", line 58, in __setattr__\n  File \"pykickstart.commands.method\", line 36, in _clear_seen\n  File \"pykickstart.commands.method\", line 46, in __getattr__\nAttributeError: 'F13_Method' object has no attribute 'handler'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -28,7 +28,7 @@", " ", "     def __setattr__(self, name, value):", "         if (name in self.internals):", "-            if (name == 'method'):", "+            if (name >= 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_GtE", "result-type": "normal", "occurrence": 1, "module-name": "pykickstart.commands.method"}, "28": {"result-data": [{"occurrence": 12, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 159, in runTest\n    F18_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 139, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 127, in runTest\n    F13_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 33, in runTest\n    self.assert_parse(\"cdrom\", \"cdrom\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 88, in __init__\n    self.writePriority = writePriority\n  File \"pykickstart.commands.method\", line 115, in __setattr__\n  File \"pykickstart.commands.method\", line 36, in _clear_seen\n  File \"pykickstart.commands.method\", line 102, in __getattr__\nAttributeError\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -81,7 +81,7 @@", " ", "     def __setattr__(self, name, value):", "         if (name in self.internals):", "-            if (name == 'method'):", "+            if (name != 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'liveimg')):", "                 setattr(self.handler.liveimg, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_NotEq", "12", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_NotEq", "result-type": "normal", "occurrence": 12, "module-name": "pykickstart.commands.method"}, "23": {"result-data": [{"occurrence": 7, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -34,7 +34,7 @@", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "-            elif ((name == 'method') and (value == 'nfs')):", "+            elif ((name == 'method') and (value != 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "             elif ((name == 'method') and (value == 'url')):", "                 setattr(self.handler.url, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_NotEq", "7", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_NotEq", "result-type": "normal", "occurrence": 7, "module-name": "pykickstart.commands.method"}, "14": {"result-data": [{"occurrence": 13, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 195, in runTest\n    self.assertTrue(method.handler.liveimg.seen)    # pylint: disable=no-member\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -83,7 +83,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'liveimg')):", "+            if ((name is not 'method') and (value == 'liveimg')):", "                 setattr(self.handler.liveimg, 'seen', True)", "             else:", "                 FC3_Method.__setattr__(self, name, value)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_IsNot", "13", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_IsNot", "result-type": "normal", "occurrence": 13, "module-name": "pykickstart.commands.method"}, "96": {"result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -30,7 +30,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'cdrom')):", "+            if ((name not in 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_NotIn", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_NotIn", "result-type": "normal", "occurrence": 2, "module-name": "pykickstart.commands.method"}, "114": {"result-data": [{"occurrence": 5, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -32,7 +32,7 @@", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "-            elif ((name == 'method') and (value == 'harddrive')):", "+            elif ((name == 'method') and (value is 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Is", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Is", "result-type": "normal", "occurrence": 5, "module-name": "pykickstart.commands.method"}, "105": {"result-data": [{"occurrence": 11, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 196, in runTest\n    self.assertEqual(method.method, \"liveimg\")\n  File \"pykickstart.commands.method\", line 108, in __getattr__\nAttributeError: 'F19_Liveimg' object has no attribute 'method'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -72,7 +72,7 @@", "         if (name == 'handler'):", "             raise AttributeError()", "         if self.handler.liveimg.seen:", "-            if (name == 'method'):", "+            if (name not in 'method'):", "                 return 'liveimg'", "             else:", "                 return getattr(self.handler.liveimg, name)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_NotIn", "11", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_NotIn", "result-type": "normal", "occurrence": 11, "module-name": "pykickstart.commands.method"}, "66": {"result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -30,7 +30,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'cdrom')):", "+            if ((name < 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Lt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Lt", "result-type": "normal", "occurrence": 2, "module-name": "pykickstart.commands.method"}, "58": {"result-data": [{"occurrence": 9, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -36,7 +36,7 @@", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "-            elif ((name == 'method') and (value == 'url')):", "+            elif ((name == 'method') and (value >= 'url')):", "                 setattr(self.handler.url, 'seen', True)", "             KickstartCommand.__setattr__(self, name, value)", "         elif self.handler.cdrom.seen:"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_GtE", "9", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_GtE", "result-type": "normal", "occurrence": 9, "module-name": "pykickstart.commands.method"}, "68": {"result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -32,7 +32,7 @@", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "-            elif ((name == 'method') and (value == 'harddrive')):", "+            elif ((name < 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Lt", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Lt", "result-type": "normal", "occurrence": 4, "module-name": "pykickstart.commands.method"}, "103": {"result-data": [{"occurrence": 9, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -36,7 +36,7 @@", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "-            elif ((name == 'method') and (value == 'url')):", "+            elif ((name == 'method') and (value not in 'url')):", "                 setattr(self.handler.url, 'seen', True)", "             KickstartCommand.__setattr__(self, name, value)", "         elif self.handler.cdrom.seen:"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_NotIn", "9", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_NotIn", "result-type": "normal", "occurrence": 9, "module-name": "pykickstart.commands.method"}, "19": {"result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -30,7 +30,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'cdrom')):", "+            if ((name == 'method') and (value != 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_NotEq", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_NotEq", "result-type": "normal", "occurrence": 3, "module-name": "pykickstart.commands.method"}, "163": {"result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 80, in runTest\n    self.assertEqual(method.method, None)\n  File \"pykickstart.commands.method\", line 53, in __getattr__\nAttributeError: 'FC3_Url' object has no attribute 'method'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -13,7 +13,7 @@", "             setattr(getattr(self.handler, method), 'seen', False)", " ", "     def __getattr__(self, name):", "-        if (name in self.internals):", "+        if (name not in self.internals):", "             if (name == 'method'):", "                 for method in self._methods:", "                     if getattr(self.handler, method).seen:"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_In_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_In_with_NotIn", "result-type": "normal", "occurrence": 0, "module-name": "pykickstart.commands.method"}, "115": {"result-data": [{"occurrence": 6, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -34,7 +34,7 @@", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "-            elif ((name == 'method') and (value == 'nfs')):", "+            elif ((name is 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "             elif ((name == 'method') and (value == 'url')):", "                 setattr(self.handler.url, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Is", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Is", "result-type": "normal", "occurrence": 6, "module-name": "pykickstart.commands.method"}, "98": {"result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -32,7 +32,7 @@", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "-            elif ((name == 'method') and (value == 'harddrive')):", "+            elif ((name not in 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_NotIn", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_NotIn", "result-type": "normal", "occurrence": 4, "module-name": "pykickstart.commands.method"}, "128": {"result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 33, in runTest\n    self.assert_parse(\"cdrom\", \"cdrom\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 88, in __init__\n    self.writePriority = writePriority\n  File \"pykickstart.commands.method\", line 68, in __setattr__\n  File \"pykickstart.commands.method\", line 46, in __getattr__\nAttributeError: 'F13_Method' object has no attribute 'handler'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -27,7 +27,7 @@", "         return getattr(self.handler.url, name)", " ", "     def __setattr__(self, name, value):", "-        if (name in self.internals):", "+        if (name is self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_In_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_In_with_Is", "result-type": "normal", "occurrence": 1, "module-name": "pykickstart.commands.method"}, "2": {"result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 33, in runTest\n    self.assert_parse(\"cdrom\", \"cdrom\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 88, in __init__\n    self.writePriority = writePriority\n  File \"pykickstart.commands.method\", line 58, in __setattr__\n  File \"pykickstart.commands.method\", line 36, in _clear_seen\n  File \"pykickstart.commands.method\", line 46, in __getattr__\nAttributeError: 'F13_Method' object has no attribute 'handler'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -28,7 +28,7 @@", " ", "     def __setattr__(self, name, value):", "         if (name in self.internals):", "-            if (name == 'method'):", "+            if (name is not 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_IsNot", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_IsNot", "result-type": "normal", "occurrence": 1, "module-name": "pykickstart.commands.method"}, "145": {"result-data": [{"occurrence": 12, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 159, in runTest\n    F18_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 139, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 127, in runTest\n    F13_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 33, in runTest\n    self.assert_parse(\"cdrom\", \"cdrom\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 88, in __init__\n    self.writePriority = writePriority\n  File \"pykickstart.commands.method\", line 115, in __setattr__\n  File \"pykickstart.commands.method\", line 36, in _clear_seen\n  File \"pykickstart.commands.method\", line 102, in __getattr__\nAttributeError\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -81,7 +81,7 @@", " ", "     def __setattr__(self, name, value):", "         if (name in self.internals):", "-            if (name == 'method'):", "+            if (name > 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'liveimg')):", "                 setattr(self.handler.liveimg, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Gt", "12", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Gt", "result-type": "normal", "occurrence": 12, "module-name": "pykickstart.commands.method"}, "56": {"result-data": [{"occurrence": 7, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 86, in runTest\n    self.assertFalse(getattr(method.handler, unseen_method).seen)\nAssertionError: True is not false\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -34,7 +34,7 @@", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "-            elif ((name == 'method') and (value == 'nfs')):", "+            elif ((name == 'method') and (value >= 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "             elif ((name == 'method') and (value == 'url')):", "                 setattr(self.handler.url, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_GtE", "7", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_GtE", "result-type": "normal", "occurrence": 7, "module-name": "pykickstart.commands.method"}, "113": {"result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -32,7 +32,7 @@", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "-            elif ((name == 'method') and (value == 'harddrive')):", "+            elif ((name is 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Is", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Is", "result-type": "normal", "occurrence": 4, "module-name": "pykickstart.commands.method"}, "18": {"result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -30,7 +30,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'cdrom')):", "+            if ((name != 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_NotEq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_NotEq", "result-type": "normal", "occurrence": 2, "module-name": "pykickstart.commands.method"}, "92": {"result-data": [{"occurrence": 13, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -83,7 +83,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'liveimg')):", "+            if ((name in 'method') and (value == 'liveimg')):", "                 setattr(self.handler.liveimg, 'seen', True)", "             else:", "                 FC3_Method.__setattr__(self, name, value)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_In", "13", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_In", "result-type": "normal", "occurrence": 13, "module-name": "pykickstart.commands.method"}, "141": {"result-data": [{"occurrence": 8, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -36,7 +36,7 @@", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "-            elif ((name == 'method') and (value == 'url')):", "+            elif ((name > 'method') and (value == 'url')):", "                 setattr(self.handler.url, 'seen', True)", "             KickstartCommand.__setattr__(self, name, value)", "         elif self.handler.cdrom.seen:"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Gt", "8", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Gt", "result-type": "normal", "occurrence": 8, "module-name": "pykickstart.commands.method"}, "1": {"result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 80, in runTest\n    self.assertEqual(method.method, None)\n  File \"pykickstart.commands.method\", line 46, in __getattr__\nAttributeError: 'FC3_Method' object has no attribute 'method'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -14,7 +14,7 @@", " ", "     def __getattr__(self, name):", "         if (name in self.internals):", "-            if (name == 'method'):", "+            if (name is not 'method'):", "                 for method in self._methods:", "                     if getattr(self.handler, method).seen:", "                         return method"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_IsNot", "result-type": "normal", "occurrence": 0, "module-name": "pykickstart.commands.method"}, "25": {"result-data": [{"occurrence": 9, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -36,7 +36,7 @@", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "-            elif ((name == 'method') and (value == 'url')):", "+            elif ((name == 'method') and (value != 'url')):", "                 setattr(self.handler.url, 'seen', True)", "             KickstartCommand.__setattr__(self, name, value)", "         elif self.handler.cdrom.seen:"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_NotEq", "9", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_NotEq", "result-type": "normal", "occurrence": 9, "module-name": "pykickstart.commands.method"}, "160": {"result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 64}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -35,7 +35,7 @@", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "-                setattr(self.handler.nfs, 'seen', True)", "+                setattr(self.handler.nfs, 'seen', False)", "             elif ((name == 'method') and (value == 'url')):", "                 setattr(self.handler.url, 'seen', True)", "             KickstartCommand.__setattr__(self, name, value)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "boolean_replacer", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "boolean_replacer", "result-type": "normal", "occurrence": 3, "module-name": "pykickstart.commands.method"}, "65": {"result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 33, in runTest\n    self.assert_parse(\"cdrom\", \"cdrom\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 91, in __init__\n    self.currentCmd = \"\"\n  File \"pykickstart.commands.method\", line 58, in __setattr__\n  File \"pykickstart.commands.method\", line 36, in _clear_seen\n  File \"pykickstart.commands.method\", line 46, in __getattr__\nAttributeError: 'F13_Method' object has no attribute 'handler'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -28,7 +28,7 @@", " ", "     def __setattr__(self, name, value):", "         if (name in self.internals):", "-            if (name == 'method'):", "+            if (name < 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Lt", "result-type": "normal", "occurrence": 1, "module-name": "pykickstart.commands.method"}, "47": {"result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 33, in runTest\n    self.assert_parse(\"cdrom\", \"cdrom\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 88, in __init__\n    self.writePriority = writePriority\n  File \"pykickstart.commands.method\", line 56, in __setattr__\nTypeError: unorderable types: str() >= list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -27,7 +27,7 @@", "         return getattr(self.handler.url, name)", " ", "     def __setattr__(self, name, value):", "-        if (name in self.internals):", "+        if (name >= self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_In_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_In_with_GtE", "result-type": "normal", "occurrence": 1, "module-name": "pykickstart.commands.method"}, "154": {"result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 80, in runTest\n    self.assertEqual(method.method, None)\n  File \"pykickstart.commands.method\", line 39, in __getattr__\nTypeError: unorderable types: str() > list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -13,7 +13,7 @@", "             setattr(getattr(self.handler, method), 'seen', False)", " ", "     def __getattr__(self, name):", "-        if (name in self.internals):", "+        if (name > self.internals):", "             if (name == 'method'):", "                 for method in self._methods:", "                     if getattr(self.handler, method).seen:"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_In_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_In_with_Gt", "result-type": "normal", "occurrence": 0, "module-name": "pykickstart.commands.method"}, "22": {"result-data": [{"occurrence": 6, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -34,7 +34,7 @@", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "-            elif ((name == 'method') and (value == 'nfs')):", "+            elif ((name != 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "             elif ((name == 'method') and (value == 'url')):", "                 setattr(self.handler.url, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_NotEq", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_NotEq", "result-type": "normal", "occurrence": 6, "module-name": "pykickstart.commands.method"}, "6": {"result-data": [{"occurrence": 5, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -32,7 +32,7 @@", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "-            elif ((name == 'method') and (value == 'harddrive')):", "+            elif ((name == 'method') and (value is not 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_IsNot", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_IsNot", "result-type": "normal", "occurrence": 5, "module-name": "pykickstart.commands.method"}, "133": {"result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 80, in runTest\n    self.assertEqual(method.method, None)\n  File \"pykickstart.commands.method\", line 46, in __getattr__\nAttributeError: 'FC3_Method' object has no attribute 'method'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -14,7 +14,7 @@", " ", "     def __getattr__(self, name):", "         if (name in self.internals):", "-            if (name == 'method'):", "+            if (name > 'method'):", "                 for method in self._methods:", "                     if getattr(self.handler, method).seen:", "                         return method"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Gt", "result-type": "normal", "occurrence": 0, "module-name": "pykickstart.commands.method"}, "67": {"result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -30,7 +30,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'cdrom')):", "+            if ((name == 'method') and (value < 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Lt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Lt", "result-type": "normal", "occurrence": 3, "module-name": "pykickstart.commands.method"}, "93": {"result-data": [{"occurrence": 14, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -83,7 +83,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'liveimg')):", "+            if ((name == 'method') and (value in 'liveimg')):", "                 setattr(self.handler.liveimg, 'seen', True)", "             else:", "                 FC3_Method.__setattr__(self, name, value)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_In", "14", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_In", "result-type": "normal", "occurrence": 14, "module-name": "pykickstart.commands.method"}, "5": {"result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -32,7 +32,7 @@", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "-            elif ((name == 'method') and (value == 'harddrive')):", "+            elif ((name is not 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_IsNot", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_IsNot", "result-type": "normal", "occurrence": 4, "module-name": "pykickstart.commands.method"}, "99": {"result-data": [{"occurrence": 5, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -32,7 +32,7 @@", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "-            elif ((name == 'method') and (value == 'harddrive')):", "+            elif ((name == 'method') and (value not in 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_NotIn", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_NotIn", "result-type": "normal", "occurrence": 5, "module-name": "pykickstart.commands.method"}, "97": {"result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -30,7 +30,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'cdrom')):", "+            if ((name == 'method') and (value not in 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_NotIn", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_NotIn", "result-type": "normal", "occurrence": 3, "module-name": "pykickstart.commands.method"}, "70": {"result-data": [{"occurrence": 6, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -34,7 +34,7 @@", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "-            elif ((name == 'method') and (value == 'nfs')):", "+            elif ((name < 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "             elif ((name == 'method') and (value == 'url')):", "                 setattr(self.handler.url, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Lt", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Lt", "result-type": "normal", "occurrence": 6, "module-name": "pykickstart.commands.method"}, "64": {"result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 80, in runTest\n    self.assertEqual(method.method, None)\n  File \"pykickstart.commands.method\", line 46, in __getattr__\nAttributeError: 'FC3_Method' object has no attribute 'method'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -14,7 +14,7 @@", " ", "     def __getattr__(self, name):", "         if (name in self.internals):", "-            if (name == 'method'):", "+            if (name < 'method'):", "                 for method in self._methods:", "                     if getattr(self.handler, method).seen:", "                         return method"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Lt", "result-type": "normal", "occurrence": 0, "module-name": "pykickstart.commands.method"}, "29": {"result-data": [{"occurrence": 13, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 195, in runTest\n    self.assertTrue(method.handler.liveimg.seen)    # pylint: disable=no-member\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -83,7 +83,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'liveimg')):", "+            if ((name != 'method') and (value == 'liveimg')):", "                 setattr(self.handler.liveimg, 'seen', True)", "             else:", "                 FC3_Method.__setattr__(self, name, value)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_NotEq", "13", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_NotEq", "result-type": "normal", "occurrence": 13, "module-name": "pykickstart.commands.method"}, "109": {"result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -14,7 +14,7 @@", " ", "     def __getattr__(self, name):", "         if (name in self.internals):", "-            if (name == 'method'):", "+            if (name is 'method'):", "                 for method in self._methods:", "                     if getattr(self.handler, method).seen:", "                         return method"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Is", "result-type": "normal", "occurrence": 0, "module-name": "pykickstart.commands.method"}, "162": {"result-data": [{"occurrence": 5, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 117}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 195, in runTest\n    self.assertTrue(method.handler.liveimg.seen)    # pylint: disable=no-member\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -84,7 +84,7 @@", "             if (name == 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'liveimg')):", "-                setattr(self.handler.liveimg, 'seen', True)", "+                setattr(self.handler.liveimg, 'seen', False)", "             else:", "                 FC3_Method.__setattr__(self, name, value)", "         elif self.handler.liveimg.seen:"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "boolean_replacer", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "boolean_replacer", "result-type": "normal", "occurrence": 5, "module-name": "pykickstart.commands.method"}, "157": {"result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 36}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 86, in runTest\n    self.assertFalse(getattr(method.handler, unseen_method).seen)\nAssertionError: True is not false\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -10,7 +10,7 @@", "     def _clear_seen(self):", "         \" Reset all the method's seen attrs to False\"", "         for method in self._methods:", "-            setattr(getattr(self.handler, method), 'seen', False)", "+            setattr(getattr(self.handler, method), 'seen', True)", " ", "     def __getattr__(self, name):", "         if (name in self.internals):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "boolean_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "boolean_replacer", "result-type": "normal", "occurrence": 0, "module-name": "pykickstart.commands.method"}, "52": {"result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 86, in runTest\n    self.assertFalse(getattr(method.handler, unseen_method).seen)\nAssertionError: True is not false\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -30,7 +30,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'cdrom')):", "+            if ((name == 'method') and (value >= 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_GtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_GtE", "result-type": "normal", "occurrence": 3, "module-name": "pykickstart.commands.method"}, "32": {"result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 33, in runTest\n    self.assert_parse(\"cdrom\", \"cdrom\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 91, in __init__\n    self.currentCmd = \"\"\n  File \"pykickstart.commands.method\", line 58, in __setattr__\n  File \"pykickstart.commands.method\", line 36, in _clear_seen\n  File \"pykickstart.commands.method\", line 46, in __getattr__\nAttributeError: 'F13_Method' object has no attribute 'handler'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -28,7 +28,7 @@", " ", "     def __setattr__(self, name, value):", "         if (name in self.internals):", "-            if (name == 'method'):", "+            if (name <= 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_LtE", "result-type": "normal", "occurrence": 1, "module-name": "pykickstart.commands.method"}, "155": {"result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 33, in runTest\n    self.assert_parse(\"cdrom\", \"cdrom\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 88, in __init__\n    self.writePriority = writePriority\n  File \"pykickstart.commands.method\", line 56, in __setattr__\nTypeError: unorderable types: str() > list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -27,7 +27,7 @@", "         return getattr(self.handler.url, name)", " ", "     def __setattr__(self, name, value):", "-        if (name in self.internals):", "+        if (name > self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_In_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_In_with_Gt", "result-type": "normal", "occurrence": 1, "module-name": "pykickstart.commands.method"}, "136": {"result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -30,7 +30,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'cdrom')):", "+            if ((name == 'method') and (value > 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Gt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Gt", "result-type": "normal", "occurrence": 3, "module-name": "pykickstart.commands.method"}, "61": {"result-data": [{"occurrence": 12, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 159, in runTest\n    F18_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 139, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 127, in runTest\n    F13_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 33, in runTest\n    self.assert_parse(\"cdrom\", \"cdrom\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 88, in __init__\n    self.writePriority = writePriority\n  File \"pykickstart.commands.method\", line 115, in __setattr__\n  File \"pykickstart.commands.method\", line 36, in _clear_seen\n  File \"pykickstart.commands.method\", line 102, in __getattr__\nAttributeError\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -81,7 +81,7 @@", " ", "     def __setattr__(self, name, value):", "         if (name in self.internals):", "-            if (name == 'method'):", "+            if (name >= 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'liveimg')):", "                 setattr(self.handler.liveimg, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_GtE", "12", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_GtE", "result-type": "normal", "occurrence": 12, "module-name": "pykickstart.commands.method"}, "86": {"result-data": [{"occurrence": 7, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -34,7 +34,7 @@", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "-            elif ((name == 'method') and (value == 'nfs')):", "+            elif ((name == 'method') and (value in 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "             elif ((name == 'method') and (value == 'url')):", "                 setattr(self.handler.url, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_In", "7", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_In", "result-type": "normal", "occurrence": 7, "module-name": "pykickstart.commands.method"}, "139": {"result-data": [{"occurrence": 6, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -34,7 +34,7 @@", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "-            elif ((name == 'method') and (value == 'nfs')):", "+            elif ((name > 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "             elif ((name == 'method') and (value == 'url')):", "                 setattr(self.handler.url, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Gt", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Gt", "result-type": "normal", "occurrence": 6, "module-name": "pykickstart.commands.method"}, "16": {"result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 80, in runTest\n    self.assertEqual(method.method, None)\n  File \"pykickstart.commands.method\", line 46, in __getattr__\nAttributeError: 'FC3_Method' object has no attribute 'method'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -14,7 +14,7 @@", " ", "     def __getattr__(self, name):", "         if (name in self.internals):", "-            if (name == 'method'):", "+            if (name != 'method'):", "                 for method in self._methods:", "                     if getattr(self.handler, method).seen:", "                         return method"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_NotEq", "result-type": "normal", "occurrence": 0, "module-name": "pykickstart.commands.method"}, "116": {"result-data": [{"occurrence": 7, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -34,7 +34,7 @@", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "-            elif ((name == 'method') and (value == 'nfs')):", "+            elif ((name == 'method') and (value is 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "             elif ((name == 'method') and (value == 'url')):", "                 setattr(self.handler.url, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Is", "7", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Is", "result-type": "normal", "occurrence": 7, "module-name": "pykickstart.commands.method"}, "91": {"result-data": [{"occurrence": 12, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -81,7 +81,7 @@", " ", "     def __setattr__(self, name, value):", "         if (name in self.internals):", "-            if (name == 'method'):", "+            if (name in 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'liveimg')):", "                 setattr(self.handler.liveimg, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_In", "12", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_In", "result-type": "normal", "occurrence": 12, "module-name": "pykickstart.commands.method"}, "60": {"result-data": [{"occurrence": 11, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -72,7 +72,7 @@", "         if (name == 'handler'):", "             raise AttributeError()", "         if self.handler.liveimg.seen:", "-            if (name == 'method'):", "+            if (name >= 'method'):", "                 return 'liveimg'", "             else:", "                 return getattr(self.handler.liveimg, name)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_GtE", "11", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_GtE", "result-type": "normal", "occurrence": 11, "module-name": "pykickstart.commands.method"}, "153": {"result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 159, in runTest\n    F18_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 139, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 127, in runTest\n    F13_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 33, in runTest\n    self.assert_parse(\"cdrom\", \"cdrom\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 88, in __init__\n    self.writePriority = writePriority\n  File \"pykickstart.commands.method\", line 113, in __setattr__\nTypeError: unorderable types: str() <= list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -80,7 +80,7 @@", "             return FC3_Method.__getattr__(self, name)", " ", "     def __setattr__(self, name, value):", "-        if (name in self.internals):", "+        if (name <= self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'liveimg')):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_In_with_LtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_In_with_LtE", "result-type": "normal", "occurrence": 2, "module-name": "pykickstart.commands.method"}, "106": {"result-data": [{"occurrence": 12, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 159, in runTest\n    F18_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 139, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 127, in runTest\n    F13_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 33, in runTest\n    self.assert_parse(\"cdrom\", \"cdrom\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 88, in __init__\n    self.writePriority = writePriority\n  File \"pykickstart.commands.method\", line 115, in __setattr__\n  File \"pykickstart.commands.method\", line 36, in _clear_seen\n  File \"pykickstart.commands.method\", line 102, in __getattr__\nAttributeError\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -81,7 +81,7 @@", " ", "     def __setattr__(self, name, value):", "         if (name in self.internals):", "-            if (name == 'method'):", "+            if (name not in 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'liveimg')):", "                 setattr(self.handler.liveimg, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_NotIn", "12", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_NotIn", "result-type": "normal", "occurrence": 12, "module-name": "pykickstart.commands.method"}, "76": {"result-data": [{"occurrence": 12, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 159, in runTest\n    F18_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 139, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 127, in runTest\n    F13_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 33, in runTest\n    self.assert_parse(\"cdrom\", \"cdrom\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 91, in __init__\n    self.currentCmd = \"\"\n  File \"pykickstart.commands.method\", line 115, in __setattr__\n  File \"pykickstart.commands.method\", line 36, in _clear_seen\n  File \"pykickstart.commands.method\", line 102, in __getattr__\nAttributeError\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -81,7 +81,7 @@", " ", "     def __setattr__(self, name, value):", "         if (name in self.internals):", "-            if (name == 'method'):", "+            if (name < 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'liveimg')):", "                 setattr(self.handler.liveimg, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Lt", "12", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Lt", "result-type": "normal", "occurrence": 12, "module-name": "pykickstart.commands.method"}, "59": {"result-data": [{"occurrence": 10, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 187, in runTest\n    self.assertEqual(method.method, None)\n  File \"pykickstart.commands.method\", line 102, in __getattr__\nAttributeError\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -69,7 +69,7 @@", "     _methods = (FC3_Method._methods + ['liveimg'])", " ", "     def __getattr__(self, name):", "-        if (name == 'handler'):", "+        if (name >= 'handler'):", "             raise AttributeError()", "         if self.handler.liveimg.seen:", "             if (name == 'method'):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_GtE", "10", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_GtE", "result-type": "normal", "occurrence": 10, "module-name": "pykickstart.commands.method"}, "73": {"result-data": [{"occurrence": 9, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -36,7 +36,7 @@", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "-            elif ((name == 'method') and (value == 'url')):", "+            elif ((name == 'method') and (value < 'url')):", "                 setattr(self.handler.url, 'seen', True)", "             KickstartCommand.__setattr__(self, name, value)", "         elif self.handler.cdrom.seen:"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Lt", "9", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Lt", "result-type": "normal", "occurrence": 9, "module-name": "pykickstart.commands.method"}, "164": {"result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 33, in runTest\n    self.assert_parse(\"cdrom\", \"cdrom\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 88, in __init__\n    self.writePriority = writePriority\n  File \"pykickstart.commands.method\", line 68, in __setattr__\n  File \"pykickstart.commands.method\", line 46, in __getattr__\nAttributeError: 'F13_Method' object has no attribute 'handler'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -27,7 +27,7 @@", "         return getattr(self.handler.url, name)", " ", "     def __setattr__(self, name, value):", "-        if (name in self.internals):", "+        if (name not in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_In_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_In_with_NotIn", "result-type": "normal", "occurrence": 1, "module-name": "pykickstart.commands.method"}, "107": {"result-data": [{"occurrence": 13, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 195, in runTest\n    self.assertTrue(method.handler.liveimg.seen)    # pylint: disable=no-member\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -83,7 +83,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'liveimg')):", "+            if ((name not in 'method') and (value == 'liveimg')):", "                 setattr(self.handler.liveimg, 'seen', True)", "             else:", "                 FC3_Method.__setattr__(self, name, value)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_NotIn", "13", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_NotIn", "result-type": "normal", "occurrence": 13, "module-name": "pykickstart.commands.method"}, "35": {"result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -32,7 +32,7 @@", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "-            elif ((name == 'method') and (value == 'harddrive')):", "+            elif ((name <= 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_LtE", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_LtE", "result-type": "normal", "occurrence": 4, "module-name": "pykickstart.commands.method"}, "9": {"result-data": [{"occurrence": 8, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -36,7 +36,7 @@", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "-            elif ((name == 'method') and (value == 'url')):", "+            elif ((name is not 'method') and (value == 'url')):", "                 setattr(self.handler.url, 'seen', True)", "             KickstartCommand.__setattr__(self, name, value)", "         elif self.handler.cdrom.seen:"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_IsNot", "8", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_IsNot", "result-type": "normal", "occurrence": 8, "module-name": "pykickstart.commands.method"}, "100": {"result-data": [{"occurrence": 6, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -34,7 +34,7 @@", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "-            elif ((name == 'method') and (value == 'nfs')):", "+            elif ((name not in 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "             elif ((name == 'method') and (value == 'url')):", "                 setattr(self.handler.url, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_NotIn", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_NotIn", "result-type": "normal", "occurrence": 6, "module-name": "pykickstart.commands.method"}, "82": {"result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -30,7 +30,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'cdrom')):", "+            if ((name == 'method') and (value in 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_In", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_In", "result-type": "normal", "occurrence": 3, "module-name": "pykickstart.commands.method"}, "168": {"result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 159, in runTest\n    F18_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 139, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 127, in runTest\n    F13_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 33, in runTest\n    self.assert_parse(\"cdrom\", \"cdrom\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 88, in __init__\n    self.writePriority = writePriority\n  File \"pykickstart.commands.method\", line 120, in __setattr__\n  File \"pykickstart.commands.method\", line 102, in __getattr__\nAttributeError\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -80,7 +80,7 @@", "             return FC3_Method.__getattr__(self, name)", " ", "     def __setattr__(self, name, value):", "-        if (name in self.internals):", "+        if (name == self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'liveimg')):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_In_with_Eq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_In_with_Eq", "result-type": "normal", "occurrence": 2, "module-name": "pykickstart.commands.method"}, "20": {"result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -32,7 +32,7 @@", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "-            elif ((name == 'method') and (value == 'harddrive')):", "+            elif ((name != 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_NotEq", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_NotEq", "result-type": "normal", "occurrence": 4, "module-name": "pykickstart.commands.method"}, "27": {"result-data": [{"occurrence": 11, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 196, in runTest\n    self.assertEqual(method.method, \"liveimg\")\n  File \"pykickstart.commands.method\", line 108, in __getattr__\nAttributeError: 'F19_Liveimg' object has no attribute 'method'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -72,7 +72,7 @@", "         if (name == 'handler'):", "             raise AttributeError()", "         if self.handler.liveimg.seen:", "-            if (name == 'method'):", "+            if (name != 'method'):", "                 return 'liveimg'", "             else:", "                 return getattr(self.handler.liveimg, name)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_NotEq", "11", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_NotEq", "result-type": "normal", "occurrence": 11, "module-name": "pykickstart.commands.method"}, "57": {"result-data": [{"occurrence": 8, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -36,7 +36,7 @@", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "-            elif ((name == 'method') and (value == 'url')):", "+            elif ((name >= 'method') and (value == 'url')):", "                 setattr(self.handler.url, 'seen', True)", "             KickstartCommand.__setattr__(self, name, value)", "         elif self.handler.cdrom.seen:"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_GtE", "8", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_GtE", "result-type": "normal", "occurrence": 8, "module-name": "pykickstart.commands.method"}, "88": {"result-data": [{"occurrence": 9, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -36,7 +36,7 @@", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "-            elif ((name == 'method') and (value == 'url')):", "+            elif ((name == 'method') and (value in 'url')):", "                 setattr(self.handler.url, 'seen', True)", "             KickstartCommand.__setattr__(self, name, value)", "         elif self.handler.cdrom.seen:"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_In", "9", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_In", "result-type": "normal", "occurrence": 9, "module-name": "pykickstart.commands.method"}, "45": {"result-data": [{"occurrence": 14, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -83,7 +83,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'liveimg')):", "+            if ((name == 'method') and (value <= 'liveimg')):", "                 setattr(self.handler.liveimg, 'seen', True)", "             else:", "                 FC3_Method.__setattr__(self, name, value)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_LtE", "14", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_LtE", "result-type": "normal", "occurrence": 14, "module-name": "pykickstart.commands.method"}, "81": {"result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -30,7 +30,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'cdrom')):", "+            if ((name in 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_In", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_In", "result-type": "normal", "occurrence": 2, "module-name": "pykickstart.commands.method"}, "134": {"result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 33, in runTest\n    self.assert_parse(\"cdrom\", \"cdrom\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 88, in __init__\n    self.writePriority = writePriority\n  File \"pykickstart.commands.method\", line 58, in __setattr__\n  File \"pykickstart.commands.method\", line 36, in _clear_seen\n  File \"pykickstart.commands.method\", line 46, in __getattr__\nAttributeError: 'F13_Method' object has no attribute 'handler'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -28,7 +28,7 @@", " ", "     def __setattr__(self, name, value):", "         if (name in self.internals):", "-            if (name == 'method'):", "+            if (name > 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Gt", "result-type": "normal", "occurrence": 1, "module-name": "pykickstart.commands.method"}, "135": {"result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -30,7 +30,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'cdrom')):", "+            if ((name > 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Gt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Gt", "result-type": "normal", "occurrence": 2, "module-name": "pykickstart.commands.method"}, "126": {"result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 194, in runTest\n    self.assertEqual(method.foo, \"liveimg\")\n  File \"pykickstart.commands.method\", line 108, in __getattr__\nAttributeError: 'F19_Liveimg' object has no attribute 'foo'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -80,7 +80,7 @@", "             return FC3_Method.__getattr__(self, name)", " ", "     def __setattr__(self, name, value):", "-        if (name in self.internals):", "+        if (name != self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'liveimg')):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_In_with_NotEq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_In_with_NotEq", "result-type": "normal", "occurrence": 2, "module-name": "pykickstart.commands.method"}, "37": {"result-data": [{"occurrence": 6, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -34,7 +34,7 @@", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "-            elif ((name == 'method') and (value == 'nfs')):", "+            elif ((name <= 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "             elif ((name == 'method') and (value == 'url')):", "                 setattr(self.handler.url, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_LtE", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_LtE", "result-type": "normal", "occurrence": 6, "module-name": "pykickstart.commands.method"}, "31": {"result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -14,7 +14,7 @@", " ", "     def __getattr__(self, name):", "         if (name in self.internals):", "-            if (name == 'method'):", "+            if (name <= 'method'):", "                 for method in self._methods:", "                     if getattr(self.handler, method).seen:", "                         return method"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_LtE", "result-type": "normal", "occurrence": 0, "module-name": "pykickstart.commands.method"}, "89": {"result-data": [{"occurrence": 10, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -69,7 +69,7 @@", "     _methods = (FC3_Method._methods + ['liveimg'])", " ", "     def __getattr__(self, name):", "-        if (name == 'handler'):", "+        if (name in 'handler'):", "             raise AttributeError()", "         if self.handler.liveimg.seen:", "             if (name == 'method'):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_In", "10", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_In", "result-type": "normal", "occurrence": 10, "module-name": "pykickstart.commands.method"}, "80": {"result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -28,7 +28,7 @@", " ", "     def __setattr__(self, name, value):", "         if (name in self.internals):", "-            if (name == 'method'):", "+            if (name in 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_In", "result-type": "normal", "occurrence": 1, "module-name": "pykickstart.commands.method"}, "147": {"result-data": [{"occurrence": 14, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 195, in runTest\n    self.assertTrue(method.handler.liveimg.seen)    # pylint: disable=no-member\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -83,7 +83,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'liveimg')):", "+            if ((name == 'method') and (value > 'liveimg')):", "                 setattr(self.handler.liveimg, 'seen', True)", "             else:", "                 FC3_Method.__setattr__(self, name, value)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Gt", "14", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Gt", "result-type": "normal", "occurrence": 14, "module-name": "pykickstart.commands.method"}, "124": {"result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 87, in runTest\n    self.assertEqual(method.foo, chosen_method)\n  File \"pykickstart.commands.method\", line 46, in __getattr__\nAttributeError: 'FC3_Method' object has no attribute 'foo'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -13,7 +13,7 @@", "             setattr(getattr(self.handler, method), 'seen', False)", " ", "     def __getattr__(self, name):", "-        if (name in self.internals):", "+        if (name != self.internals):", "             if (name == 'method'):", "                 for method in self._methods:", "                     if getattr(self.handler, method).seen:"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_In_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_In_with_NotEq", "result-type": "normal", "occurrence": 0, "module-name": "pykickstart.commands.method"}, "159": {"result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 62}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -33,7 +33,7 @@", "             if ((name == 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "-                setattr(self.handler.harddrive, 'seen', True)", "+                setattr(self.handler.harddrive, 'seen', False)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "             elif ((name == 'method') and (value == 'url')):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "boolean_replacer", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "boolean_replacer", "result-type": "normal", "occurrence": 2, "module-name": "pykickstart.commands.method"}, "78": {"result-data": [{"occurrence": 14, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 195, in runTest\n    self.assertTrue(method.handler.liveimg.seen)    # pylint: disable=no-member\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -83,7 +83,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'liveimg')):", "+            if ((name == 'method') and (value < 'liveimg')):", "                 setattr(self.handler.liveimg, 'seen', True)", "             else:", "                 FC3_Method.__setattr__(self, name, value)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Lt", "14", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Lt", "result-type": "normal", "occurrence": 14, "module-name": "pykickstart.commands.method"}, "118": {"result-data": [{"occurrence": 9, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -36,7 +36,7 @@", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "-            elif ((name == 'method') and (value == 'url')):", "+            elif ((name == 'method') and (value is 'url')):", "                 setattr(self.handler.url, 'seen', True)", "             KickstartCommand.__setattr__(self, name, value)", "         elif self.handler.cdrom.seen:"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Is", "9", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Is", "result-type": "normal", "occurrence": 9, "module-name": "pykickstart.commands.method"}, "120": {"result-data": [{"occurrence": 11, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -72,7 +72,7 @@", "         if (name == 'handler'):", "             raise AttributeError()", "         if self.handler.liveimg.seen:", "-            if (name == 'method'):", "+            if (name is 'method'):", "                 return 'liveimg'", "             else:", "                 return getattr(self.handler.liveimg, name)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Is", "11", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Is", "result-type": "normal", "occurrence": 11, "module-name": "pykickstart.commands.method"}, "87": {"result-data": [{"occurrence": 8, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -36,7 +36,7 @@", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "-            elif ((name == 'method') and (value == 'url')):", "+            elif ((name in 'method') and (value == 'url')):", "                 setattr(self.handler.url, 'seen', True)", "             KickstartCommand.__setattr__(self, name, value)", "         elif self.handler.cdrom.seen:"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_In", "8", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_In", "result-type": "normal", "occurrence": 8, "module-name": "pykickstart.commands.method"}, "152": {"result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 33, in runTest\n    self.assert_parse(\"cdrom\", \"cdrom\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 88, in __init__\n    self.writePriority = writePriority\n  File \"pykickstart.commands.method\", line 56, in __setattr__\nTypeError: unorderable types: str() <= list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -27,7 +27,7 @@", "         return getattr(self.handler.url, name)", " ", "     def __setattr__(self, name, value):", "-        if (name in self.internals):", "+        if (name <= self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_In_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_In_with_LtE", "result-type": "normal", "occurrence": 1, "module-name": "pykickstart.commands.method"}, "34": {"result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -30,7 +30,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'cdrom')):", "+            if ((name == 'method') and (value <= 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_LtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_LtE", "result-type": "normal", "occurrence": 3, "module-name": "pykickstart.commands.method"}, "108": {"result-data": [{"occurrence": 14, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 195, in runTest\n    self.assertTrue(method.handler.liveimg.seen)    # pylint: disable=no-member\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -83,7 +83,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'liveimg')):", "+            if ((name == 'method') and (value not in 'liveimg')):", "                 setattr(self.handler.liveimg, 'seen', True)", "             else:", "                 FC3_Method.__setattr__(self, name, value)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_NotIn", "14", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_NotIn", "result-type": "normal", "occurrence": 14, "module-name": "pykickstart.commands.method"}, "8": {"result-data": [{"occurrence": 7, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -34,7 +34,7 @@", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "-            elif ((name == 'method') and (value == 'nfs')):", "+            elif ((name == 'method') and (value is not 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "             elif ((name == 'method') and (value == 'url')):", "                 setattr(self.handler.url, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_IsNot", "7", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_IsNot", "result-type": "normal", "occurrence": 7, "module-name": "pykickstart.commands.method"}, "38": {"result-data": [{"occurrence": 7, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -34,7 +34,7 @@", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "-            elif ((name == 'method') and (value == 'nfs')):", "+            elif ((name == 'method') and (value <= 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "             elif ((name == 'method') and (value == 'url')):", "                 setattr(self.handler.url, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_LtE", "7", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_LtE", "result-type": "normal", "occurrence": 7, "module-name": "pykickstart.commands.method"}, "140": {"result-data": [{"occurrence": 7, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -34,7 +34,7 @@", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "-            elif ((name == 'method') and (value == 'nfs')):", "+            elif ((name == 'method') and (value > 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "             elif ((name == 'method') and (value == 'url')):", "                 setattr(self.handler.url, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Gt", "7", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Gt", "result-type": "normal", "occurrence": 7, "module-name": "pykickstart.commands.method"}, "117": {"result-data": [{"occurrence": 8, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -36,7 +36,7 @@", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "-            elif ((name == 'method') and (value == 'url')):", "+            elif ((name is 'method') and (value == 'url')):", "                 setattr(self.handler.url, 'seen', True)", "             KickstartCommand.__setattr__(self, name, value)", "         elif self.handler.cdrom.seen:"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Is", "8", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Is", "result-type": "normal", "occurrence": 8, "module-name": "pykickstart.commands.method"}, "17": {"result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 33, in runTest\n    self.assert_parse(\"cdrom\", \"cdrom\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 88, in __init__\n    self.writePriority = writePriority\n  File \"pykickstart.commands.method\", line 58, in __setattr__\n  File \"pykickstart.commands.method\", line 36, in _clear_seen\n  File \"pykickstart.commands.method\", line 46, in __getattr__\nAttributeError: 'F13_Method' object has no attribute 'handler'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -28,7 +28,7 @@", " ", "     def __setattr__(self, name, value):", "         if (name in self.internals):", "-            if (name == 'method'):", "+            if (name != 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_NotEq", "result-type": "normal", "occurrence": 1, "module-name": "pykickstart.commands.method"}, "72": {"result-data": [{"occurrence": 8, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -36,7 +36,7 @@", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "-            elif ((name == 'method') and (value == 'url')):", "+            elif ((name < 'method') and (value == 'url')):", "                 setattr(self.handler.url, 'seen', True)", "             KickstartCommand.__setattr__(self, name, value)", "         elif self.handler.cdrom.seen:"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Lt", "8", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Lt", "result-type": "normal", "occurrence": 8, "module-name": "pykickstart.commands.method"}, "142": {"result-data": [{"occurrence": 9, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -36,7 +36,7 @@", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "-            elif ((name == 'method') and (value == 'url')):", "+            elif ((name == 'method') and (value > 'url')):", "                 setattr(self.handler.url, 'seen', True)", "             KickstartCommand.__setattr__(self, name, value)", "         elif self.handler.cdrom.seen:"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Gt", "9", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Gt", "result-type": "normal", "occurrence": 9, "module-name": "pykickstart.commands.method"}, "161": {"result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 66}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -37,7 +37,7 @@", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "             elif ((name == 'method') and (value == 'url')):", "-                setattr(self.handler.url, 'seen', True)", "+                setattr(self.handler.url, 'seen', False)", "             KickstartCommand.__setattr__(self, name, value)", "         elif self.handler.cdrom.seen:", "             setattr(self.handler.cdrom, name, value)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "boolean_replacer", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "boolean_replacer", "result-type": "normal", "occurrence": 4, "module-name": "pykickstart.commands.method"}, "112": {"result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -30,7 +30,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'cdrom')):", "+            if ((name == 'method') and (value is 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Is", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Is", "result-type": "normal", "occurrence": 3, "module-name": "pykickstart.commands.method"}, "167": {"result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 33, in runTest\n    self.assert_parse(\"cdrom\", \"cdrom\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 88, in __init__\n    self.writePriority = writePriority\n  File \"pykickstart.commands.method\", line 68, in __setattr__\n  File \"pykickstart.commands.method\", line 46, in __getattr__\nAttributeError: 'F13_Method' object has no attribute 'handler'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -27,7 +27,7 @@", "         return getattr(self.handler.url, name)", " ", "     def __setattr__(self, name, value):", "-        if (name in self.internals):", "+        if (name == self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_In_with_Eq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_In_with_Eq", "result-type": "normal", "occurrence": 1, "module-name": "pykickstart.commands.method"}, "74": {"result-data": [{"occurrence": 10, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 194, in runTest\n    self.assertEqual(method.foo, \"liveimg\")\n  File \"pykickstart.commands.method\", line 102, in __getattr__\nAttributeError\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -69,7 +69,7 @@", "     _methods = (FC3_Method._methods + ['liveimg'])", " ", "     def __getattr__(self, name):", "-        if (name == 'handler'):", "+        if (name < 'handler'):", "             raise AttributeError()", "         if self.handler.liveimg.seen:", "             if (name == 'method'):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Lt", "10", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Lt", "result-type": "normal", "occurrence": 10, "module-name": "pykickstart.commands.method"}, "131": {"result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 33, in runTest\n    self.assert_parse(\"cdrom\", \"cdrom\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 88, in __init__\n    self.writePriority = writePriority\n  File \"pykickstart.commands.method\", line 56, in __setattr__\nTypeError: unorderable types: str() < list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -27,7 +27,7 @@", "         return getattr(self.handler.url, name)", " ", "     def __setattr__(self, name, value):", "-        if (name in self.internals):", "+        if (name < self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_In_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_In_with_Lt", "result-type": "normal", "occurrence": 1, "module-name": "pykickstart.commands.method"}, "144": {"result-data": [{"occurrence": 11, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 196, in runTest\n    self.assertEqual(method.method, \"liveimg\")\n  File \"pykickstart.commands.method\", line 108, in __getattr__\nAttributeError: 'F19_Liveimg' object has no attribute 'method'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -72,7 +72,7 @@", "         if (name == 'handler'):", "             raise AttributeError()", "         if self.handler.liveimg.seen:", "-            if (name == 'method'):", "+            if (name > 'method'):", "                 return 'liveimg'", "             else:", "                 return getattr(self.handler.liveimg, name)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Gt", "11", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Gt", "result-type": "normal", "occurrence": 11, "module-name": "pykickstart.commands.method"}, "53": {"result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -32,7 +32,7 @@", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "-            elif ((name == 'method') and (value == 'harddrive')):", "+            elif ((name >= 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_GtE", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_GtE", "result-type": "normal", "occurrence": 4, "module-name": "pykickstart.commands.method"}, "94": {"result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 80, in runTest\n    self.assertEqual(method.method, None)\n  File \"pykickstart.commands.method\", line 46, in __getattr__\nAttributeError: 'FC3_Method' object has no attribute 'method'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -14,7 +14,7 @@", " ", "     def __getattr__(self, name):", "         if (name in self.internals):", "-            if (name == 'method'):", "+            if (name not in 'method'):", "                 for method in self._methods:", "                     if getattr(self.handler, method).seen:", "                         return method"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_NotIn", "result-type": "normal", "occurrence": 0, "module-name": "pykickstart.commands.method"}, "63": {"result-data": [{"occurrence": 14, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -83,7 +83,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'liveimg')):", "+            if ((name == 'method') and (value >= 'liveimg')):", "                 setattr(self.handler.liveimg, 'seen', True)", "             else:", "                 FC3_Method.__setattr__(self, name, value)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_GtE", "14", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_GtE", "result-type": "normal", "occurrence": 14, "module-name": "pykickstart.commands.method"}, "55": {"result-data": [{"occurrence": 6, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -34,7 +34,7 @@", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "-            elif ((name == 'method') and (value == 'nfs')):", "+            elif ((name >= 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "             elif ((name == 'method') and (value == 'url')):", "                 setattr(self.handler.url, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_GtE", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_GtE", "result-type": "normal", "occurrence": 6, "module-name": "pykickstart.commands.method"}, "127": {"result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 80, in runTest\n    self.assertEqual(method.method, None)\n  File \"pykickstart.commands.method\", line 53, in __getattr__\nAttributeError: 'FC3_Url' object has no attribute 'method'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -13,7 +13,7 @@", "             setattr(getattr(self.handler, method), 'seen', False)", " ", "     def __getattr__(self, name):", "-        if (name in self.internals):", "+        if (name is self.internals):", "             if (name == 'method'):", "                 for method in self._methods:", "                     if getattr(self.handler, method).seen:"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_In_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_In_with_Is", "result-type": "normal", "occurrence": 0, "module-name": "pykickstart.commands.method"}, "24": {"result-data": [{"occurrence": 8, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -36,7 +36,7 @@", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "-            elif ((name == 'method') and (value == 'url')):", "+            elif ((name != 'method') and (value == 'url')):", "                 setattr(self.handler.url, 'seen', True)", "             KickstartCommand.__setattr__(self, name, value)", "         elif self.handler.cdrom.seen:"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_NotEq", "8", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_NotEq", "result-type": "normal", "occurrence": 8, "module-name": "pykickstart.commands.method"}, "125": {"result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -27,7 +27,7 @@", "         return getattr(self.handler.url, name)", " ", "     def __setattr__(self, name, value):", "-        if (name in self.internals):", "+        if (name != self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_In_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_In_with_NotEq", "result-type": "normal", "occurrence": 1, "module-name": "pykickstart.commands.method"}, "121": {"result-data": [{"occurrence": 12, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -81,7 +81,7 @@", " ", "     def __setattr__(self, name, value):", "         if (name in self.internals):", "-            if (name == 'method'):", "+            if (name is 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'liveimg')):", "                 setattr(self.handler.liveimg, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Is", "12", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Is", "result-type": "normal", "occurrence": 12, "module-name": "pykickstart.commands.method"}, "51": {"result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -30,7 +30,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'cdrom')):", "+            if ((name >= 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_GtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_GtE", "result-type": "normal", "occurrence": 2, "module-name": "pykickstart.commands.method"}, "13": {"result-data": [{"occurrence": 12, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 159, in runTest\n    F18_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 139, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 127, in runTest\n    F13_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 33, in runTest\n    self.assert_parse(\"cdrom\", \"cdrom\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 88, in __init__\n    self.writePriority = writePriority\n  File \"pykickstart.commands.method\", line 115, in __setattr__\n  File \"pykickstart.commands.method\", line 36, in _clear_seen\n  File \"pykickstart.commands.method\", line 102, in __getattr__\nAttributeError\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -81,7 +81,7 @@", " ", "     def __setattr__(self, name, value):", "         if (name in self.internals):", "-            if (name == 'method'):", "+            if (name is not 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'liveimg')):", "                 setattr(self.handler.liveimg, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_IsNot", "12", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_IsNot", "result-type": "normal", "occurrence": 12, "module-name": "pykickstart.commands.method"}, "101": {"result-data": [{"occurrence": 7, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -34,7 +34,7 @@", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "-            elif ((name == 'method') and (value == 'nfs')):", "+            elif ((name == 'method') and (value not in 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "             elif ((name == 'method') and (value == 'url')):", "                 setattr(self.handler.url, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_NotIn", "7", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_NotIn", "result-type": "normal", "occurrence": 7, "module-name": "pykickstart.commands.method"}, "137": {"result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -32,7 +32,7 @@", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "-            elif ((name == 'method') and (value == 'harddrive')):", "+            elif ((name > 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Gt", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Gt", "result-type": "normal", "occurrence": 4, "module-name": "pykickstart.commands.method"}, "75": {"result-data": [{"occurrence": 11, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 196, in runTest\n    self.assertEqual(method.method, \"liveimg\")\n  File \"pykickstart.commands.method\", line 108, in __getattr__\nAttributeError: 'F19_Liveimg' object has no attribute 'method'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -72,7 +72,7 @@", "         if (name == 'handler'):", "             raise AttributeError()", "         if self.handler.liveimg.seen:", "-            if (name == 'method'):", "+            if (name < 'method'):", "                 return 'liveimg'", "             else:", "                 return getattr(self.handler.liveimg, name)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Lt", "11", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Lt", "result-type": "normal", "occurrence": 11, "module-name": "pykickstart.commands.method"}, "85": {"result-data": [{"occurrence": 6, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -34,7 +34,7 @@", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "-            elif ((name == 'method') and (value == 'nfs')):", "+            elif ((name in 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "             elif ((name == 'method') and (value == 'url')):", "                 setattr(self.handler.url, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_In", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_In", "result-type": "normal", "occurrence": 6, "module-name": "pykickstart.commands.method"}, "84": {"result-data": [{"occurrence": 5, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -32,7 +32,7 @@", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "-            elif ((name == 'method') and (value == 'harddrive')):", "+            elif ((name == 'method') and (value in 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_In", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_In", "result-type": "normal", "occurrence": 5, "module-name": "pykickstart.commands.method"}, "71": {"result-data": [{"occurrence": 7, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -34,7 +34,7 @@", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "-            elif ((name == 'method') and (value == 'nfs')):", "+            elif ((name == 'method') and (value < 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "             elif ((name == 'method') and (value == 'url')):", "                 setattr(self.handler.url, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Lt", "7", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Lt", "result-type": "normal", "occurrence": 7, "module-name": "pykickstart.commands.method"}, "146": {"result-data": [{"occurrence": 13, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 195, in runTest\n    self.assertTrue(method.handler.liveimg.seen)    # pylint: disable=no-member\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -83,7 +83,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'liveimg')):", "+            if ((name > 'method') and (value == 'liveimg')):", "                 setattr(self.handler.liveimg, 'seen', True)", "             else:", "                 FC3_Method.__setattr__(self, name, value)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Gt", "13", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Gt", "result-type": "normal", "occurrence": 13, "module-name": "pykickstart.commands.method"}, "95": {"result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 33, in runTest\n    self.assert_parse(\"cdrom\", \"cdrom\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 88, in __init__\n    self.writePriority = writePriority\n  File \"pykickstart.commands.method\", line 58, in __setattr__\n  File \"pykickstart.commands.method\", line 36, in _clear_seen\n  File \"pykickstart.commands.method\", line 46, in __getattr__\nAttributeError: 'F13_Method' object has no attribute 'handler'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -28,7 +28,7 @@", " ", "     def __setattr__(self, name, value):", "         if (name in self.internals):", "-            if (name == 'method'):", "+            if (name not in 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_NotIn", "result-type": "normal", "occurrence": 1, "module-name": "pykickstart.commands.method"}, "130": {"result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 80, in runTest\n    self.assertEqual(method.method, None)\n  File \"pykickstart.commands.method\", line 39, in __getattr__\nTypeError: unorderable types: str() < list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -13,7 +13,7 @@", "             setattr(getattr(self.handler, method), 'seen', False)", " ", "     def __getattr__(self, name):", "-        if (name in self.internals):", "+        if (name < self.internals):", "             if (name == 'method'):", "                 for method in self._methods:", "                     if getattr(self.handler, method).seen:"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_In_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_In_with_Lt", "result-type": "normal", "occurrence": 0, "module-name": "pykickstart.commands.method"}, "49": {"result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -14,7 +14,7 @@", " ", "     def __getattr__(self, name):", "         if (name in self.internals):", "-            if (name == 'method'):", "+            if (name >= 'method'):", "                 for method in self._methods:", "                     if getattr(self.handler, method).seen:", "                         return method"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_GtE", "result-type": "normal", "occurrence": 0, "module-name": "pykickstart.commands.method"}, "166": {"result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 80, in runTest\n    self.assertEqual(method.method, None)\n  File \"pykickstart.commands.method\", line 53, in __getattr__\nAttributeError: 'FC3_Url' object has no attribute 'method'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -13,7 +13,7 @@", "             setattr(getattr(self.handler, method), 'seen', False)", " ", "     def __getattr__(self, name):", "-        if (name in self.internals):", "+        if (name == self.internals):", "             if (name == 'method'):", "                 for method in self._methods:", "                     if getattr(self.handler, method).seen:"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_In_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_In_with_Eq", "result-type": "normal", "occurrence": 0, "module-name": "pykickstart.commands.method"}, "42": {"result-data": [{"occurrence": 11, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -72,7 +72,7 @@", "         if (name == 'handler'):", "             raise AttributeError()", "         if self.handler.liveimg.seen:", "-            if (name == 'method'):", "+            if (name <= 'method'):", "                 return 'liveimg'", "             else:", "                 return getattr(self.handler.liveimg, name)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_LtE", "11", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_LtE", "result-type": "normal", "occurrence": 11, "module-name": "pykickstart.commands.method"}, "21": {"result-data": [{"occurrence": 5, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -32,7 +32,7 @@", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "-            elif ((name == 'method') and (value == 'harddrive')):", "+            elif ((name == 'method') and (value != 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_NotEq", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_NotEq", "result-type": "normal", "occurrence": 5, "module-name": "pykickstart.commands.method"}, "111": {"result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -30,7 +30,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'cdrom')):", "+            if ((name is 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Is", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Is", "result-type": "normal", "occurrence": 2, "module-name": "pykickstart.commands.method"}, "150": {"result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 194, in runTest\n    self.assertEqual(method.foo, \"liveimg\")\n  File \"pykickstart.commands.method\", line 108, in __getattr__\nAttributeError: 'F19_Liveimg' object has no attribute 'foo'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -80,7 +80,7 @@", "             return FC3_Method.__getattr__(self, name)", " ", "     def __setattr__(self, name, value):", "-        if (name in self.internals):", "+        if (name is not self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'liveimg')):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_In_with_IsNot", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_In_with_IsNot", "result-type": "normal", "occurrence": 2, "module-name": "pykickstart.commands.method"}, "132": {"result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 159, in runTest\n    F18_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 139, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 127, in runTest\n    F13_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 33, in runTest\n    self.assert_parse(\"cdrom\", \"cdrom\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 88, in __init__\n    self.writePriority = writePriority\n  File \"pykickstart.commands.method\", line 113, in __setattr__\nTypeError: unorderable types: str() < list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -80,7 +80,7 @@", "             return FC3_Method.__getattr__(self, name)", " ", "     def __setattr__(self, name, value):", "-        if (name in self.internals):", "+        if (name < self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'liveimg')):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_In_with_Lt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_In_with_Lt", "result-type": "normal", "occurrence": 2, "module-name": "pykickstart.commands.method"}, "39": {"result-data": [{"occurrence": 8, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -36,7 +36,7 @@", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "-            elif ((name == 'method') and (value == 'url')):", "+            elif ((name <= 'method') and (value == 'url')):", "                 setattr(self.handler.url, 'seen', True)", "             KickstartCommand.__setattr__(self, name, value)", "         elif self.handler.cdrom.seen:"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_LtE", "8", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_LtE", "result-type": "normal", "occurrence": 8, "module-name": "pykickstart.commands.method"}, "90": {"result-data": [{"occurrence": 11, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -72,7 +72,7 @@", "         if (name == 'handler'):", "             raise AttributeError()", "         if self.handler.liveimg.seen:", "-            if (name == 'method'):", "+            if (name in 'method'):", "                 return 'liveimg'", "             else:", "                 return getattr(self.handler.liveimg, name)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_In", "11", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_In", "result-type": "normal", "occurrence": 11, "module-name": "pykickstart.commands.method"}, "79": {"result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -14,7 +14,7 @@", " ", "     def __getattr__(self, name):", "         if (name in self.internals):", "-            if (name == 'method'):", "+            if (name in 'method'):", "                 for method in self._methods:", "                     if getattr(self.handler, method).seen:", "                         return method"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_In", "result-type": "normal", "occurrence": 0, "module-name": "pykickstart.commands.method"}, "104": {"result-data": [{"occurrence": 10, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 187, in runTest\n    self.assertEqual(method.method, None)\n  File \"pykickstart.commands.method\", line 102, in __getattr__\nAttributeError\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -69,7 +69,7 @@", "     _methods = (FC3_Method._methods + ['liveimg'])", " ", "     def __getattr__(self, name):", "-        if (name == 'handler'):", "+        if (name not in 'handler'):", "             raise AttributeError()", "         if self.handler.liveimg.seen:", "             if (name == 'method'):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_NotIn", "10", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_NotIn", "result-type": "normal", "occurrence": 10, "module-name": "pykickstart.commands.method"}, "102": {"result-data": [{"occurrence": 8, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -36,7 +36,7 @@", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)", "-            elif ((name == 'method') and (value == 'url')):", "+            elif ((name not in 'method') and (value == 'url')):", "                 setattr(self.handler.url, 'seen', True)", "             KickstartCommand.__setattr__(self, name, value)", "         elif self.handler.cdrom.seen:"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_NotIn", "8", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_NotIn", "result-type": "normal", "occurrence": 8, "module-name": "pykickstart.commands.method"}, "3": {"result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -30,7 +30,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'cdrom')):", "+            if ((name is not 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_IsNot", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_IsNot", "result-type": "normal", "occurrence": 2, "module-name": "pykickstart.commands.method"}, "33": {"result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -30,7 +30,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'cdrom')):", "+            if ((name <= 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_LtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_LtE", "result-type": "normal", "occurrence": 2, "module-name": "pykickstart.commands.method"}, "149": {"result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -27,7 +27,7 @@", "         return getattr(self.handler.url, name)", " ", "     def __setattr__(self, name, value):", "-        if (name in self.internals):", "+        if (name is not self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_In_with_IsNot", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_In_with_IsNot", "result-type": "normal", "occurrence": 1, "module-name": "pykickstart.commands.method"}, "123": {"result-data": [{"occurrence": 14, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -83,7 +83,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'liveimg')):", "+            if ((name == 'method') and (value is 'liveimg')):", "                 setattr(self.handler.liveimg, 'seen', True)", "             else:", "                 FC3_Method.__setattr__(self, name, value)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Is", "14", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Is", "result-type": "normal", "occurrence": 14, "module-name": "pykickstart.commands.method"}, "151": {"result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 80, in runTest\n    self.assertEqual(method.method, None)\n  File \"pykickstart.commands.method\", line 39, in __getattr__\nTypeError: unorderable types: str() <= list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -13,7 +13,7 @@", "             setattr(getattr(self.handler, method), 'seen', False)", " ", "     def __getattr__(self, name):", "-        if (name in self.internals):", "+        if (name <= self.internals):", "             if (name == 'method'):", "                 for method in self._methods:", "                     if getattr(self.handler, method).seen:"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_In_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_In_with_LtE", "result-type": "normal", "occurrence": 0, "module-name": "pykickstart.commands.method"}, "119": {"result-data": [{"occurrence": 10, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -69,7 +69,7 @@", "     _methods = (FC3_Method._methods + ['liveimg'])", " ", "     def __getattr__(self, name):", "-        if (name == 'handler'):", "+        if (name is 'handler'):", "             raise AttributeError()", "         if self.handler.liveimg.seen:", "             if (name == 'method'):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Is", "10", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Is", "result-type": "normal", "occurrence": 10, "module-name": "pykickstart.commands.method"}, "11": {"result-data": [{"occurrence": 10, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 187, in runTest\n    self.assertEqual(method.method, None)\n  File \"pykickstart.commands.method\", line 102, in __getattr__\nAttributeError\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -69,7 +69,7 @@", "     _methods = (FC3_Method._methods + ['liveimg'])", " ", "     def __getattr__(self, name):", "-        if (name == 'handler'):", "+        if (name is not 'handler'):", "             raise AttributeError()", "         if self.handler.liveimg.seen:", "             if (name == 'method'):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_IsNot", "10", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_IsNot", "result-type": "normal", "occurrence": 10, "module-name": "pykickstart.commands.method"}, "158": {"result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 60}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -31,7 +31,7 @@", "             if (name == 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):", "-                setattr(self.handler.cdrom, 'seen', True)", "+                setattr(self.handler.cdrom, 'seen', False)", "             elif ((name == 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "boolean_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "boolean_replacer", "result-type": "normal", "occurrence": 1, "module-name": "pykickstart.commands.method"}, "44": {"result-data": [{"occurrence": 13, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -83,7 +83,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'liveimg')):", "+            if ((name <= 'method') and (value == 'liveimg')):", "                 setattr(self.handler.liveimg, 'seen', True)", "             else:", "                 FC3_Method.__setattr__(self, name, value)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_LtE", "13", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_LtE", "result-type": "normal", "occurrence": 13, "module-name": "pykickstart.commands.method"}, "129": {"result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 159, in runTest\n    F18_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 139, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 127, in runTest\n    F13_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 33, in runTest\n    self.assert_parse(\"cdrom\", \"cdrom\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 88, in __init__\n    self.writePriority = writePriority\n  File \"pykickstart.commands.method\", line 120, in __setattr__\n  File \"pykickstart.commands.method\", line 102, in __getattr__\nAttributeError\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -80,7 +80,7 @@", "             return FC3_Method.__getattr__(self, name)", " ", "     def __setattr__(self, name, value):", "-        if (name in self.internals):", "+        if (name is self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'liveimg')):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_In_with_Is", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_In_with_Is", "result-type": "normal", "occurrence": 2, "module-name": "pykickstart.commands.method"}, "54": {"result-data": [{"occurrence": 5, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 86, in runTest\n    self.assertFalse(getattr(method.handler, unseen_method).seen)\nAssertionError: True is not false\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -32,7 +32,7 @@", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "-            elif ((name == 'method') and (value == 'harddrive')):", "+            elif ((name == 'method') and (value >= 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_GtE", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_GtE", "result-type": "normal", "occurrence": 5, "module-name": "pykickstart.commands.method"}, "156": {"result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 159, in runTest\n    F18_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 139, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 127, in runTest\n    F13_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 33, in runTest\n    self.assert_parse(\"cdrom\", \"cdrom\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 88, in __init__\n    self.writePriority = writePriority\n  File \"pykickstart.commands.method\", line 113, in __setattr__\nTypeError: unorderable types: str() > list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -80,7 +80,7 @@", "             return FC3_Method.__getattr__(self, name)", " ", "     def __setattr__(self, name, value):", "-        if (name in self.internals):", "+        if (name > self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'liveimg')):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_In_with_Gt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_In_with_Gt", "result-type": "normal", "occurrence": 2, "module-name": "pykickstart.commands.method"}, "69": {"result-data": [{"occurrence": 5, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 88, in runTest\n    self.assertTrue(getattr(method.handler, chosen_method).seen)\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -32,7 +32,7 @@", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "-            elif ((name == 'method') and (value == 'harddrive')):", "+            elif ((name == 'method') and (value < 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Lt", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Lt", "result-type": "normal", "occurrence": 5, "module-name": "pykickstart.commands.method"}, "148": {"result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 87, in runTest\n    self.assertEqual(method.foo, chosen_method)\n  File \"pykickstart.commands.method\", line 46, in __getattr__\nAttributeError: 'FC3_Method' object has no attribute 'foo'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -13,7 +13,7 @@", "             setattr(getattr(self.handler, method), 'seen', False)", " ", "     def __getattr__(self, name):", "-        if (name in self.internals):", "+        if (name is not self.internals):", "             if (name == 'method'):", "                 for method in self._methods:", "                     if getattr(self.handler, method).seen:"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_In_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_In_with_IsNot", "result-type": "normal", "occurrence": 0, "module-name": "pykickstart.commands.method"}, "30": {"result-data": [{"occurrence": 14, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 195, in runTest\n    self.assertTrue(method.handler.liveimg.seen)    # pylint: disable=no-member\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -83,7 +83,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'liveimg')):", "+            if ((name == 'method') and (value != 'liveimg')):", "                 setattr(self.handler.liveimg, 'seen', True)", "             else:", "                 FC3_Method.__setattr__(self, name, value)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_NotEq", "14", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_NotEq", "result-type": "normal", "occurrence": 14, "module-name": "pykickstart.commands.method"}, "165": {"result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 159, in runTest\n    F18_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 139, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 127, in runTest\n    F13_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 113, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 98, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 33, in runTest\n    self.assert_parse(\"cdrom\", \"cdrom\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 88, in __init__\n    self.writePriority = writePriority\n  File \"pykickstart.commands.method\", line 120, in __setattr__\n  File \"pykickstart.commands.method\", line 102, in __getattr__\nAttributeError\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -80,7 +80,7 @@", "             return FC3_Method.__getattr__(self, name)", " ", "     def __setattr__(self, name, value):", "-        if (name in self.internals):", "+        if (name not in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'liveimg')):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_In_with_NotIn", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_In_with_NotIn", "result-type": "normal", "occurrence": 2, "module-name": "pykickstart.commands.method"}, "15": {"result-data": [{"occurrence": 14, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 195, in runTest\n    self.assertTrue(method.handler.liveimg.seen)    # pylint: disable=no-member\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -83,7 +83,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'liveimg')):", "+            if ((name == 'method') and (value is not 'liveimg')):", "                 setattr(self.handler.liveimg, 'seen', True)", "             else:", "                 FC3_Method.__setattr__(self, name, value)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_IsNot", "14", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_IsNot", "result-type": "normal", "occurrence": 14, "module-name": "pykickstart.commands.method"}, "77": {"result-data": [{"occurrence": 13, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 195, in runTest\n    self.assertTrue(method.handler.liveimg.seen)    # pylint: disable=no-member\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -83,7 +83,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'liveimg')):", "+            if ((name < 'method') and (value == 'liveimg')):", "                 setattr(self.handler.liveimg, 'seen', True)", "             else:", "                 FC3_Method.__setattr__(self, name, value)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Lt", "13", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Lt", "result-type": "normal", "occurrence": 13, "module-name": "pykickstart.commands.method"}, "62": {"result-data": [{"occurrence": 13, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -83,7 +83,7 @@", "         if (name in self.internals):", "             if (name == 'method'):", "                 self._clear_seen()", "-            if ((name == 'method') and (value == 'liveimg')):", "+            if ((name >= 'method') and (value == 'liveimg')):", "                 setattr(self.handler.liveimg, 'seen', True)", "             else:", "                 FC3_Method.__setattr__(self, name, value)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_GtE", "13", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_GtE", "result-type": "normal", "occurrence": 13, "module-name": "pykickstart.commands.method"}, "143": {"result-data": [{"occurrence": 10, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 187, in runTest\n    self.assertEqual(method.method, None)\n  File \"pykickstart.commands.method\", line 102, in __getattr__\nAttributeError\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -69,7 +69,7 @@", "     _methods = (FC3_Method._methods + ['liveimg'])", " ", "     def __getattr__(self, name):", "-        if (name == 'handler'):", "+        if (name > 'handler'):", "             raise AttributeError()", "         if self.handler.liveimg.seen:", "             if (name == 'method'):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_Gt", "10", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_Gt", "result-type": "normal", "occurrence": 10, "module-name": "pykickstart.commands.method"}, "12": {"result-data": [{"occurrence": 11, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/method.py\", line 196, in runTest\n    self.assertEqual(method.method, \"liveimg\")\n  File \"pykickstart.commands.method\", line 108, in __getattr__\nAttributeError: 'F19_Liveimg' object has no attribute 'method'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -72,7 +72,7 @@", "         if (name == 'handler'):", "             raise AttributeError()", "         if self.handler.liveimg.seen:", "-            if (name == 'method'):", "+            if (name is not 'method'):", "                 return 'liveimg'", "             else:", "                 return getattr(self.handler.liveimg, name)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_IsNot", "11", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_IsNot", "result-type": "normal", "occurrence": 11, "module-name": "pykickstart.commands.method"}, "83": {"result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/method.py", "@@ -32,7 +32,7 @@", "                 self._clear_seen()", "             if ((name == 'method') and (value == 'cdrom')):", "                 setattr(self.handler.cdrom, 'seen', True)", "-            elif ((name == 'method') and (value == 'harddrive')):", "+            elif ((name in 'method') and (value == 'harddrive')):", "                 setattr(self.handler.harddrive, 'seen', True)", "             elif ((name == 'method') and (value == 'nfs')):", "                 setattr(self.handler.nfs, 'seen', True)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.method", "replace_Eq_with_In", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "op-name": "replace_Eq_with_In", "result-type": "normal", "occurrence": 4, "module-name": "pykickstart.commands.method"}}, "work-parameters": {"1": {"timeout": 41.00246, "test-args": ["-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/method.py"], "test-runner": "nose"}}, "_default": {}}