{"_default": {}, "work-parameters": {"1": {"test-args": ["-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "timeout": 5.4137900000000005, "test-runner": "nose"}}, "work-items": {"36": {"op-name": "replace_Eq_with_NotIn", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_NotIn", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 2, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 29, in runTest\n    self.assert_parse(\"text\", \"text\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.displaymode\", line 46, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -22,7 +22,7 @@", "             retval += 'cmdline\\n'", "         elif (self.displayMode == DISPLAY_MODE_GRAPHICAL):", "             retval += '# Use graphical install\\ngraphical\\n'", "-        elif (self.displayMode == DISPLAY_MODE_TEXT):", "+        elif (self.displayMode not in DISPLAY_MODE_TEXT):", "             retval += '# Use text mode install\\ntext\\n'", "         return retval", " "]]]}, "40": {"op-name": "replace_Eq_with_IsNot", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 0, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'cmdline\\n' != 'graphical\\n'\n- cmdline\n+ graphical\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -18,7 +18,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (self.displayMode is None):", "             return retval", "-        if (self.displayMode == DISPLAY_MODE_CMDLINE):", "+        if (self.displayMode is not DISPLAY_MODE_CMDLINE):", "             retval += 'cmdline\\n'", "         elif (self.displayMode == DISPLAY_MODE_GRAPHICAL):", "             retval += '# Use graphical install\\ngraphical\\n'"]]]}, "45": {"op-name": "replace_Eq_with_IsNot", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_IsNot", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 5, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 5, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -33,7 +33,7 @@", "             self.displayMode = DISPLAY_MODE_CMDLINE", "         elif (self.currentCmd == 'graphical'):", "             self.displayMode = DISPLAY_MODE_GRAPHICAL", "-        elif (self.currentCmd == 'text'):", "+        elif (self.currentCmd is not 'text'):", "             self.displayMode = DISPLAY_MODE_TEXT", "         return self", " "]]]}, "9": {"op-name": "replace_Is_with_Lt", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Is_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 0, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.displaymode\", line 39, in __str__\nTypeError: unorderable types: int() < NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -16,7 +16,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.displayMode is None):", "+        if (self.displayMode < None):", "             return retval", "         if (self.displayMode == DISPLAY_MODE_CMDLINE):", "             retval += 'cmdline\\n'"]]]}, "68": {"op-name": "replace_Eq_with_Lt", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 0, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 30, in runTest\n    self.assert_parse(\"cmdline\", \"cmdline\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'cmdline\\n'\n+ cmdline\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -18,7 +18,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (self.displayMode is None):", "             return retval", "-        if (self.displayMode == DISPLAY_MODE_CMDLINE):", "+        if (self.displayMode < DISPLAY_MODE_CMDLINE):", "             retval += 'cmdline\\n'", "         elif (self.displayMode == DISPLAY_MODE_GRAPHICAL):", "             retval += '# Use graphical install\\ngraphical\\n'"]]]}, "70": {"op-name": "replace_Eq_with_Lt", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_Lt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 2, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 29, in runTest\n    self.assert_parse(\"text\", \"text\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'text\\n'\n+ text\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -22,7 +22,7 @@", "             retval += 'cmdline\\n'", "         elif (self.displayMode == DISPLAY_MODE_GRAPHICAL):", "             retval += '# Use graphical install\\ngraphical\\n'", "-        elif (self.displayMode == DISPLAY_MODE_TEXT):", "+        elif (self.displayMode < DISPLAY_MODE_TEXT):", "             retval += '# Use text mode install\\ntext\\n'", "         return retval", " "]]]}, "54": {"op-name": "replace_Gt_with_Eq", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Gt_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 0, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.displaymode\", line 53, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nKickstart command graphical does not take any arguments\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -27,7 +27,7 @@", "         return retval", " ", "     def parse(self, args):", "-        if (len(args) > 0):", "+        if (len(args) == 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "         if (self.currentCmd == 'cmdline'):", "             self.displayMode = DISPLAY_MODE_CMDLINE"]]]}, "32": {"op-name": "replace_Gt_with_Lt", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Gt_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 0, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 33, in runTest\n    self.assert_parse_error(\"graphical --glitter=YES\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -27,7 +27,7 @@", "         return retval", " ", "     def parse(self, args):", "-        if (len(args) > 0):", "+        if (len(args) < 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "         if (self.currentCmd == 'cmdline'):", "             self.displayMode = DISPLAY_MODE_CMDLINE"]]]}, "55": {"op-name": "replace_Gt_with_LtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Gt_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 0, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.displaymode\", line 53, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nKickstart command graphical does not take any arguments\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -27,7 +27,7 @@", "         return retval", " ", "     def parse(self, args):", "-        if (len(args) > 0):", "+        if (len(args) <= 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "         if (self.currentCmd == 'cmdline'):", "             self.displayMode = DISPLAY_MODE_CMDLINE"]]]}, "51": {"op-name": "replace_Eq_with_GtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_GtE", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 5, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 5, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 51, in runTest\n    cmd.parse([])\n  File \"pykickstart.commands.displaymode\", line 59, in parse\nTypeError: unorderable types: NoneType() >= str()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -33,7 +33,7 @@", "             self.displayMode = DISPLAY_MODE_CMDLINE", "         elif (self.currentCmd == 'graphical'):", "             self.displayMode = DISPLAY_MODE_GRAPHICAL", "-        elif (self.currentCmd == 'text'):", "+        elif (self.currentCmd >= 'text'):", "             self.displayMode = DISPLAY_MODE_TEXT", "         return self", " "]]]}, "21": {"op-name": "replace_Eq_with_NotEq", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_NotEq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 2, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 29, in runTest\n    self.assert_parse(\"text\", \"text\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'text\\n'\n+ text\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -22,7 +22,7 @@", "             retval += 'cmdline\\n'", "         elif (self.displayMode == DISPLAY_MODE_GRAPHICAL):", "             retval += '# Use graphical install\\ngraphical\\n'", "-        elif (self.displayMode == DISPLAY_MODE_TEXT):", "+        elif (self.displayMode != DISPLAY_MODE_TEXT):", "             retval += '# Use text mode install\\ntext\\n'", "         return retval", " "]]]}, "13": {"op-name": "replace_Eq_with_LtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 1, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -20,7 +20,7 @@", "             return retval", "         if (self.displayMode == DISPLAY_MODE_CMDLINE):", "             retval += 'cmdline\\n'", "-        elif (self.displayMode == DISPLAY_MODE_GRAPHICAL):", "+        elif (self.displayMode <= DISPLAY_MODE_GRAPHICAL):", "             retval += '# Use graphical install\\ngraphical\\n'", "         elif (self.displayMode == DISPLAY_MODE_TEXT):", "             retval += '# Use text mode install\\ntext\\n'"]]]}, "25": {"op-name": "replace_Eq_with_Is", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 0, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -18,7 +18,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (self.displayMode is None):", "             return retval", "-        if (self.displayMode == DISPLAY_MODE_CMDLINE):", "+        if (self.displayMode is DISPLAY_MODE_CMDLINE):", "             retval += 'cmdline\\n'", "         elif (self.displayMode == DISPLAY_MODE_GRAPHICAL):", "             retval += '# Use graphical install\\ngraphical\\n'"]]]}, "29": {"op-name": "replace_Eq_with_Is", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_Is", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 4, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 4, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'graphical\\n'\n+ graphical\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -31,7 +31,7 @@", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "         if (self.currentCmd == 'cmdline'):", "             self.displayMode = DISPLAY_MODE_CMDLINE", "-        elif (self.currentCmd == 'graphical'):", "+        elif (self.currentCmd is 'graphical'):", "             self.displayMode = DISPLAY_MODE_GRAPHICAL", "         elif (self.currentCmd == 'text'):", "             self.displayMode = DISPLAY_MODE_TEXT"]]]}, "47": {"op-name": "replace_Eq_with_GtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 1, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 29, in runTest\n    self.assert_parse(\"text\", \"text\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'graphical\\n' != 'text\\n'\n- graphical\n+ text\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -20,7 +20,7 @@", "             return retval", "         if (self.displayMode == DISPLAY_MODE_CMDLINE):", "             retval += 'cmdline\\n'", "-        elif (self.displayMode == DISPLAY_MODE_GRAPHICAL):", "+        elif (self.displayMode >= DISPLAY_MODE_GRAPHICAL):", "             retval += '# Use graphical install\\ngraphical\\n'", "         elif (self.displayMode == DISPLAY_MODE_TEXT):", "             retval += '# Use text mode install\\ntext\\n'"]]]}, "22": {"op-name": "replace_Eq_with_NotEq", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_NotEq", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 3, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 3, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'cmdline\\n' != 'graphical\\n'\n- cmdline\n+ graphical\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -29,7 +29,7 @@", "     def parse(self, args):", "         if (len(args) > 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "-        if (self.currentCmd == 'cmdline'):", "+        if (self.currentCmd != 'cmdline'):", "             self.displayMode = DISPLAY_MODE_CMDLINE", "         elif (self.currentCmd == 'graphical'):", "             self.displayMode = DISPLAY_MODE_GRAPHICAL"]]]}, "46": {"op-name": "replace_Eq_with_GtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 0, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'cmdline\\n' != 'graphical\\n'\n- cmdline\n+ graphical\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -18,7 +18,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (self.displayMode is None):", "             return retval", "-        if (self.displayMode == DISPLAY_MODE_CMDLINE):", "+        if (self.displayMode >= DISPLAY_MODE_CMDLINE):", "             retval += 'cmdline\\n'", "         elif (self.displayMode == DISPLAY_MODE_GRAPHICAL):", "             retval += '# Use graphical install\\ngraphical\\n'"]]]}, "35": {"op-name": "replace_Eq_with_NotIn", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 1, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.displaymode\", line 44, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -20,7 +20,7 @@", "             return retval", "         if (self.displayMode == DISPLAY_MODE_CMDLINE):", "             retval += 'cmdline\\n'", "-        elif (self.displayMode == DISPLAY_MODE_GRAPHICAL):", "+        elif (self.displayMode not in DISPLAY_MODE_GRAPHICAL):", "             retval += '# Use graphical install\\ngraphical\\n'", "         elif (self.displayMode == DISPLAY_MODE_TEXT):", "             retval += '# Use text mode install\\ntext\\n'"]]]}, "66": {"op-name": "replace_Gt_with_In", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Gt_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 0, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.displaymode\", line 52, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -27,7 +27,7 @@", "         return retval", " ", "     def parse(self, args):", "-        if (len(args) > 0):", "+        if (len(args) in 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "         if (self.currentCmd == 'cmdline'):", "             self.displayMode = DISPLAY_MODE_CMDLINE"]]]}, "48": {"op-name": "replace_Eq_with_GtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_GtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 2, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 49, in runTest\n    self.assertEqual(cmd.__str__(), \"\")\nAssertionError: '# Use text mode install\\ntext\\n' != ''\n- # Use text mode install\n- text\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -22,7 +22,7 @@", "             retval += 'cmdline\\n'", "         elif (self.displayMode == DISPLAY_MODE_GRAPHICAL):", "             retval += '# Use graphical install\\ngraphical\\n'", "-        elif (self.displayMode == DISPLAY_MODE_TEXT):", "+        elif (self.displayMode >= DISPLAY_MODE_TEXT):", "             retval += '# Use text mode install\\ntext\\n'", "         return retval", " "]]]}, "11": {"op-name": "number_replacer", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "number_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 1, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 1, "line_number": 52, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 33, in runTest\n    self.assert_parse_error(\"graphical --glitter=YES\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -27,7 +27,7 @@", "         return retval", " ", "     def parse(self, args):", "-        if (len(args) > 0):", "+        if (len(args) > 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "         if (self.currentCmd == 'cmdline'):", "             self.displayMode = DISPLAY_MODE_CMDLINE"]]]}, "49": {"op-name": "replace_Eq_with_GtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_GtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 3, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 3, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'cmdline\\n' != 'graphical\\n'\n- cmdline\n+ graphical\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -29,7 +29,7 @@", "     def parse(self, args):", "         if (len(args) > 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "-        if (self.currentCmd == 'cmdline'):", "+        if (self.currentCmd >= 'cmdline'):", "             self.displayMode = DISPLAY_MODE_CMDLINE", "         elif (self.currentCmd == 'graphical'):", "             self.displayMode = DISPLAY_MODE_GRAPHICAL"]]]}, "56": {"op-name": "replace_Is_with_IsNot", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Is_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 0, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithIsNot"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'graphical\\n'\n+ graphical\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -16,7 +16,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.displayMode is None):", "+        if (self.displayMode is not None):", "             return retval", "         if (self.displayMode == DISPLAY_MODE_CMDLINE):", "             retval += 'cmdline\\n'"]]]}, "33": {"op-name": "replace_Gt_with_GtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Gt_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 0, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.displaymode\", line 53, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nKickstart command graphical does not take any arguments\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -27,7 +27,7 @@", "         return retval", " ", "     def parse(self, args):", "-        if (len(args) > 0):", "+        if (len(args) >= 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "         if (self.currentCmd == 'cmdline'):", "             self.displayMode = DISPLAY_MODE_CMDLINE"]]]}, "2": {"op-name": "replace_Gt_with_IsNot", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Gt_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 0, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIsNot"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -27,7 +27,7 @@", "         return retval", " ", "     def parse(self, args):", "-        if (len(args) > 0):", "+        if (len(args) is not 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "         if (self.currentCmd == 'cmdline'):", "             self.displayMode = DISPLAY_MODE_CMDLINE"]]]}, "64": {"op-name": "replace_Eq_with_In", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_In", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 5, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 5, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 51, in runTest\n    cmd.parse([])\n  File \"pykickstart.commands.displaymode\", line 59, in parse\nTypeError: 'in <string>' requires string as left operand, not NoneType\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -33,7 +33,7 @@", "             self.displayMode = DISPLAY_MODE_CMDLINE", "         elif (self.currentCmd == 'graphical'):", "             self.displayMode = DISPLAY_MODE_GRAPHICAL", "-        elif (self.currentCmd == 'text'):", "+        elif (self.currentCmd in 'text'):", "             self.displayMode = DISPLAY_MODE_TEXT", "         return self", " "]]]}, "50": {"op-name": "replace_Eq_with_GtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_GtE", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 4, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 4, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 29, in runTest\n    self.assert_parse(\"text\", \"text\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'graphical\\n' != 'text\\n'\n- graphical\n+ text\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -31,7 +31,7 @@", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "         if (self.currentCmd == 'cmdline'):", "             self.displayMode = DISPLAY_MODE_CMDLINE", "-        elif (self.currentCmd == 'graphical'):", "+        elif (self.currentCmd >= 'graphical'):", "             self.displayMode = DISPLAY_MODE_GRAPHICAL", "         elif (self.currentCmd == 'text'):", "             self.displayMode = DISPLAY_MODE_TEXT"]]]}, "16": {"op-name": "replace_Eq_with_LtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_LtE", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 4, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 4, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 51, in runTest\n    cmd.parse([])\n  File \"pykickstart.commands.displaymode\", line 57, in parse\nTypeError: unorderable types: NoneType() <= str()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -31,7 +31,7 @@", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "         if (self.currentCmd == 'cmdline'):", "             self.displayMode = DISPLAY_MODE_CMDLINE", "-        elif (self.currentCmd == 'graphical'):", "+        elif (self.currentCmd <= 'graphical'):", "             self.displayMode = DISPLAY_MODE_GRAPHICAL", "         elif (self.currentCmd == 'text'):", "             self.displayMode = DISPLAY_MODE_TEXT"]]]}, "41": {"op-name": "replace_Eq_with_IsNot", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_IsNot", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 1, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'graphical\\n'\n+ graphical\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -20,7 +20,7 @@", "             return retval", "         if (self.displayMode == DISPLAY_MODE_CMDLINE):", "             retval += 'cmdline\\n'", "-        elif (self.displayMode == DISPLAY_MODE_GRAPHICAL):", "+        elif (self.displayMode is not DISPLAY_MODE_GRAPHICAL):", "             retval += '# Use graphical install\\ngraphical\\n'", "         elif (self.displayMode == DISPLAY_MODE_TEXT):", "             retval += '# Use text mode install\\ntext\\n'"]]]}, "71": {"op-name": "replace_Eq_with_Lt", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_Lt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 3, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 3, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 30, in runTest\n    self.assert_parse(\"cmdline\", \"cmdline\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'cmdline\\n'\n+ cmdline\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -29,7 +29,7 @@", "     def parse(self, args):", "         if (len(args) > 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "-        if (self.currentCmd == 'cmdline'):", "+        if (self.currentCmd < 'cmdline'):", "             self.displayMode = DISPLAY_MODE_CMDLINE", "         elif (self.currentCmd == 'graphical'):", "             self.displayMode = DISPLAY_MODE_GRAPHICAL"]]]}, "26": {"op-name": "replace_Eq_with_Is", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 1, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -20,7 +20,7 @@", "             return retval", "         if (self.displayMode == DISPLAY_MODE_CMDLINE):", "             retval += 'cmdline\\n'", "-        elif (self.displayMode == DISPLAY_MODE_GRAPHICAL):", "+        elif (self.displayMode is DISPLAY_MODE_GRAPHICAL):", "             retval += '# Use graphical install\\ngraphical\\n'", "         elif (self.displayMode == DISPLAY_MODE_TEXT):", "             retval += '# Use text mode install\\ntext\\n'"]]]}, "59": {"op-name": "replace_Eq_with_In", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 0, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.displaymode\", line 42, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -18,7 +18,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (self.displayMode is None):", "             return retval", "-        if (self.displayMode == DISPLAY_MODE_CMDLINE):", "+        if (self.displayMode in DISPLAY_MODE_CMDLINE):", "             retval += 'cmdline\\n'", "         elif (self.displayMode == DISPLAY_MODE_GRAPHICAL):", "             retval += '# Use graphical install\\ngraphical\\n'"]]]}, "67": {"op-name": "replace_Is_with_Eq", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Is_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 0, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithEq"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -16,7 +16,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.displayMode is None):", "+        if (self.displayMode == None):", "             return retval", "         if (self.displayMode == DISPLAY_MODE_CMDLINE):", "             retval += 'cmdline\\n'"]]]}, "24": {"op-name": "replace_Eq_with_NotEq", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_NotEq", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 5, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 5, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 29, in runTest\n    self.assert_parse(\"text\", \"text\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'text\\n'\n+ text\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -33,7 +33,7 @@", "             self.displayMode = DISPLAY_MODE_CMDLINE", "         elif (self.currentCmd == 'graphical'):", "             self.displayMode = DISPLAY_MODE_GRAPHICAL", "-        elif (self.currentCmd == 'text'):", "+        elif (self.currentCmd != 'text'):", "             self.displayMode = DISPLAY_MODE_TEXT", "         return self", " "]]]}, "5": {"op-name": "replace_Eq_with_Gt", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_Gt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 2, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 29, in runTest\n    self.assert_parse(\"text\", \"text\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'text\\n'\n+ text\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -22,7 +22,7 @@", "             retval += 'cmdline\\n'", "         elif (self.displayMode == DISPLAY_MODE_GRAPHICAL):", "             retval += '# Use graphical install\\ngraphical\\n'", "-        elif (self.displayMode == DISPLAY_MODE_TEXT):", "+        elif (self.displayMode > DISPLAY_MODE_TEXT):", "             retval += '# Use text mode install\\ntext\\n'", "         return retval", " "]]]}, "14": {"op-name": "replace_Eq_with_LtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_LtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 2, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -22,7 +22,7 @@", "             retval += 'cmdline\\n'", "         elif (self.displayMode == DISPLAY_MODE_GRAPHICAL):", "             retval += '# Use graphical install\\ngraphical\\n'", "-        elif (self.displayMode == DISPLAY_MODE_TEXT):", "+        elif (self.displayMode <= DISPLAY_MODE_TEXT):", "             retval += '# Use text mode install\\ntext\\n'", "         return retval", " "]]]}, "15": {"op-name": "replace_Eq_with_LtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_LtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 3, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 3, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 51, in runTest\n    cmd.parse([])\n  File \"pykickstart.commands.displaymode\", line 55, in parse\nTypeError: unorderable types: NoneType() <= str()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -29,7 +29,7 @@", "     def parse(self, args):", "         if (len(args) > 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "-        if (self.currentCmd == 'cmdline'):", "+        if (self.currentCmd <= 'cmdline'):", "             self.displayMode = DISPLAY_MODE_CMDLINE", "         elif (self.currentCmd == 'graphical'):", "             self.displayMode = DISPLAY_MODE_GRAPHICAL"]]]}, "69": {"op-name": "replace_Eq_with_Lt", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 1, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'graphical\\n'\n+ graphical\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -20,7 +20,7 @@", "             return retval", "         if (self.displayMode == DISPLAY_MODE_CMDLINE):", "             retval += 'cmdline\\n'", "-        elif (self.displayMode == DISPLAY_MODE_GRAPHICAL):", "+        elif (self.displayMode < DISPLAY_MODE_GRAPHICAL):", "             retval += '# Use graphical install\\ngraphical\\n'", "         elif (self.displayMode == DISPLAY_MODE_TEXT):", "             retval += '# Use text mode install\\ntext\\n'"]]]}, "72": {"op-name": "replace_Eq_with_Lt", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_Lt", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 4, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 4, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'graphical\\n'\n+ graphical\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -31,7 +31,7 @@", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "         if (self.currentCmd == 'cmdline'):", "             self.displayMode = DISPLAY_MODE_CMDLINE", "-        elif (self.currentCmd == 'graphical'):", "+        elif (self.currentCmd < 'graphical'):", "             self.displayMode = DISPLAY_MODE_GRAPHICAL", "         elif (self.currentCmd == 'text'):", "             self.displayMode = DISPLAY_MODE_TEXT"]]]}, "43": {"op-name": "replace_Eq_with_IsNot", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_IsNot", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 3, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 3, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'cmdline\\n' != 'graphical\\n'\n- cmdline\n+ graphical\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -29,7 +29,7 @@", "     def parse(self, args):", "         if (len(args) > 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "-        if (self.currentCmd == 'cmdline'):", "+        if (self.currentCmd is not 'cmdline'):", "             self.displayMode = DISPLAY_MODE_CMDLINE", "         elif (self.currentCmd == 'graphical'):", "             self.displayMode = DISPLAY_MODE_GRAPHICAL"]]]}, "7": {"op-name": "replace_Eq_with_Gt", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_Gt", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 4, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 4, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'graphical\\n'\n+ graphical\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -31,7 +31,7 @@", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "         if (self.currentCmd == 'cmdline'):", "             self.displayMode = DISPLAY_MODE_CMDLINE", "-        elif (self.currentCmd == 'graphical'):", "+        elif (self.currentCmd > 'graphical'):", "             self.displayMode = DISPLAY_MODE_GRAPHICAL", "         elif (self.currentCmd == 'text'):", "             self.displayMode = DISPLAY_MODE_TEXT"]]]}, "63": {"op-name": "replace_Eq_with_In", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_In", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 4, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 4, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 51, in runTest\n    cmd.parse([])\n  File \"pykickstart.commands.displaymode\", line 57, in parse\nTypeError: 'in <string>' requires string as left operand, not NoneType\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -31,7 +31,7 @@", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "         if (self.currentCmd == 'cmdline'):", "             self.displayMode = DISPLAY_MODE_CMDLINE", "-        elif (self.currentCmd == 'graphical'):", "+        elif (self.currentCmd in 'graphical'):", "             self.displayMode = DISPLAY_MODE_GRAPHICAL", "         elif (self.currentCmd == 'text'):", "             self.displayMode = DISPLAY_MODE_TEXT"]]]}, "61": {"op-name": "replace_Eq_with_In", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_In", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 2, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 29, in runTest\n    self.assert_parse(\"text\", \"text\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.displaymode\", line 46, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -22,7 +22,7 @@", "             retval += 'cmdline\\n'", "         elif (self.displayMode == DISPLAY_MODE_GRAPHICAL):", "             retval += '# Use graphical install\\ngraphical\\n'", "-        elif (self.displayMode == DISPLAY_MODE_TEXT):", "+        elif (self.displayMode in DISPLAY_MODE_TEXT):", "             retval += '# Use text mode install\\ntext\\n'", "         return retval", " "]]]}, "42": {"op-name": "replace_Eq_with_IsNot", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_IsNot", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 2, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 29, in runTest\n    self.assert_parse(\"text\", \"text\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'text\\n'\n+ text\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -22,7 +22,7 @@", "             retval += 'cmdline\\n'", "         elif (self.displayMode == DISPLAY_MODE_GRAPHICAL):", "             retval += '# Use graphical install\\ngraphical\\n'", "-        elif (self.displayMode == DISPLAY_MODE_TEXT):", "+        elif (self.displayMode is not DISPLAY_MODE_TEXT):", "             retval += '# Use text mode install\\ntext\\n'", "         return retval", " "]]]}, "31": {"op-name": "replace_Is_with_LtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Is_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 0, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.displaymode\", line 39, in __str__\nTypeError: unorderable types: int() <= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -16,7 +16,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.displayMode is None):", "+        if (self.displayMode <= None):", "             return retval", "         if (self.displayMode == DISPLAY_MODE_CMDLINE):", "             retval += 'cmdline\\n'"]]]}, "19": {"op-name": "replace_Eq_with_NotEq", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 0, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'cmdline\\n' != 'graphical\\n'\n- cmdline\n+ graphical\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -18,7 +18,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (self.displayMode is None):", "             return retval", "-        if (self.displayMode == DISPLAY_MODE_CMDLINE):", "+        if (self.displayMode != DISPLAY_MODE_CMDLINE):", "             retval += 'cmdline\\n'", "         elif (self.displayMode == DISPLAY_MODE_GRAPHICAL):", "             retval += '# Use graphical install\\ngraphical\\n'"]]]}, "60": {"op-name": "replace_Eq_with_In", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 1, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.displaymode\", line 44, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -20,7 +20,7 @@", "             return retval", "         if (self.displayMode == DISPLAY_MODE_CMDLINE):", "             retval += 'cmdline\\n'", "-        elif (self.displayMode == DISPLAY_MODE_GRAPHICAL):", "+        elif (self.displayMode in DISPLAY_MODE_GRAPHICAL):", "             retval += '# Use graphical install\\ngraphical\\n'", "         elif (self.displayMode == DISPLAY_MODE_TEXT):", "             retval += '# Use text mode install\\ntext\\n'"]]]}, "37": {"op-name": "replace_Eq_with_NotIn", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_NotIn", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 3, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 3, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'cmdline\\n' != 'graphical\\n'\n- cmdline\n+ graphical\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -29,7 +29,7 @@", "     def parse(self, args):", "         if (len(args) > 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "-        if (self.currentCmd == 'cmdline'):", "+        if (self.currentCmd not in 'cmdline'):", "             self.displayMode = DISPLAY_MODE_CMDLINE", "         elif (self.currentCmd == 'graphical'):", "             self.displayMode = DISPLAY_MODE_GRAPHICAL"]]]}, "53": {"op-name": "replace_Is_with_Gt", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Is_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 0, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithGt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.displaymode\", line 39, in __str__\nTypeError: unorderable types: int() > NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -16,7 +16,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.displayMode is None):", "+        if (self.displayMode > None):", "             return retval", "         if (self.displayMode == DISPLAY_MODE_CMDLINE):", "             retval += 'cmdline\\n'"]]]}, "17": {"op-name": "replace_Eq_with_LtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_LtE", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 5, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 5, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 51, in runTest\n    cmd.parse([])\n  File \"pykickstart.commands.displaymode\", line 59, in parse\nTypeError: unorderable types: NoneType() <= str()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -33,7 +33,7 @@", "             self.displayMode = DISPLAY_MODE_CMDLINE", "         elif (self.currentCmd == 'graphical'):", "             self.displayMode = DISPLAY_MODE_GRAPHICAL", "-        elif (self.currentCmd == 'text'):", "+        elif (self.currentCmd <= 'text'):", "             self.displayMode = DISPLAY_MODE_TEXT", "         return self", " "]]]}, "6": {"op-name": "replace_Eq_with_Gt", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_Gt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 3, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 3, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'cmdline\\n' != 'graphical\\n'\n- cmdline\n+ graphical\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -29,7 +29,7 @@", "     def parse(self, args):", "         if (len(args) > 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "-        if (self.currentCmd == 'cmdline'):", "+        if (self.currentCmd > 'cmdline'):", "             self.displayMode = DISPLAY_MODE_CMDLINE", "         elif (self.currentCmd == 'graphical'):", "             self.displayMode = DISPLAY_MODE_GRAPHICAL"]]]}, "8": {"op-name": "replace_Eq_with_Gt", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_Gt", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 5, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 5, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 29, in runTest\n    self.assert_parse(\"text\", \"text\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'text\\n'\n+ text\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -33,7 +33,7 @@", "             self.displayMode = DISPLAY_MODE_CMDLINE", "         elif (self.currentCmd == 'graphical'):", "             self.displayMode = DISPLAY_MODE_GRAPHICAL", "-        elif (self.currentCmd == 'text'):", "+        elif (self.currentCmd > 'text'):", "             self.displayMode = DISPLAY_MODE_TEXT", "         return self", " "]]]}, "74": {"op-name": "replace_Is_with_NotEq", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Is_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 0, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithNotEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'graphical\\n'\n+ graphical\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -16,7 +16,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.displayMode is None):", "+        if (self.displayMode != None):", "             return retval", "         if (self.displayMode == DISPLAY_MODE_CMDLINE):", "             retval += 'cmdline\\n'"]]]}, "65": {"op-name": "replace_Is_with_GtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Is_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 0, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.displaymode\", line 39, in __str__\nTypeError: unorderable types: int() >= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -16,7 +16,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.displayMode is None):", "+        if (self.displayMode >= None):", "             return retval", "         if (self.displayMode == DISPLAY_MODE_CMDLINE):", "             retval += 'cmdline\\n'"]]]}, "4": {"op-name": "replace_Eq_with_Gt", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 1, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'graphical\\n'\n+ graphical\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -20,7 +20,7 @@", "             return retval", "         if (self.displayMode == DISPLAY_MODE_CMDLINE):", "             retval += 'cmdline\\n'", "-        elif (self.displayMode == DISPLAY_MODE_GRAPHICAL):", "+        elif (self.displayMode > DISPLAY_MODE_GRAPHICAL):", "             retval += '# Use graphical install\\ngraphical\\n'", "         elif (self.displayMode == DISPLAY_MODE_TEXT):", "             retval += '# Use text mode install\\ntext\\n'"]]]}, "27": {"op-name": "replace_Eq_with_Is", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_Is", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 2, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -22,7 +22,7 @@", "             retval += 'cmdline\\n'", "         elif (self.displayMode == DISPLAY_MODE_GRAPHICAL):", "             retval += '# Use graphical install\\ngraphical\\n'", "-        elif (self.displayMode == DISPLAY_MODE_TEXT):", "+        elif (self.displayMode is DISPLAY_MODE_TEXT):", "             retval += '# Use text mode install\\ntext\\n'", "         return retval", " "]]]}, "52": {"op-name": "replace_Is_with_In", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Is_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 0, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.displaymode\", line 39, in __str__\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -16,7 +16,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.displayMode is None):", "+        if (self.displayMode in None):", "             return retval", "         if (self.displayMode == DISPLAY_MODE_CMDLINE):", "             retval += 'cmdline\\n'"]]]}, "23": {"op-name": "replace_Eq_with_NotEq", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_NotEq", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 4, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 4, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'graphical\\n'\n+ graphical\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -31,7 +31,7 @@", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "         if (self.currentCmd == 'cmdline'):", "             self.displayMode = DISPLAY_MODE_CMDLINE", "-        elif (self.currentCmd == 'graphical'):", "+        elif (self.currentCmd != 'graphical'):", "             self.displayMode = DISPLAY_MODE_GRAPHICAL", "         elif (self.currentCmd == 'text'):", "             self.displayMode = DISPLAY_MODE_TEXT"]]]}, "20": {"op-name": "replace_Eq_with_NotEq", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 1, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'graphical\\n'\n+ graphical\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -20,7 +20,7 @@", "             return retval", "         if (self.displayMode == DISPLAY_MODE_CMDLINE):", "             retval += 'cmdline\\n'", "-        elif (self.displayMode == DISPLAY_MODE_GRAPHICAL):", "+        elif (self.displayMode != DISPLAY_MODE_GRAPHICAL):", "             retval += '# Use graphical install\\ngraphical\\n'", "         elif (self.displayMode == DISPLAY_MODE_TEXT):", "             retval += '# Use text mode install\\ntext\\n'"]]]}, "44": {"op-name": "replace_Eq_with_IsNot", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_IsNot", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 4, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 4, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 29, in runTest\n    self.assert_parse(\"text\", \"text\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'graphical\\n' != 'text\\n'\n- graphical\n+ text\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -31,7 +31,7 @@", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "         if (self.currentCmd == 'cmdline'):", "             self.displayMode = DISPLAY_MODE_CMDLINE", "-        elif (self.currentCmd == 'graphical'):", "+        elif (self.currentCmd is not 'graphical'):", "             self.displayMode = DISPLAY_MODE_GRAPHICAL", "         elif (self.currentCmd == 'text'):", "             self.displayMode = DISPLAY_MODE_TEXT"]]]}, "18": {"op-name": "replace_Gt_with_NotIn", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Gt_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 0, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.displaymode\", line 52, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -27,7 +27,7 @@", "         return retval", " ", "     def parse(self, args):", "-        if (len(args) > 0):", "+        if (len(args) not in 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "         if (self.currentCmd == 'cmdline'):", "             self.displayMode = DISPLAY_MODE_CMDLINE"]]]}, "28": {"op-name": "replace_Eq_with_Is", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_Is", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 3, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 3, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 30, in runTest\n    self.assert_parse(\"cmdline\", \"cmdline\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'cmdline\\n'\n+ cmdline\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -29,7 +29,7 @@", "     def parse(self, args):", "         if (len(args) > 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "-        if (self.currentCmd == 'cmdline'):", "+        if (self.currentCmd is 'cmdline'):", "             self.displayMode = DISPLAY_MODE_CMDLINE", "         elif (self.currentCmd == 'graphical'):", "             self.displayMode = DISPLAY_MODE_GRAPHICAL"]]]}, "38": {"op-name": "replace_Eq_with_NotIn", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_NotIn", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 4, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 4, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'graphical\\n'\n+ graphical\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -31,7 +31,7 @@", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "         if (self.currentCmd == 'cmdline'):", "             self.displayMode = DISPLAY_MODE_CMDLINE", "-        elif (self.currentCmd == 'graphical'):", "+        elif (self.currentCmd not in 'graphical'):", "             self.displayMode = DISPLAY_MODE_GRAPHICAL", "         elif (self.currentCmd == 'text'):", "             self.displayMode = DISPLAY_MODE_TEXT"]]]}, "30": {"op-name": "replace_Eq_with_Is", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_Is", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 5, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 5, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 29, in runTest\n    self.assert_parse(\"text\", \"text\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'text\\n'\n+ text\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -33,7 +33,7 @@", "             self.displayMode = DISPLAY_MODE_CMDLINE", "         elif (self.currentCmd == 'graphical'):", "             self.displayMode = DISPLAY_MODE_GRAPHICAL", "-        elif (self.currentCmd == 'text'):", "+        elif (self.currentCmd is 'text'):", "             self.displayMode = DISPLAY_MODE_TEXT", "         return self", " "]]]}, "73": {"op-name": "replace_Eq_with_Lt", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_Lt", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 5, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 5, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 29, in runTest\n    self.assert_parse(\"text\", \"text\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'text\\n'\n+ text\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -33,7 +33,7 @@", "             self.displayMode = DISPLAY_MODE_CMDLINE", "         elif (self.currentCmd == 'graphical'):", "             self.displayMode = DISPLAY_MODE_GRAPHICAL", "-        elif (self.currentCmd == 'text'):", "+        elif (self.currentCmd < 'text'):", "             self.displayMode = DISPLAY_MODE_TEXT", "         return self", " "]]]}, "12": {"op-name": "replace_Eq_with_LtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 0, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -18,7 +18,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (self.displayMode is None):", "             return retval", "-        if (self.displayMode == DISPLAY_MODE_CMDLINE):", "+        if (self.displayMode <= DISPLAY_MODE_CMDLINE):", "             retval += 'cmdline\\n'", "         elif (self.displayMode == DISPLAY_MODE_GRAPHICAL):", "             retval += '# Use graphical install\\ngraphical\\n'"]]]}, "34": {"op-name": "replace_Eq_with_NotIn", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 0, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.displaymode\", line 42, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -18,7 +18,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (self.displayMode is None):", "             return retval", "-        if (self.displayMode == DISPLAY_MODE_CMDLINE):", "+        if (self.displayMode not in DISPLAY_MODE_CMDLINE):", "             retval += 'cmdline\\n'", "         elif (self.displayMode == DISPLAY_MODE_GRAPHICAL):", "             retval += '# Use graphical install\\ngraphical\\n'"]]]}, "1": {"op-name": "replace_Gt_with_Is", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Gt_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 0, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.displaymode\", line 53, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nKickstart command graphical does not take any arguments\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -27,7 +27,7 @@", "         return retval", " ", "     def parse(self, args):", "-        if (len(args) > 0):", "+        if (len(args) is 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "         if (self.currentCmd == 'cmdline'):", "             self.displayMode = DISPLAY_MODE_CMDLINE"]]]}, "58": {"op-name": "replace_Gt_with_NotEq", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Gt_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 0, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotEq"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -27,7 +27,7 @@", "         return retval", " ", "     def parse(self, args):", "-        if (len(args) > 0):", "+        if (len(args) != 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "         if (self.currentCmd == 'cmdline'):", "             self.displayMode = DISPLAY_MODE_CMDLINE"]]]}, "62": {"op-name": "replace_Eq_with_In", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_In", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 3, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 3, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 51, in runTest\n    cmd.parse([])\n  File \"pykickstart.commands.displaymode\", line 55, in parse\nTypeError: 'in <string>' requires string as left operand, not NoneType\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -29,7 +29,7 @@", "     def parse(self, args):", "         if (len(args) > 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s does not take any arguments') % self.currentCmd)))", "-        if (self.currentCmd == 'cmdline'):", "+        if (self.currentCmd in 'cmdline'):", "             self.displayMode = DISPLAY_MODE_CMDLINE", "         elif (self.currentCmd == 'graphical'):", "             self.displayMode = DISPLAY_MODE_GRAPHICAL"]]]}, "10": {"op-name": "number_replacer", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "number_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 0, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 0, "line_number": 32, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -10,7 +10,7 @@", "     removedKeywords = KickstartCommand.removedKeywords", "     removedAttrs = KickstartCommand.removedAttrs", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         KickstartCommand.__init__(self, writePriority, *args, **kwargs)", "         self.displayMode = kwargs.get('displayMode', None)", " "]]]}, "39": {"op-name": "replace_Eq_with_NotIn", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_NotIn", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 5, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 5, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 29, in runTest\n    self.assert_parse(\"text\", \"text\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'text\\n'\n+ text\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -33,7 +33,7 @@", "             self.displayMode = DISPLAY_MODE_CMDLINE", "         elif (self.currentCmd == 'graphical'):", "             self.displayMode = DISPLAY_MODE_GRAPHICAL", "-        elif (self.currentCmd == 'text'):", "+        elif (self.currentCmd not in 'text'):", "             self.displayMode = DISPLAY_MODE_TEXT", "         return self", " "]]]}, "3": {"op-name": "replace_Eq_with_Gt", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Eq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 0, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'cmdline\\n' != 'graphical\\n'\n- cmdline\n+ graphical\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -18,7 +18,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (self.displayMode is None):", "             return retval", "-        if (self.displayMode == DISPLAY_MODE_CMDLINE):", "+        if (self.displayMode > DISPLAY_MODE_CMDLINE):", "             retval += 'cmdline\\n'", "         elif (self.displayMode == DISPLAY_MODE_GRAPHICAL):", "             retval += '# Use graphical install\\ngraphical\\n'"]]]}, "57": {"op-name": "replace_Is_with_NotIn", "command": ["cosmic-ray", "worker", "pykickstart.commands.displaymode", "replace_Is_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/displaymode.py"], "occurrence": 0, "module-name": "pykickstart.commands.displaymode", "result-type": "normal", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/displaymode.py\", line 28, in runTest\n    self.assert_parse(\"graphical\", \"graphical\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.displaymode\", line 39, in __str__\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/displaymode.py", "@@ -16,7 +16,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.displayMode is None):", "+        if (self.displayMode not in None):", "             return retval", "         if (self.displayMode == DISPLAY_MODE_CMDLINE):", "             retval += 'cmdline\\n'"]]]}}}