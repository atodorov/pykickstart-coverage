{"work-parameters": {"1": {"timeout": 7.404349999999999, "test-args": ["-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "test-runner": "nose"}}, "_default": {}, "work-items": {"18": {"result-type": "normal", "op-name": "replace_Eq_with_LtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_Eq_with_LtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 38, in runTest\n    self.assertNotEqual(self.assert_parse(\"dmraid --name=raidA --dev=deviceA\"), None)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 864, in assertNotEqual\n    if not first != second:\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\nTypeError: unorderable types: FC6_DmRaidData() <= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -21,7 +21,7 @@", "         return ((self.name == y.name) and (self.devices == y.devices))", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self <= y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 2}, "17": {"result-type": "normal", "op-name": "replace_Eq_with_LtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_Eq_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 40, in runTest\n    self.assertNotEqual(self.assert_parse(\"dmraid --name=raidA --dev=deviceA\"), self.assert_parse(\"dmraid --name=raidA --dev=deviceB\"))\nAssertionError: <pykickstart.commands.dmraid.FC6_DmRaidData object at 0x7ff8e3b87a20> == <pykickstart.commands.dmraid.FC6_DmRaidData object at 0x7ff8e3b87470>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.name == y.name) and (self.devices == y.devices))", "+        return ((self.name == y.name) and (self.devices <= y.devices))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 1}, "21": {"result-type": "normal", "op-name": "boolean_replacer", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "boolean_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": 76, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 48, in runTest\n    self.assert_parse_error(\"dmraid --dev debaisi\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -47,7 +47,7 @@", " ", "     def _getParser(self):", "         op = KSOptionParser(prog='dmraid', description='', version=FC6)", "-        op.add_argument('--name', required=True, version=FC6, help='')", "+        op.add_argument('--name', required=False, version=FC6, help='')", "         op.add_argument('--dev', dest='devices', action='append', required=True, version=FC6, help='')", "         return op", " "]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 1}, "4": {"result-type": "normal", "op-name": "replace_Eq_with_IsNot", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_Eq_with_IsNot", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 40, in runTest\n    self.assertNotEqual(self.assert_parse(\"dmraid --name=raidA --dev=deviceA\"), self.assert_parse(\"dmraid --name=raidA --dev=deviceB\"))\nAssertionError: <pykickstart.commands.dmraid.FC6_DmRaidData object at 0x7fba84b62240> == <pykickstart.commands.dmraid.FC6_DmRaidData object at 0x7fba84ab5d68>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.name == y.name) and (self.devices == y.devices))", "+        return ((self.name == y.name) and (self.devices is not y.devices))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 1}, "1": {"result-type": "normal", "op-name": "number_replacer", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "number_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": 61, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -34,7 +34,7 @@", "     removedKeywords = KickstartCommand.removedKeywords", "     removedAttrs = KickstartCommand.removedAttrs", " ", "-    def __init__(self, writePriority=60, *args, **kwargs):", "+    def __init__(self, writePriority=61, *args, **kwargs):", "         KickstartCommand.__init__(self, writePriority, *args, **kwargs)", "         self.op = self._getParser()", "         self.dmraids = kwargs.get('dmraids', [])"]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 0}, "41": {"result-type": "normal", "op-name": "replace_Eq_with_Is", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_Eq_with_Is", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -21,7 +21,7 @@", "         return ((self.name == y.name) and (self.devices == y.devices))", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self is y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 2}, "31": {"result-type": "normal", "op-name": "replace_Eq_with_NotIn", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_Eq_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 40, in runTest\n    self.assertNotEqual(self.assert_parse(\"dmraid --name=raidA --dev=deviceA\"), self.assert_parse(\"dmraid --name=raidA --dev=deviceB\"))\nAssertionError: <pykickstart.commands.dmraid.FC6_DmRaidData object at 0x7f454ec357b8> == <pykickstart.commands.dmraid.FC6_DmRaidData object at 0x7f454ebb7198>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.name == y.name) and (self.devices == y.devices))", "+        return ((self.name == y.name) and (self.devices not in y.devices))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 1}, "14": {"result-type": "normal", "op-name": "replace_In_with_LtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_In_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithLtE", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nTypeError: unorderable types: FC6_DmRaidData() <= list()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 65, in runTest\n    dmraid --name=raidB --dev=deviceB\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \ndmraid --name=raidA --dev=deviceA\ndmraid --name=raidB --dev=deviceB: unorderable types: FC6_DmRaidData() <= list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -57,7 +57,7 @@", "         dm.name = dm.name.split('/')[(- 1)]", "         self.set_to_obj(ns, dm)", "         dm.lineno = self.lineno", "-        if (dm in self.dataList()):", "+        if (dm <= self.dataList()):", "             warnings.warn((_('A DM RAID device with the name %(name)s and devices %(devices)s has already been defined.') % {'name': dm.name, 'devices': dm.devices}))", "         return dm", " "]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 0}, "36": {"result-type": "normal", "op-name": "replace_Eq_with_In", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_Eq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.name == y.name) and (self.devices == y.devices))", "+        return ((self.name in y.name) and (self.devices == y.devices))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 0}, "40": {"result-type": "normal", "op-name": "replace_Eq_with_Is", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_Eq_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 69, in runTest\n    dmraid --name=raidA --dev=deviceA\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.name == y.name) and (self.devices == y.devices))", "+        return ((self.name == y.name) and (self.devices is y.devices))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 1}, "38": {"result-type": "normal", "op-name": "replace_Eq_with_In", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_Eq_with_In", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 38, in runTest\n    self.assertNotEqual(self.assert_parse(\"dmraid --name=raidA --dev=deviceA\"), None)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 864, in assertNotEqual\n    if not first != second:\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -21,7 +21,7 @@", "         return ((self.name == y.name) and (self.devices == y.devices))", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self in y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 2}, "32": {"result-type": "normal", "op-name": "replace_Eq_with_NotIn", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_Eq_with_NotIn", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 38, in runTest\n    self.assertNotEqual(self.assert_parse(\"dmraid --name=raidA --dev=deviceA\"), None)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 864, in assertNotEqual\n    if not first != second:\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -21,7 +21,7 @@", "         return ((self.name == y.name) and (self.devices == y.devices))", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self not in y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 2}, "39": {"result-type": "normal", "op-name": "replace_Eq_with_Is", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_Eq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 69, in runTest\n    dmraid --name=raidA --dev=deviceA\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.name == y.name) and (self.devices == y.devices))", "+        return ((self.name is y.name) and (self.devices == y.devices))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 0}, "5": {"result-type": "normal", "op-name": "replace_Eq_with_IsNot", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_Eq_with_IsNot", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 38, in runTest\n    self.assertNotEqual(self.assert_parse(\"dmraid --name=raidA --dev=deviceA\"), None)\nAssertionError: <pykickstart.commands.dmraid.FC6_DmRaidData object at 0x7f74ff69f668> == None\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -21,7 +21,7 @@", "         return ((self.name == y.name) and (self.devices == y.devices))", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self is not y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 2}, "7": {"result-type": "normal", "op-name": "replace_Eq_with_Gt", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_Eq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 69, in runTest\n    dmraid --name=raidA --dev=deviceA\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.name == y.name) and (self.devices == y.devices))", "+        return ((self.name > y.name) and (self.devices == y.devices))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 0}, "35": {"result-type": "normal", "op-name": "replace_Eq_with_NotEq", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_Eq_with_NotEq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 38, in runTest\n    self.assertNotEqual(self.assert_parse(\"dmraid --name=raidA --dev=deviceA\"), None)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 864, in assertNotEqual\n    if not first != second:\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\nRecursionError: maximum recursion depth exceeded while calling a Python object\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -21,7 +21,7 @@", "         return ((self.name == y.name) and (self.devices == y.devices))", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self != y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 2}, "22": {"result-type": "normal", "op-name": "boolean_replacer", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "boolean_replacer", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": 78, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 46, in runTest\n    self.assert_parse_error(\"dmraid --name=onamai\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -48,7 +48,7 @@", "     def _getParser(self):", "         op = KSOptionParser(prog='dmraid', description='', version=FC6)", "         op.add_argument('--name', required=True, version=FC6, help='')", "-        op.add_argument('--dev', dest='devices', action='append', required=True, version=FC6, help='')", "+        op.add_argument('--dev', dest='devices', action='append', required=False, version=FC6, help='')", "         return op", " ", "     def parse(self, args):"]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 2}, "26": {"result-type": "normal", "op-name": "replace_Eq_with_Lt", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_Eq_with_Lt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 38, in runTest\n    self.assertNotEqual(self.assert_parse(\"dmraid --name=raidA --dev=deviceA\"), None)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 864, in assertNotEqual\n    if not first != second:\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\nTypeError: unorderable types: FC6_DmRaidData() < NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -21,7 +21,7 @@", "         return ((self.name == y.name) and (self.devices == y.devices))", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self < y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 2}, "20": {"result-type": "normal", "op-name": "boolean_replacer", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "boolean_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": 41, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 38, in runTest\n    self.assertNotEqual(self.assert_parse(\"dmraid --name=raidA --dev=deviceA\"), None)\nAssertionError: <pykickstart.commands.dmraid.FC6_DmRaidData object at 0x7fa5662bc9e8> == None\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -17,7 +17,7 @@", " ", "     def __eq__(self, y):", "         if (not y):", "-            return False", "+            return True", "         return ((self.name == y.name) and (self.devices == y.devices))", " ", "     def __ne__(self, y):"]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 0}, "8": {"result-type": "normal", "op-name": "replace_Eq_with_Gt", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_Eq_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 69, in runTest\n    dmraid --name=raidA --dev=deviceA\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.name == y.name) and (self.devices == y.devices))", "+        return ((self.name == y.name) and (self.devices > y.devices))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 1}, "2": {"result-type": "normal", "op-name": "number_replacer", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "number_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": 84, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nIndexError: list index out of range\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 65, in runTest\n    dmraid --name=raidB --dev=deviceB\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \ndmraid --name=raidA --dev=deviceA\ndmraid --name=raidB --dev=deviceB: list index out of range\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -54,7 +54,7 @@", "     def parse(self, args):", "         dm = self.dataClass()", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "-        dm.name = dm.name.split('/')[(- 1)]", "+        dm.name = dm.name.split('/')[(- 2)]", "         self.set_to_obj(ns, dm)", "         dm.lineno = self.lineno", "         if (dm in self.dataList()):"]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 1}, "23": {"result-type": "normal", "op-name": "arithmetic_operator_deletion", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "arithmetic_operator_deletion", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": 84, "operator": "cosmic_ray.operators.arithmetic_operator_deletion.ReverseUnarySub", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nIndexError: list index out of range\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 65, in runTest\n    dmraid --name=raidB --dev=deviceB\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \ndmraid --name=raidA --dev=deviceA\ndmraid --name=raidB --dev=deviceB: list index out of range\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -54,7 +54,7 @@", "     def parse(self, args):", "         dm = self.dataClass()", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "-        dm.name = dm.name.split('/')[(- 1)]", "+        dm.name = dm.name.split('/')[(+ 1)]", "         self.set_to_obj(ns, dm)", "         dm.lineno = self.lineno", "         if (dm in self.dataList()):"]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 0}, "34": {"result-type": "normal", "op-name": "replace_Eq_with_NotEq", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_Eq_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 69, in runTest\n    dmraid --name=raidA --dev=deviceA\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.name == y.name) and (self.devices == y.devices))", "+        return ((self.name == y.name) and (self.devices != y.devices))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 1}, "19": {"result-type": "normal", "op-name": "replace_In_with_Eq", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_In_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithEq", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nAttributeError: 'list' object has no attribute 'name'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 65, in runTest\n    dmraid --name=raidB --dev=deviceB\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \ndmraid --name=raidA --dev=deviceA\ndmraid --name=raidB --dev=deviceB: 'list' object has no attribute 'name'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -57,7 +57,7 @@", "         dm.name = dm.name.split('/')[(- 1)]", "         self.set_to_obj(ns, dm)", "         dm.lineno = self.lineno", "-        if (dm in self.dataList()):", "+        if (dm == self.dataList()):", "             warnings.warn((_('A DM RAID device with the name %(name)s and devices %(devices)s has already been defined.') % {'name': dm.name, 'devices': dm.devices}))", "         return dm", " "]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 0}, "10": {"result-type": "normal", "op-name": "replace_In_with_Gt", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_In_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithGt", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nTypeError: unorderable types: FC6_DmRaidData() > list()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 65, in runTest\n    dmraid --name=raidB --dev=deviceB\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \ndmraid --name=raidA --dev=deviceA\ndmraid --name=raidB --dev=deviceB: unorderable types: FC6_DmRaidData() > list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -57,7 +57,7 @@", "         dm.name = dm.name.split('/')[(- 1)]", "         self.set_to_obj(ns, dm)", "         dm.lineno = self.lineno", "-        if (dm in self.dataList()):", "+        if (dm > self.dataList()):", "             warnings.warn((_('A DM RAID device with the name %(name)s and devices %(devices)s has already been defined.') % {'name': dm.name, 'devices': dm.devices}))", "         return dm", " "]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 0}, "27": {"result-type": "normal", "op-name": "replace_Eq_with_GtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_Eq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.name == y.name) and (self.devices == y.devices))", "+        return ((self.name >= y.name) and (self.devices == y.devices))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 0}, "28": {"result-type": "normal", "op-name": "replace_Eq_with_GtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_Eq_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.name == y.name) and (self.devices == y.devices))", "+        return ((self.name == y.name) and (self.devices >= y.devices))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 1}, "16": {"result-type": "normal", "op-name": "replace_Eq_with_LtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_Eq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 39, in runTest\n    self.assertNotEqual(self.assert_parse(\"dmraid --name=raidA --dev=deviceA\"), self.assert_parse(\"dmraid --name=raidB --dev=deviceA\"))\nAssertionError: <pykickstart.commands.dmraid.FC6_DmRaidData object at 0x7f871065db70> == <pykickstart.commands.dmraid.FC6_DmRaidData object at 0x7f871067d160>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.name == y.name) and (self.devices == y.devices))", "+        return ((self.name <= y.name) and (self.devices == y.devices))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 0}, "3": {"result-type": "normal", "op-name": "replace_Eq_with_IsNot", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_Eq_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 39, in runTest\n    self.assertNotEqual(self.assert_parse(\"dmraid --name=raidA --dev=deviceA\"), self.assert_parse(\"dmraid --name=raidB --dev=deviceA\"))\nAssertionError: <pykickstart.commands.dmraid.FC6_DmRaidData object at 0x7f99017edb70> == <pykickstart.commands.dmraid.FC6_DmRaidData object at 0x7f99018310b8>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.name == y.name) and (self.devices == y.devices))", "+        return ((self.name is not y.name) and (self.devices == y.devices))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 0}, "15": {"result-type": "normal", "op-name": "replace_In_with_Lt", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_In_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithLt", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nTypeError: unorderable types: FC6_DmRaidData() < list()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 65, in runTest\n    dmraid --name=raidB --dev=deviceB\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \ndmraid --name=raidA --dev=deviceA\ndmraid --name=raidB --dev=deviceB: unorderable types: FC6_DmRaidData() < list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -57,7 +57,7 @@", "         dm.name = dm.name.split('/')[(- 1)]", "         self.set_to_obj(ns, dm)", "         dm.lineno = self.lineno", "-        if (dm in self.dataList()):", "+        if (dm < self.dataList()):", "             warnings.warn((_('A DM RAID device with the name %(name)s and devices %(devices)s has already been defined.') % {'name': dm.name, 'devices': dm.devices}))", "         return dm", " "]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 0}, "29": {"result-type": "normal", "op-name": "replace_Eq_with_GtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_Eq_with_GtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 38, in runTest\n    self.assertNotEqual(self.assert_parse(\"dmraid --name=raidA --dev=deviceA\"), None)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 864, in assertNotEqual\n    if not first != second:\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\nTypeError: unorderable types: FC6_DmRaidData() >= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -21,7 +21,7 @@", "         return ((self.name == y.name) and (self.devices == y.devices))", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self >= y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 2}, "33": {"result-type": "normal", "op-name": "replace_Eq_with_NotEq", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_Eq_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 69, in runTest\n    dmraid --name=raidA --dev=deviceA\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.name == y.name) and (self.devices == y.devices))", "+        return ((self.name != y.name) and (self.devices == y.devices))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 0}, "6": {"result-type": "normal", "op-name": "replace_In_with_NotIn", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_In_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithNotIn", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nUserWarning: A DM RAID device with the name raidA and devices ['deviceA'] has already been defined.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 65, in runTest\n    dmraid --name=raidB --dev=deviceB\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \ndmraid --name=raidA --dev=deviceA\ndmraid --name=raidB --dev=deviceB: A DM RAID device with the name raidA and devices ['deviceA'] has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -57,7 +57,7 @@", "         dm.name = dm.name.split('/')[(- 1)]", "         self.set_to_obj(ns, dm)", "         dm.lineno = self.lineno", "-        if (dm in self.dataList()):", "+        if (dm not in self.dataList()):", "             warnings.warn((_('A DM RAID device with the name %(name)s and devices %(devices)s has already been defined.') % {'name': dm.name, 'devices': dm.devices}))", "         return dm", " "]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 0}, "30": {"result-type": "normal", "op-name": "replace_Eq_with_NotIn", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_Eq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 69, in runTest\n    dmraid --name=raidA --dev=deviceA\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.name == y.name) and (self.devices == y.devices))", "+        return ((self.name not in y.name) and (self.devices == y.devices))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 0}, "42": {"result-type": "normal", "op-name": "replace_In_with_Is", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_In_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithIs", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 69, in runTest\n    dmraid --name=raidA --dev=deviceA\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -57,7 +57,7 @@", "         dm.name = dm.name.split('/')[(- 1)]", "         self.set_to_obj(ns, dm)", "         dm.lineno = self.lineno", "-        if (dm in self.dataList()):", "+        if (dm is self.dataList()):", "             warnings.warn((_('A DM RAID device with the name %(name)s and devices %(devices)s has already been defined.') % {'name': dm.name, 'devices': dm.devices}))", "         return dm", " "]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 0}, "25": {"result-type": "normal", "op-name": "replace_Eq_with_Lt", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_Eq_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 69, in runTest\n    dmraid --name=raidA --dev=deviceA\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.name == y.name) and (self.devices == y.devices))", "+        return ((self.name == y.name) and (self.devices < y.devices))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 1}, "24": {"result-type": "normal", "op-name": "replace_Eq_with_Lt", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_Eq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 69, in runTest\n    dmraid --name=raidA --dev=deviceA\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.name == y.name) and (self.devices == y.devices))", "+        return ((self.name < y.name) and (self.devices == y.devices))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 0}, "12": {"result-type": "normal", "op-name": "replace_In_with_IsNot", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_In_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithIsNot", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nUserWarning: A DM RAID device with the name raidA and devices ['deviceA'] has already been defined.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 65, in runTest\n    dmraid --name=raidB --dev=deviceB\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \ndmraid --name=raidA --dev=deviceA\ndmraid --name=raidB --dev=deviceB: A DM RAID device with the name raidA and devices ['deviceA'] has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -57,7 +57,7 @@", "         dm.name = dm.name.split('/')[(- 1)]", "         self.set_to_obj(ns, dm)", "         dm.lineno = self.lineno", "-        if (dm in self.dataList()):", "+        if (dm is not self.dataList()):", "             warnings.warn((_('A DM RAID device with the name %(name)s and devices %(devices)s has already been defined.') % {'name': dm.name, 'devices': dm.devices}))", "         return dm", " "]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 0}, "37": {"result-type": "normal", "op-name": "replace_Eq_with_In", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_Eq_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 69, in runTest\n    dmraid --name=raidA --dev=deviceA\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.name == y.name) and (self.devices == y.devices))", "+        return ((self.name == y.name) and (self.devices in y.devices))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 1}, "9": {"result-type": "normal", "op-name": "replace_Eq_with_Gt", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_Eq_with_Gt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 38, in runTest\n    self.assertNotEqual(self.assert_parse(\"dmraid --name=raidA --dev=deviceA\"), None)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 864, in assertNotEqual\n    if not first != second:\n  File \"pykickstart.commands.dmraid\", line 46, in __ne__\nTypeError: unorderable types: FC6_DmRaidData() > NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -21,7 +21,7 @@", "         return ((self.name == y.name) and (self.devices == y.devices))", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self > y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 2}, "11": {"result-type": "normal", "op-name": "replace_In_with_NotEq", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_In_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithNotEq", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nUserWarning: A DM RAID device with the name raidA and devices ['deviceA'] has already been defined.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 65, in runTest\n    dmraid --name=raidB --dev=deviceB\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \ndmraid --name=raidA --dev=deviceA\ndmraid --name=raidB --dev=deviceB: A DM RAID device with the name raidA and devices ['deviceA'] has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -57,7 +57,7 @@", "         dm.name = dm.name.split('/')[(- 1)]", "         self.set_to_obj(ns, dm)", "         dm.lineno = self.lineno", "-        if (dm in self.dataList()):", "+        if (dm != self.dataList()):", "             warnings.warn((_('A DM RAID device with the name %(name)s and devices %(devices)s has already been defined.') % {'name': dm.name, 'devices': dm.devices}))", "         return dm", " "]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 0}, "13": {"result-type": "normal", "op-name": "replace_In_with_GtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.dmraid", "replace_In_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/dmraid.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithGtE", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nTypeError: unorderable types: FC6_DmRaidData() >= list()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/dmraid.py\", line 65, in runTest\n    dmraid --name=raidB --dev=deviceB\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \ndmraid --name=raidA --dev=deviceA\ndmraid --name=raidB --dev=deviceB: unorderable types: FC6_DmRaidData() >= list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/dmraid.py", "@@ -57,7 +57,7 @@", "         dm.name = dm.name.split('/')[(- 1)]", "         self.set_to_obj(ns, dm)", "         dm.lineno = self.lineno", "-        if (dm in self.dataList()):", "+        if (dm >= self.dataList()):", "             warnings.warn((_('A DM RAID device with the name %(name)s and devices %(devices)s has already been defined.') % {'name': dm.name, 'devices': dm.devices}))", "         return dm", " "]]], "module-name": "pykickstart.commands.dmraid", "occurrence": 0}}}