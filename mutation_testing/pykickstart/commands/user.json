{"_default": {}, "work-parameters": {"1": {"test-runner": "nose", "test-args": ["-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "timeout": 29.572180000000003}}, "work-items": {"46": {"result-data": [{"line_number": 62, "occurrence": 0, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 35, in runTest\n    self.assert_parse(\"user --name=user --groups=grp1\", \"user --groups=grp1 --name=user\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'user --name=user\\n' != 'user --groups=grp1 --name=user\\n'\n- user --name=user\n+ user --groups=grp1 --name=user\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -36,7 +36,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = ''", "-        if (len(self.groups) > 0):", "+        if (len(self.groups) > 1):", "             retval += (' --groups=%s' % ','.join(self.groups))", "         if self.homedir:", "             retval += (' --homedir=%s' % self.homedir)"]]], "op-name": "number_replacer", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "number_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "25": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 31, in runTest\n    self.assert_parse(\"user --name=user\", \"user --name=user\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.user\", line 53, in __str__\nTypeError: unorderable types: NoneType() <= str()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -29,7 +29,7 @@", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)", "-        if (self.uid != ''):", "+        if (self.uid <= ''):", "             retval += 'user'", "             retval += (self._getArgsAsStr() + '\\n')", "         return retval"]]], "op-name": "replace_NotEq_with_LtE", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_NotEq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "9": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 42, in runTest\n    self.assert_parse(\"user --name=userB\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -22,7 +22,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.name == y.name)", "+        return (self.name < y.name)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "op-name": "replace_Eq_with_Lt", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_Eq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "39": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 31, in runTest\n    self.assert_parse(\"user --name=user\", \"user --name=user\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.user\", line 53, in __str__\nTypeError: 'in <string>' requires string as left operand, not NoneType\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -29,7 +29,7 @@", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)", "-        if (self.uid != ''):", "+        if (self.uid not in ''):", "             retval += 'user'", "             retval += (self._getArgsAsStr() + '\\n')", "         return retval"]]], "op-name": "replace_NotEq_with_NotIn", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_NotEq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "52": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nAttributeError: 'list' object has no attribute 'name'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 82, in runTest\n    user --name=userB\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \nuser --name=userA\nuser --name=userB: 'list' object has no attribute 'name'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -125,7 +125,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, ud)", "         ud.lineno = self.lineno", "-        if (ud in self.dataList()):", "+        if (ud == self.dataList()):", "             warnings.warn((_('A user with the name %s has already been defined.') % ud.name))", "         return ud", " "]]], "op-name": "replace_In_with_Eq", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_In_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "6": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 31, in runTest\n    self.assert_parse(\"user --name=user\", \"user --name=user\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.user\", line 194, in parse\nTypeError: unorderable types: F12_UserData() >= list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -125,7 +125,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, ud)", "         ud.lineno = self.lineno", "-        if (ud in self.dataList()):", "+        if (ud >= self.dataList()):", "             warnings.warn((_('A user with the name %s has already been defined.') % ud.name))", "         return ud", " "]]], "op-name": "replace_In_with_GtE", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_In_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "48": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 31, in runTest\n    self.assert_parse(\"user --name=user\", \"user --name=user\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'user --groups= --name=user\\n' != 'user --name=user\\n'\n- user --groups= --name=user\n?     ----------\n+ user --name=user\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -36,7 +36,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = ''", "-        if (len(self.groups) > 0):", "+        if (len(self.groups) == 0):", "             retval += (' --groups=%s' % ','.join(self.groups))", "         if self.homedir:", "             retval += (' --homedir=%s' % self.homedir)"]]], "op-name": "replace_Gt_with_Eq", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_Gt_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "40": {"result-data": [{"line_number": 35, "occurrence": 0, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 67, in runTest\n    self.assertEqual(ud._getArgsAsStr(), \"\")\nAssertionError: ' --iscrypted' != ''\n-  --iscrypted\n+ \n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -13,7 +13,7 @@", "         BaseData.__init__(self, *args, **kwargs)", "         self.groups = kwargs.get('groups', [])", "         self.homedir = kwargs.get('homedir', '')", "-        self.isCrypted = kwargs.get('isCrypted', False)", "+        self.isCrypted = kwargs.get('isCrypted', True)", "         self.name = kwargs.get('name', '')", "         self.password = kwargs.get('password', '')", "         self.shell = kwargs.get('shell', '')"]]], "op-name": "boolean_replacer", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "boolean_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "22": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 31, in runTest\n    self.assert_parse(\"user --name=user\", \"user --name=user\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'user --groups= --name=user\\n' != 'user --name=user\\n'\n- user --groups= --name=user\n?     ----------\n+ user --name=user\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -36,7 +36,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = ''", "-        if (len(self.groups) > 0):", "+        if (len(self.groups) <= 0):", "             retval += (' --groups=%s' % ','.join(self.groups))", "         if self.homedir:", "             retval += (' --homedir=%s' % self.homedir)"]]], "op-name": "replace_Gt_with_LtE", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_Gt_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "37": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 31, in runTest\n    self.assert_parse(\"user --name=user\", \"user --name=user\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'user --groups= --name=user\\n' != 'user --name=user\\n'\n- user --groups= --name=user\n?     ----------\n+ user --name=user\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -36,7 +36,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = ''", "-        if (len(self.groups) > 0):", "+        if (len(self.groups) is 0):", "             retval += (' --groups=%s' % ','.join(self.groups))", "         if self.homedir:", "             retval += (' --homedir=%s' % self.homedir)"]]], "op-name": "replace_Gt_with_Is", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_Gt_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "18": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 42, in runTest\n    self.assert_parse(\"user --name=userB\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -22,7 +22,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.name == y.name)", "+        return (self.name <= y.name)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "op-name": "replace_Eq_with_LtE", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_Eq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "34": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nUserWarning: A user with the name userB has already been defined.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 82, in runTest\n    user --name=userB\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \nuser --name=userA\nuser --name=userB: A user with the name userB has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -22,7 +22,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.name == y.name)", "+        return (self.name >= y.name)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "op-name": "replace_Eq_with_GtE", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_Eq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "19": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 42, in runTest\n    self.assert_parse(\"user --name=userB\"))\n  File \"pykickstart.commands.user\", line 48, in __ne__\nTypeError: unorderable types: F12_UserData() <= F12_UserData()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -25,7 +25,7 @@", "         return (self.name == y.name)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self <= y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "op-name": "replace_Eq_with_LtE", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_Eq_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 1, "result-type": "normal"}, "45": {"result-data": [{"line_number": 212, "occurrence": 5, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 31, in runTest\n    self.assert_parse(\"user --name=user\", \"user --name=user\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'user --name=user --lock\\n' != 'user --name=user\\n'\n- user --name=user --lock\n?                 -------\n+ user --name=user\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -142,7 +142,7 @@", " ", "     def _getParser(self):", "         op = FC6_User._getParser(self)", "-        op.add_argument('--lock', action='store_true', default=False, version=F8, help='\\n                        If this is present, the new user account is locked by\\n                        default. That is, the user will not be able to login\\n                        from the console.')", "+        op.add_argument('--lock', action='store_true', default=True, version=F8, help='\\n                        If this is present, the new user account is locked by\\n                        default. That is, the user will not be able to login\\n                        from the console.')", "         op.add_argument('--plaintext', dest='isCrypted', version=F8, action='store_false', help='\\n                        If specified, consider the password provided by\\n                        ``--password`` to be plain text.')", "         return op", " "]]], "op-name": "boolean_replacer", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "boolean_replacer", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 5, "result-type": "normal"}, "29": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 31, in runTest\n    self.assert_parse(\"user --name=user\", \"user --name=user\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.user\", line 55, in __str__\n  File \"pykickstart.commands.user\", line 104, in _getArgsAsStr\n  File \"pykickstart.commands.user\", line 88, in _getArgsAsStr\n  File \"pykickstart.commands.user\", line 62, in _getArgsAsStr\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -36,7 +36,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = ''", "-        if (len(self.groups) > 0):", "+        if (len(self.groups) not in 0):", "             retval += (' --groups=%s' % ','.join(self.groups))", "         if self.homedir:", "             retval += (' --homedir=%s' % self.homedir)"]]], "op-name": "replace_Gt_with_NotIn", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_Gt_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "49": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 31, in runTest\n    self.assert_parse(\"user --name=user\", \"user --name=user\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.user\", line 53, in __str__\nTypeError: unorderable types: NoneType() >= str()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -29,7 +29,7 @@", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)", "-        if (self.uid != ''):", "+        if (self.uid >= ''):", "             retval += 'user'", "             retval += (self._getArgsAsStr() + '\\n')", "         return retval"]]], "op-name": "replace_NotEq_with_GtE", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_NotEq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "10": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 42, in runTest\n    self.assert_parse(\"user --name=userB\"))\n  File \"pykickstart.commands.user\", line 48, in __ne__\nTypeError: unorderable types: F12_UserData() < F12_UserData()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -25,7 +25,7 @@", "         return (self.name == y.name)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self < y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "op-name": "replace_Eq_with_Lt", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_Eq_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 1, "result-type": "normal"}, "26": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 31, in runTest\n    self.assert_parse(\"user --name=user\", \"user --name=user\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.user\", line 195, in parse\nUserWarning: A user with the name user has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -125,7 +125,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, ud)", "         ud.lineno = self.lineno", "-        if (ud in self.dataList()):", "+        if (ud not in self.dataList()):", "             warnings.warn((_('A user with the name %s has already been defined.') % ud.name))", "         return ud", " "]]], "op-name": "replace_In_with_NotIn", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_In_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "13": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 87, in runTest\n    user --name=userA\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -125,7 +125,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, ud)", "         ud.lineno = self.lineno", "-        if (ud in self.dataList()):", "+        if (ud is self.dataList()):", "             warnings.warn((_('A user with the name %s has already been defined.') % ud.name))", "         return ud", " "]]], "op-name": "replace_In_with_Is", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_In_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "41": {"result-data": [{"line_number": 43, "occurrence": 1, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -21,7 +21,7 @@", " ", "     def __eq__(self, y):", "         if (not y):", "-            return False", "+            return True", "         return (self.name == y.name)", " ", "     def __ne__(self, y):"]]], "op-name": "boolean_replacer", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "boolean_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 1, "result-type": "normal"}, "16": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 42, in runTest\n    self.assert_parse(\"user --name=userB\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -22,7 +22,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.name == y.name)", "+        return (self.name != y.name)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "op-name": "replace_Eq_with_NotEq", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_Eq_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "4": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 31, in runTest\n    self.assert_parse(\"user --name=user\", \"user --name=user\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'user --groups= --name=user\\n' != 'user --name=user\\n'\n- user --groups= --name=user\n?     ----------\n+ user --name=user\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -36,7 +36,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = ''", "-        if (len(self.groups) > 0):", "+        if (len(self.groups) >= 0):", "             retval += (' --groups=%s' % ','.join(self.groups))", "         if self.homedir:", "             retval += (' --homedir=%s' % self.homedir)"]]], "op-name": "replace_Gt_with_GtE", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_Gt_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "12": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 31, in runTest\n    self.assert_parse(\"user --name=user\", \"user --name=user\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.user\", line 53, in __str__\nTypeError: unorderable types: NoneType() < str()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -29,7 +29,7 @@", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)", "-        if (self.uid != ''):", "+        if (self.uid < ''):", "             retval += 'user'", "             retval += (self._getArgsAsStr() + '\\n')", "         return retval"]]], "op-name": "replace_NotEq_with_Lt", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_NotEq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "21": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 31, in runTest\n    self.assert_parse(\"user --name=user\", \"user --name=user\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.user\", line 53, in __str__\nTypeError: 'in <string>' requires string as left operand, not NoneType\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -29,7 +29,7 @@", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)", "-        if (self.uid != ''):", "+        if (self.uid in ''):", "             retval += 'user'", "             retval += (self._getArgsAsStr() + '\\n')", "         return retval"]]], "op-name": "replace_NotEq_with_In", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_NotEq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "5": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 31, in runTest\n    self.assert_parse(\"user --name=user\", \"user --name=user\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'user --name=user\\n'\n+ user --name=user\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -29,7 +29,7 @@", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)", "-        if (self.uid != ''):", "+        if (self.uid is ''):", "             retval += 'user'", "             retval += (self._getArgsAsStr() + '\\n')", "         return retval"]]], "op-name": "replace_NotEq_with_Is", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_NotEq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "38": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 31, in runTest\n    self.assert_parse(\"user --name=user\", \"user --name=user\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'user --name=user\\n'\n+ user --name=user\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -29,7 +29,7 @@", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)", "-        if (self.uid != ''):", "+        if (self.uid == ''):", "             retval += 'user'", "             retval += (self._getArgsAsStr() + '\\n')", "         return retval"]]], "op-name": "replace_NotEq_with_Eq", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_NotEq_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "24": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 42, in runTest\n    self.assert_parse(\"user --name=userB\"))\n  File \"pykickstart.commands.user\", line 48, in __ne__\nTypeError: argument of type 'F12_UserData' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -25,7 +25,7 @@", "         return (self.name == y.name)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self in y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "op-name": "replace_Eq_with_In", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_Eq_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 1, "result-type": "normal"}, "30": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 42, in runTest\n    self.assert_parse(\"user --name=userB\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -22,7 +22,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.name == y.name)", "+        return (self.name not in y.name)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "op-name": "replace_Eq_with_NotIn", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_Eq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "14": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nUserWarning: A user with the name userB has already been defined.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 82, in runTest\n    user --name=userB\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \nuser --name=userA\nuser --name=userB: A user with the name userB has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -22,7 +22,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.name == y.name)", "+        return (self.name > y.name)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "op-name": "replace_Eq_with_Gt", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_Eq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "27": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotEq"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -36,7 +36,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = ''", "-        if (len(self.groups) > 0):", "+        if (len(self.groups) != 0):", "             retval += (' --groups=%s' % ','.join(self.groups))", "         if self.homedir:", "             retval += (' --homedir=%s' % self.homedir)"]]], "op-name": "replace_Gt_with_NotEq", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_Gt_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "23": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -22,7 +22,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.name == y.name)", "+        return (self.name in y.name)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "op-name": "replace_Eq_with_In", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_Eq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "3": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 31, in runTest\n    self.assert_parse(\"user --name=user\", \"user --name=user\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.user\", line 194, in parse\nTypeError: unorderable types: F12_UserData() <= list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -125,7 +125,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, ud)", "         ud.lineno = self.lineno", "-        if (ud in self.dataList()):", "+        if (ud <= self.dataList()):", "             warnings.warn((_('A user with the name %s has already been defined.') % ud.name))", "         return ud", " "]]], "op-name": "replace_In_with_LtE", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_In_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "35": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 42, in runTest\n    self.assert_parse(\"user --name=userB\"))\n  File \"pykickstart.commands.user\", line 48, in __ne__\nTypeError: unorderable types: F12_UserData() >= F12_UserData()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -25,7 +25,7 @@", "         return (self.name == y.name)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self >= y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "op-name": "replace_Eq_with_GtE", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_Eq_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 1, "result-type": "normal"}, "33": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -25,7 +25,7 @@", "         return (self.name == y.name)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self is y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "op-name": "replace_Eq_with_Is", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_Eq_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 1, "result-type": "normal"}, "1": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIsNot"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -36,7 +36,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = ''", "-        if (len(self.groups) > 0):", "+        if (len(self.groups) is not 0):", "             retval += (' --groups=%s' % ','.join(self.groups))", "         if self.homedir:", "             retval += (' --homedir=%s' % self.homedir)"]]], "op-name": "replace_Gt_with_IsNot", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_Gt_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "20": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithIsNot"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 31, in runTest\n    self.assert_parse(\"user --name=user\", \"user --name=user\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.user\", line 195, in parse\nUserWarning: A user with the name user has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -125,7 +125,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, ud)", "         ud.lineno = self.lineno", "-        if (ud in self.dataList()):", "+        if (ud is not self.dataList()):", "             warnings.warn((_('A user with the name %s has already been defined.') % ud.name))", "         return ud", " "]]], "op-name": "replace_In_with_IsNot", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_In_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "8": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithNotEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 31, in runTest\n    self.assert_parse(\"user --name=user\", \"user --name=user\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.user\", line 195, in parse\nUserWarning: A user with the name user has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -125,7 +125,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, ud)", "         ud.lineno = self.lineno", "-        if (ud in self.dataList()):", "+        if (ud != self.dataList()):", "             warnings.warn((_('A user with the name %s has already been defined.') % ud.name))", "         return ud", " "]]], "op-name": "replace_In_with_NotEq", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_In_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "7": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 31, in runTest\n    self.assert_parse(\"user --name=user\", \"user --name=user\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.user\", line 55, in __str__\n  File \"pykickstart.commands.user\", line 104, in _getArgsAsStr\n  File \"pykickstart.commands.user\", line 88, in _getArgsAsStr\n  File \"pykickstart.commands.user\", line 62, in _getArgsAsStr\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -36,7 +36,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = ''", "-        if (len(self.groups) > 0):", "+        if (len(self.groups) in 0):", "             retval += (' --groups=%s' % ','.join(self.groups))", "         if self.homedir:", "             retval += (' --homedir=%s' % self.homedir)"]]], "op-name": "replace_Gt_with_In", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_Gt_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "15": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 42, in runTest\n    self.assert_parse(\"user --name=userB\"))\n  File \"pykickstart.commands.user\", line 48, in __ne__\nTypeError: unorderable types: F12_UserData() > F12_UserData()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -25,7 +25,7 @@", "         return (self.name == y.name)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self > y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "op-name": "replace_Eq_with_Gt", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_Eq_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 1, "result-type": "normal"}, "43": {"result-data": [{"line_number": 160, "occurrence": 3, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 31, in runTest\n    self.assert_parse(\"user --name=user\", \"user --name=user\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'user --name=user --iscrypted\\n' != 'user --name=user\\n'\n- user --name=user --iscrypted\n+ user --name=user\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -113,7 +113,7 @@", "         op = KSOptionParser(prog='user', description='\\n                            Creates a new user on the system.', version=FC6)", "         op.add_argument('--groups', type=commaSplit, version=FC6, help='\\n                        In addition to the default group, a comma separated\\n                        list of group names the user should belong to. Any groups\\n                        that do not already exist will be created. If the group\\n                        already exists with a different GID, an error will\\n                        be raised.', metavar='<group1>,<group2>,...,<groupN>')", "         op.add_argument('--homedir', version=FC6, help='\\n                        The home directory for the user. If not provided, this\\n                        defaults to /home/.')", "-        op.add_argument('--iscrypted', dest='isCrypted', action='store_true', default=False, version=FC6, help='\\n                        If specified, consider the password provided by\\n                        ``--password`` already encrypted. This is the default.\\n                        ')", "+        op.add_argument('--iscrypted', dest='isCrypted', action='store_true', default=True, version=FC6, help='\\n                        If specified, consider the password provided by\\n                        ``--password`` already encrypted. This is the default.\\n                        ')", "         op.add_argument('--name', required=True, version=FC6, help='\\n                        Provides the name of the user. This option is required.\\n                        ')", "         op.add_argument('--password', version=FC6, help='\\n                        The new user\\'s password. If not provided, the account\\n                        will be locked by default. If this is present, the\\n                        password argument is assumed to already be encrypted.\\n                        ``--plaintext`` has the opposite effect - the password\\n                        argument is assumed to not be encrypted. To create an\\n                        encrypted password you can use python::\\n\\n                        ``python -c \\'import crypt; print(crypt.crypt(\"My Password\", \"$6$My Sault\"))\\'``\\n\\n                        This will generate sha512 crypt of your password using\\n                        your provided salt.')", "         op.add_argument('--shell', version=FC6, help=\"\\n                        The user's login shell. If not provided, this defaults\\n                        to the system default.\")"]]], "op-name": "boolean_replacer", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "boolean_replacer", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 3, "result-type": "normal"}, "2": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 31, in runTest\n    self.assert_parse(\"user --name=user\", \"user --name=user\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.user\", line 53, in __str__\nTypeError: unorderable types: NoneType() > str()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -29,7 +29,7 @@", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)", "-        if (self.uid != ''):", "+        if (self.uid > ''):", "             retval += 'user'", "             retval += (self._getArgsAsStr() + '\\n')", "         return retval"]]], "op-name": "replace_NotEq_with_Gt", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_NotEq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "17": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 42, in runTest\n    self.assert_parse(\"user --name=userB\"))\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\n  File \"pykickstart.commands.user\", line 48, in __ne__\nRecursionError: maximum recursion depth exceeded in comparison\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -25,7 +25,7 @@", "         return (self.name == y.name)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self != y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "op-name": "replace_Eq_with_NotEq", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_Eq_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 1, "result-type": "normal"}, "36": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithGt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 31, in runTest\n    self.assert_parse(\"user --name=user\", \"user --name=user\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.user\", line 194, in parse\nTypeError: unorderable types: F12_UserData() > list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -125,7 +125,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, ud)", "         ud.lineno = self.lineno", "-        if (ud in self.dataList()):", "+        if (ud > self.dataList()):", "             warnings.warn((_('A user with the name %s has already been defined.') % ud.name))", "         return ud", " "]]], "op-name": "replace_In_with_Gt", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_In_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "11": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 31, in runTest\n    self.assert_parse(\"user --name=user\", \"user --name=user\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.user\", line 194, in parse\nTypeError: unorderable types: F12_UserData() < list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -125,7 +125,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, ud)", "         ud.lineno = self.lineno", "-        if (ud in self.dataList()):", "+        if (ud < self.dataList()):", "             warnings.warn((_('A user with the name %s has already been defined.') % ud.name))", "         return ud", " "]]], "op-name": "replace_In_with_Lt", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_In_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "51": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 42, in runTest\n    self.assert_parse(\"user --name=userB\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -25,7 +25,7 @@", "         return (self.name == y.name)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self is not y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "op-name": "replace_Eq_with_IsNot", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_Eq_with_IsNot", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 1, "result-type": "normal"}, "44": {"result-data": [{"line_number": 164, "occurrence": 4, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 48, in runTest\n    self.assert_parse_error(\"user\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -114,7 +114,7 @@", "         op.add_argument('--groups', type=commaSplit, version=FC6, help='\\n                        In addition to the default group, a comma separated\\n                        list of group names the user should belong to. Any groups\\n                        that do not already exist will be created. If the group\\n                        already exists with a different GID, an error will\\n                        be raised.', metavar='<group1>,<group2>,...,<groupN>')", "         op.add_argument('--homedir', version=FC6, help='\\n                        The home directory for the user. If not provided, this\\n                        defaults to /home/.')", "         op.add_argument('--iscrypted', dest='isCrypted', action='store_true', default=False, version=FC6, help='\\n                        If specified, consider the password provided by\\n                        ``--password`` already encrypted. This is the default.\\n                        ')", "-        op.add_argument('--name', required=True, version=FC6, help='\\n                        Provides the name of the user. This option is required.\\n                        ')", "+        op.add_argument('--name', required=False, version=FC6, help='\\n                        Provides the name of the user. This option is required.\\n                        ')", "         op.add_argument('--password', version=FC6, help='\\n                        The new user\\'s password. If not provided, the account\\n                        will be locked by default. If this is present, the\\n                        password argument is assumed to already be encrypted.\\n                        ``--plaintext`` has the opposite effect - the password\\n                        argument is assumed to not be encrypted. To create an\\n                        encrypted password you can use python::\\n\\n                        ``python -c \\'import crypt; print(crypt.crypt(\"My Password\", \"$6$My Sault\"))\\'``\\n\\n                        This will generate sha512 crypt of your password using\\n                        your provided salt.')", "         op.add_argument('--shell', version=FC6, help=\"\\n                        The user's login shell. If not provided, this defaults\\n                        to the system default.\")", "         op.add_argument('--uid', type=int, metavar='INT', version=FC6, help=\"\\n                        The user's UID. If not provided, this defaults to the\\n                        next available non-system UID.\")"]]], "op-name": "boolean_replacer", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "boolean_replacer", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 4, "result-type": "normal"}, "31": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 42, in runTest\n    self.assert_parse(\"user --name=userB\"))\n  File \"pykickstart.commands.user\", line 48, in __ne__\nTypeError: argument of type 'F12_UserData' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -25,7 +25,7 @@", "         return (self.name == y.name)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self not in y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "op-name": "replace_Eq_with_NotIn", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_Eq_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 1, "result-type": "normal"}, "47": {"result-data": [{"line_number": 132, "occurrence": 1, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -98,7 +98,7 @@", "     removedKeywords = KickstartCommand.removedKeywords", "     removedAttrs = KickstartCommand.removedAttrs", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         KickstartCommand.__init__(self, writePriority, *args, **kwargs)", "         self.op = self._getParser()", "         self.userList = kwargs.get('userList', [])"]]], "op-name": "number_replacer", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "number_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 1, "result-type": "normal"}, "42": {"result-data": [{"line_number": 85, "occurrence": 2, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 67, in runTest\n    self.assertEqual(ud._getArgsAsStr(), \"\")\nAssertionError: ' --lock' != ''\n-  --lock\n+ \n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -58,7 +58,7 @@", " ", "     def __init__(self, *args, **kwargs):", "         FC6_UserData.__init__(self, *args, **kwargs)", "-        self.lock = kwargs.get('lock', False)", "+        self.lock = kwargs.get('lock', True)", " ", "     def _getArgsAsStr(self):", "         retval = FC6_UserData._getArgsAsStr(self)"]]], "op-name": "boolean_replacer", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "boolean_replacer", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 2, "result-type": "normal"}, "32": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 87, in runTest\n    user --name=userA\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -22,7 +22,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.name == y.name)", "+        return (self.name is y.name)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "op-name": "replace_Eq_with_Is", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_Eq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "50": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 42, in runTest\n    self.assert_parse(\"user --name=userB\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -22,7 +22,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.name == y.name)", "+        return (self.name is not y.name)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "op-name": "replace_Eq_with_IsNot", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_Eq_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}, "28": {"result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 104, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 92, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/user.py\", line 34, in runTest\n    \"user --groups=grp1,grp2 --homedir=/home/user --name=user --password=secret --iscrypted --shell=/bin/bash --uid=1000\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'user --homedir=/home/user --name=user --password[46 chars]00\\n' != 'user --groups=grp1,grp2 --homedir=/home/user --n[65 chars]00\\n'\n- user --homedir=/home/user --name=user --password=secret --iscrypted --shell=/bin/bash --uid=1000\n+ user --groups=grp1,grp2 --homedir=/home/user --name=user --password=secret --iscrypted --shell=/bin/bash --uid=1000\n?     +++++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/user.py", "@@ -36,7 +36,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = ''", "-        if (len(self.groups) > 0):", "+        if (len(self.groups) < 0):", "             retval += (' --groups=%s' % ','.join(self.groups))", "         if self.homedir:", "             retval += (' --homedir=%s' % self.homedir)"]]], "op-name": "replace_Gt_with_Lt", "module-name": "pykickstart.commands.user", "command": ["cosmic-ray", "worker", "pykickstart.commands.user", "replace_Gt_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/user.py"], "occurrence": 0, "result-type": "normal"}}}