{"_default": {}, "work-parameters": {"1": {"timeout": 20.20778, "test-runner": "nose", "test-args": ["-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"]}}, "work-items": {"20": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "occurrence": 0, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/liveimg.py\", line 41, in runTest\n    self.assertEqual(self.assert_parse(\"liveimg --url=http://one\"), self.assert_parse(\"liveimg --url=http://one\"))\nAssertionError: <pykickstart.commands.liveimg.F19_Liveimg object at 0x7f460850fc50> != <pykickstart.commands.liveimg.F19_Liveimg object at 0x7f46084c2668>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url not in other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_NotIn", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 0, "result-type": "normal"}, "32": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "occurrence": 0, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/liveimg.py\", line 41, in runTest\n    self.assertEqual(self.assert_parse(\"liveimg --url=http://one\"), self.assert_parse(\"liveimg --url=http://one\"))\nAssertionError: <pykickstart.commands.liveimg.F19_Liveimg object at 0x7f55bde04400> != <pykickstart.commands.liveimg.F19_Liveimg object at 0x7f55bddb7400>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url > other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_Gt", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 0, "result-type": "normal"}, "11": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "occurrence": 2, "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl <= other.noverifyssl) and (self.checksum == other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_LtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_LtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 2, "result-type": "normal"}, "34": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "occurrence": 2, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/liveimg.py\", line 41, in runTest\n    self.assertEqual(self.assert_parse(\"liveimg --url=http://one\"), self.assert_parse(\"liveimg --url=http://one\"))\nAssertionError: <pykickstart.commands.liveimg.F19_Liveimg object at 0x7feab8698550> != <pykickstart.commands.liveimg.F19_Liveimg object at 0x7feab86afcc0>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl > other.noverifyssl) and (self.checksum == other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_Gt", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_Gt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 2, "result-type": "normal"}, "14": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "occurrence": 1, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/liveimg.py\", line 41, in runTest\n    self.assertEqual(self.assert_parse(\"liveimg --url=http://one\"), self.assert_parse(\"liveimg --url=http://one\"))\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 858, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 848, in _baseAssertEqual\n    if not first == second:\n  File \"pykickstart.commands.liveimg\", line 41, in __eq__\nTypeError: unorderable types: NoneType() < NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url == other.url) and (self.proxy < other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_Lt", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 1, "result-type": "normal"}, "3": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "occurrence": 2, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/liveimg.py\", line 41, in runTest\n    self.assertEqual(self.assert_parse(\"liveimg --url=http://one\"), self.assert_parse(\"liveimg --url=http://one\"))\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 858, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 848, in _baseAssertEqual\n    if not first == second:\n  File \"pykickstart.commands.liveimg\", line 42, in __eq__\nTypeError: argument of type 'bool' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl in other.noverifyssl) and (self.checksum == other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_In", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_In", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 2, "result-type": "normal"}, "15": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "occurrence": 2, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/liveimg.py\", line 41, in runTest\n    self.assertEqual(self.assert_parse(\"liveimg --url=http://one\"), self.assert_parse(\"liveimg --url=http://one\"))\nAssertionError: <pykickstart.commands.liveimg.F19_Liveimg object at 0x7effd2a08080> != <pykickstart.commands.liveimg.F19_Liveimg object at 0x7effd2a6a0b8>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl < other.noverifyssl) and (self.checksum == other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_Lt", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_Lt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 2, "result-type": "normal"}, "38": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "occurrence": 2, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/liveimg.py\", line 41, in runTest\n    self.assertEqual(self.assert_parse(\"liveimg --url=http://one\"), self.assert_parse(\"liveimg --url=http://one\"))\nAssertionError: <pykickstart.commands.liveimg.F19_Liveimg object at 0x7f12ce3210b8> != <pykickstart.commands.liveimg.F19_Liveimg object at 0x7f12ce40a5c0>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl is not other.noverifyssl) and (self.checksum == other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_IsNot", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_IsNot", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 2, "result-type": "normal"}, "24": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "occurrence": 0, "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url >= other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_GtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 0, "result-type": "normal"}, "27": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "occurrence": 3, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/liveimg.py\", line 50, in runTest\n    self.assertNotEqual(self.assert_parse(\"liveimg --url=http://one --checksum=deadbeef\"), self.assert_parse(\"liveimg --url=http://one\"))\nAssertionError: <pykickstart.commands.liveimg.F19_Liveimg object at 0x7f7b6f471390> == <pykickstart.commands.liveimg.F19_Liveimg object at 0x7f7b6f5147b8>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum >= other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_GtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_GtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 3, "result-type": "normal"}, "17": {"result-data": [{"operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "occurrence": 0, "line_number": 39}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/liveimg.py\", line 53, in runTest\n    self.assertFalse(self.assert_parse(\"liveimg --url=http://one\") == None)\nAssertionError: True is not false\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -17,7 +17,7 @@", " ", "     def __eq__(self, other):", "         if (not other):", "-            return False", "+            return True", "         return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", " ", "     def __str__(self):"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "boolean_replacer", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "boolean_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 0, "result-type": "normal"}, "2": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "occurrence": 1, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/liveimg.py\", line 41, in runTest\n    self.assertEqual(self.assert_parse(\"liveimg --url=http://one\"), self.assert_parse(\"liveimg --url=http://one\"))\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 858, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 848, in _baseAssertEqual\n    if not first == second:\n  File \"pykickstart.commands.liveimg\", line 41, in __eq__\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url == other.url) and (self.proxy in other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_In", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 1, "result-type": "normal"}, "29": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "occurrence": 1, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/liveimg.py\", line 42, in runTest\n    self.assertEqual(self.assert_parse(\"liveimg --url=http://one --proxy=http://wherever\"), self.assert_parse(\"liveimg --url=http://one --proxy=http://wherever\"))\nAssertionError: <pykickstart.commands.liveimg.F19_Liveimg object at 0x7f1555481cf8> != <pykickstart.commands.liveimg.F19_Liveimg object at 0x7f15553e29b0>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url == other.url) and (self.proxy is other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_Is", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 1, "result-type": "normal"}, "4": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "occurrence": 3, "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum in other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_In", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_In", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 3, "result-type": "normal"}, "10": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "occurrence": 1, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/liveimg.py\", line 41, in runTest\n    self.assertEqual(self.assert_parse(\"liveimg --url=http://one\"), self.assert_parse(\"liveimg --url=http://one\"))\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 858, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 848, in _baseAssertEqual\n    if not first == second:\n  File \"pykickstart.commands.liveimg\", line 41, in __eq__\nTypeError: unorderable types: NoneType() <= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url == other.url) and (self.proxy <= other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_LtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 1, "result-type": "normal"}, "12": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "occurrence": 3, "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum <= other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_LtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_LtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 3, "result-type": "normal"}, "36": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "occurrence": 0, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/liveimg.py\", line 46, in runTest\n    self.assertNotEqual(self.assert_parse(\"liveimg --url=http://one\"), self.assert_parse(\"liveimg --url=http://two\"))\nAssertionError: <pykickstart.commands.liveimg.F19_Liveimg object at 0x7f1c8e670630> == <pykickstart.commands.liveimg.F19_Liveimg object at 0x7f1c8e6235c0>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url is not other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_IsNot", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 0, "result-type": "normal"}, "30": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "occurrence": 2, "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl is other.noverifyssl) and (self.checksum == other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_Is", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_Is", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 2, "result-type": "normal"}, "16": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "occurrence": 3, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/liveimg.py\", line 41, in runTest\n    self.assertEqual(self.assert_parse(\"liveimg --url=http://one\"), self.assert_parse(\"liveimg --url=http://one\"))\nAssertionError: <pykickstart.commands.liveimg.F19_Liveimg object at 0x7fce55c78828> != <pykickstart.commands.liveimg.F19_Liveimg object at 0x7fce55c2b240>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum < other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_Lt", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_Lt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 3, "result-type": "normal"}, "37": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "occurrence": 1, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/liveimg.py\", line 41, in runTest\n    self.assertEqual(self.assert_parse(\"liveimg --url=http://one\"), self.assert_parse(\"liveimg --url=http://one\"))\nAssertionError: <pykickstart.commands.liveimg.F19_Liveimg object at 0x7f37317aacc0> != <pykickstart.commands.liveimg.F19_Liveimg object at 0x7f37317583c8>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url == other.url) and (self.proxy is not other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_IsNot", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_IsNot", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 1, "result-type": "normal"}, "1": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "occurrence": 0, "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url in other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_In", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 0, "result-type": "normal"}, "6": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "occurrence": 1, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/liveimg.py\", line 41, in runTest\n    self.assertEqual(self.assert_parse(\"liveimg --url=http://one\"), self.assert_parse(\"liveimg --url=http://one\"))\nAssertionError: <pykickstart.commands.liveimg.F19_Liveimg object at 0x7f854a8952e8> != <pykickstart.commands.liveimg.F19_Liveimg object at 0x7f854a8452e8>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url == other.url) and (self.proxy != other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_NotEq", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 1, "result-type": "normal"}, "18": {"result-data": [{"operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "occurrence": 1, "line_number": 77}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/liveimg.py\", line 56, in runTest\n    self.assert_parse_error(\"liveimg\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -36,7 +36,7 @@", " ", "     def _getParser(self):", "         op = KSOptionParser(prog='liveimg', description='\\n            Install a disk image instead of packages. The image can be the\\n            squashfs.img from a Live iso, or any filesystem mountable by the\\n            install media (eg. ext4). Anaconda expects the image to contain\\n            utilities it needs to complete the system install so the best way to\\n            create one is to use livemedia-creator to make the disk image. If\\n            the image contains /LiveOS/*.img (this is how squashfs.img is\\n            structured) the first *img file inside LiveOS will be mounted and\\n            used to install the target system. The URL may also point to a\\n            tarfile of the root filesystem. The file must end in .tar, .tbz,\\n            .tgz, .txz, .tar.bz2, tar.gz, tar.xz', version=F19)", "-        op.add_argument('--url', metavar='<url>', required=True, version=F19, help='\\n                        The URL to install from. http, https, ftp and file are\\n                        supported.')", "+        op.add_argument('--url', metavar='<url>', required=False, version=F19, help='\\n                        The URL to install from. http, https, ftp and file are\\n                        supported.')", "         op.add_argument('--proxy', metavar='<proxyurl>', version=F19, help='\\n                        Specify an HTTP/HTTPS/FTP proxy to use while performing\\n                        the install. The various parts of the argument act like\\n                        you would expect. Syntax is::\\n\\n                        ``--proxy=[protocol://][username[:password]@]host[:port]``\\n                        ')", "         op.add_argument('--noverifyssl', action='store_true', version=F19, default=False, help=\"\\n                        For a tree on a HTTPS server do not check the server's\\n                        certificate with what well-known CA validate and do not\\n                        check the server's hostname matches the certificate's\\n                        domain name.\")", "         op.add_argument('--checksum', metavar='<sha256>', version=F19, help='Optional sha256 checksum of the image file')"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "boolean_replacer", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "boolean_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 1, "result-type": "normal"}, "23": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "occurrence": 3, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/liveimg.py\", line 41, in runTest\n    self.assertEqual(self.assert_parse(\"liveimg --url=http://one\"), self.assert_parse(\"liveimg --url=http://one\"))\nAssertionError: <pykickstart.commands.liveimg.F19_Liveimg object at 0x7f814d4b6438> != <pykickstart.commands.liveimg.F19_Liveimg object at 0x7f814d43a4e0>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum not in other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_NotIn", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_NotIn", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 3, "result-type": "normal"}, "22": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "occurrence": 2, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/liveimg.py\", line 41, in runTest\n    self.assertEqual(self.assert_parse(\"liveimg --url=http://one\"), self.assert_parse(\"liveimg --url=http://one\"))\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 858, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 848, in _baseAssertEqual\n    if not first == second:\n  File \"pykickstart.commands.liveimg\", line 42, in __eq__\nTypeError: argument of type 'bool' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl not in other.noverifyssl) and (self.checksum == other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_NotIn", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_NotIn", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 2, "result-type": "normal"}, "19": {"result-data": [{"operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "occurrence": 2, "line_number": 89}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/liveimg.py\", line 36, in runTest\n    \"liveimg --url=\\\"http://someplace/somewhere\\\" --proxy=\\\"http://wherever/other\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'live[24 chars]ace/somewhere\" --proxy=\"http://wherever/other\" --noverifyssl\\n' != 'live[24 chars]ace/somewhere\" --proxy=\"http://wherever/other\"\\n'\n- liveimg --url=\"http://someplace/somewhere\" --proxy=\"http://wherever/other\" --noverifyssl\n?                                                                           --------------\n+ liveimg --url=\"http://someplace/somewhere\" --proxy=\"http://wherever/other\"\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -38,7 +38,7 @@", "         op = KSOptionParser(prog='liveimg', description='\\n            Install a disk image instead of packages. The image can be the\\n            squashfs.img from a Live iso, or any filesystem mountable by the\\n            install media (eg. ext4). Anaconda expects the image to contain\\n            utilities it needs to complete the system install so the best way to\\n            create one is to use livemedia-creator to make the disk image. If\\n            the image contains /LiveOS/*.img (this is how squashfs.img is\\n            structured) the first *img file inside LiveOS will be mounted and\\n            used to install the target system. The URL may also point to a\\n            tarfile of the root filesystem. The file must end in .tar, .tbz,\\n            .tgz, .txz, .tar.bz2, tar.gz, tar.xz', version=F19)", "         op.add_argument('--url', metavar='<url>', required=True, version=F19, help='\\n                        The URL to install from. http, https, ftp and file are\\n                        supported.')", "         op.add_argument('--proxy', metavar='<proxyurl>', version=F19, help='\\n                        Specify an HTTP/HTTPS/FTP proxy to use while performing\\n                        the install. The various parts of the argument act like\\n                        you would expect. Syntax is::\\n\\n                        ``--proxy=[protocol://][username[:password]@]host[:port]``\\n                        ')", "-        op.add_argument('--noverifyssl', action='store_true', version=F19, default=False, help=\"\\n                        For a tree on a HTTPS server do not check the server's\\n                        certificate with what well-known CA validate and do not\\n                        check the server's hostname matches the certificate's\\n                        domain name.\")", "+        op.add_argument('--noverifyssl', action='store_true', version=F19, default=True, help=\"\\n                        For a tree on a HTTPS server do not check the server's\\n                        certificate with what well-known CA validate and do not\\n                        check the server's hostname matches the certificate's\\n                        domain name.\")", "         op.add_argument('--checksum', metavar='<sha256>', version=F19, help='Optional sha256 checksum of the image file')", "         return op", " "]]], "module-name": "pykickstart.commands.liveimg", "op-name": "boolean_replacer", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "boolean_replacer", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 2, "result-type": "normal"}, "5": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "occurrence": 0, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/liveimg.py\", line 41, in runTest\n    self.assertEqual(self.assert_parse(\"liveimg --url=http://one\"), self.assert_parse(\"liveimg --url=http://one\"))\nAssertionError: <pykickstart.commands.liveimg.F19_Liveimg object at 0x7f3aa970f278> != <pykickstart.commands.liveimg.F19_Liveimg object at 0x7f3aa96c3278>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url != other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_NotEq", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 0, "result-type": "normal"}, "31": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "occurrence": 3, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/liveimg.py\", line 44, in runTest\n    self.assertEqual(self.assert_parse(\"liveimg --url=http://one --checksum=deadbeef\"), self.assert_parse(\"liveimg --url=http://one --checksum=deadbeef\"))\nAssertionError: <pykickstart.commands.liveimg.F19_Liveimg object at 0x7f82b8a69f60> != <pykickstart.commands.liveimg.F19_Liveimg object at 0x7f82b89a32e8>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum is other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_Is", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_Is", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 3, "result-type": "normal"}, "35": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "occurrence": 3, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/liveimg.py\", line 41, in runTest\n    self.assertEqual(self.assert_parse(\"liveimg --url=http://one\"), self.assert_parse(\"liveimg --url=http://one\"))\nAssertionError: <pykickstart.commands.liveimg.F19_Liveimg object at 0x7fc03da10dd8> != <pykickstart.commands.liveimg.F19_Liveimg object at 0x7fc03d9c3eb8>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum > other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_Gt", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_Gt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 3, "result-type": "normal"}, "9": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "occurrence": 0, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/liveimg.py\", line 46, in runTest\n    self.assertNotEqual(self.assert_parse(\"liveimg --url=http://one\"), self.assert_parse(\"liveimg --url=http://two\"))\nAssertionError: <pykickstart.commands.liveimg.F19_Liveimg object at 0x7f80bf625c50> == <pykickstart.commands.liveimg.F19_Liveimg object at 0x7f80bf57b9e8>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url <= other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_LtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 0, "result-type": "normal"}, "25": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "occurrence": 1, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/liveimg.py\", line 41, in runTest\n    self.assertEqual(self.assert_parse(\"liveimg --url=http://one\"), self.assert_parse(\"liveimg --url=http://one\"))\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 858, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 848, in _baseAssertEqual\n    if not first == second:\n  File \"pykickstart.commands.liveimg\", line 41, in __eq__\nTypeError: unorderable types: NoneType() >= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url == other.url) and (self.proxy >= other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_GtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 1, "result-type": "normal"}, "7": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "occurrence": 2, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/liveimg.py\", line 41, in runTest\n    self.assertEqual(self.assert_parse(\"liveimg --url=http://one\"), self.assert_parse(\"liveimg --url=http://one\"))\nAssertionError: <pykickstart.commands.liveimg.F19_Liveimg object at 0x7f5e4137cb70> != <pykickstart.commands.liveimg.F19_Liveimg object at 0x7f5e4132f0f0>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl != other.noverifyssl) and (self.checksum == other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_NotEq", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_NotEq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 2, "result-type": "normal"}, "13": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "occurrence": 0, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/liveimg.py\", line 41, in runTest\n    self.assertEqual(self.assert_parse(\"liveimg --url=http://one\"), self.assert_parse(\"liveimg --url=http://one\"))\nAssertionError: <pykickstart.commands.liveimg.F19_Liveimg object at 0x7f757ba3d860> != <pykickstart.commands.liveimg.F19_Liveimg object at 0x7f757b9ec240>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url < other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_Lt", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 0, "result-type": "normal"}, "39": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "occurrence": 3, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/liveimg.py\", line 41, in runTest\n    self.assertEqual(self.assert_parse(\"liveimg --url=http://one\"), self.assert_parse(\"liveimg --url=http://one\"))\nAssertionError: <pykickstart.commands.liveimg.F19_Liveimg object at 0x7fee32418898> != <pykickstart.commands.liveimg.F19_Liveimg object at 0x7fee323c7780>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum is not other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_IsNot", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_IsNot", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 3, "result-type": "normal"}, "26": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "occurrence": 2, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/liveimg.py\", line 49, in runTest\n    self.assertNotEqual(self.assert_parse(\"liveimg --url=http://one --noverifyssl\"), self.assert_parse(\"liveimg --url=http://one\"))\nAssertionError: <pykickstart.commands.liveimg.F19_Liveimg object at 0x7fa357d4d588> == <pykickstart.commands.liveimg.F19_Liveimg object at 0x7fa357ceb2e8>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl >= other.noverifyssl) and (self.checksum == other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_GtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_GtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 2, "result-type": "normal"}, "33": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "occurrence": 1, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/liveimg.py\", line 41, in runTest\n    self.assertEqual(self.assert_parse(\"liveimg --url=http://one\"), self.assert_parse(\"liveimg --url=http://one\"))\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 858, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 848, in _baseAssertEqual\n    if not first == second:\n  File \"pykickstart.commands.liveimg\", line 41, in __eq__\nTypeError: unorderable types: NoneType() > NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url == other.url) and (self.proxy > other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_Gt", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 1, "result-type": "normal"}, "21": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "occurrence": 1, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/liveimg.py\", line 41, in runTest\n    self.assertEqual(self.assert_parse(\"liveimg --url=http://one\"), self.assert_parse(\"liveimg --url=http://one\"))\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 858, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 848, in _baseAssertEqual\n    if not first == second:\n  File \"pykickstart.commands.liveimg\", line 41, in __eq__\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url == other.url) and (self.proxy not in other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_NotIn", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 1, "result-type": "normal"}, "8": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "occurrence": 3, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/liveimg.py\", line 41, in runTest\n    self.assertEqual(self.assert_parse(\"liveimg --url=http://one\"), self.assert_parse(\"liveimg --url=http://one\"))\nAssertionError: <pykickstart.commands.liveimg.F19_Liveimg object at 0x7f5eb12bc6d8> != <pykickstart.commands.liveimg.F19_Liveimg object at 0x7f5eb126f668>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum != other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_NotEq", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_NotEq", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 3, "result-type": "normal"}, "28": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "occurrence": 0, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/liveimg.py\", line 41, in runTest\n    self.assertEqual(self.assert_parse(\"liveimg --url=http://one\"), self.assert_parse(\"liveimg --url=http://one\"))\nAssertionError: <pykickstart.commands.liveimg.F19_Liveimg object at 0x7fcd91cef358> != <pykickstart.commands.liveimg.F19_Liveimg object at 0x7fcd91c98ba8>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/liveimg.py", "@@ -18,7 +18,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.url == other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", "+        return ((self.url is other.url) and (self.proxy == other.proxy) and (self.noverifyssl == other.noverifyssl) and (self.checksum == other.checksum))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "module-name": "pykickstart.commands.liveimg", "op-name": "replace_Eq_with_Is", "command": ["cosmic-ray", "worker", "pykickstart.commands.liveimg", "replace_Eq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/liveimg.py"], "occurrence": 0, "result-type": "normal"}}}