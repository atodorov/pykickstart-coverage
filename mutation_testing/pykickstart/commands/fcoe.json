{"work-parameters": {"1": {"timeout": 11.99809, "test-args": ["-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/fcoe.py"], "test-runner": "nose"}}, "_default": {}, "work-items": {"23": {"occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.fcoe", "replace_Eq_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/fcoe.py"], "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 41, in runTest\n    self.assertNotEqual(self.assert_parse(\"fcoe --nic=eth0\"), None)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 864, in assertNotEqual\n    if not first != second:\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\nTypeError: unorderable types: F12_FcoeData() <= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "@@ -19,7 +19,7 @@", "         return (self.nic == y.nic)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self <= y))", " ", "     def _getArgsAsStr(self):", "         retval = ''"]]], "op-name": "replace_Eq_with_LtE", "module-name": "pykickstart.commands.fcoe", "result-type": "normal"}, "16": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.fcoe", "replace_Eq_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/fcoe.py"], "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nUserWarning: A FCOE device with the name eth1 has already been defined.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 61, in runTest\n    fcoe --nic=eth1\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \nfcoe --nic=eth0\nfcoe --nic=eth1: A FCOE device with the name eth1 has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "@@ -16,7 +16,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.nic == y.nic)", "+        return (self.nic != y.nic)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "op-name": "replace_Eq_with_NotEq", "module-name": "pykickstart.commands.fcoe", "result-type": "normal"}, "10": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.fcoe", "replace_In_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/fcoe.py"], "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nUserWarning: A FCOE device with the name eth0 has already been defined.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 61, in runTest\n    fcoe --nic=eth1\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \nfcoe --nic=eth0\nfcoe --nic=eth1: A FCOE device with the name eth0 has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "@@ -85,7 +85,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, zd)", "         zd.lineno = self.lineno", "-        if (zd in self.dataList()):", "+        if (zd not in self.dataList()):", "             warnings.warn((_('A FCOE device with the name %s has already been defined.') % zd.nic))", "         return zd", " "]]], "op-name": "replace_In_with_NotIn", "module-name": "pykickstart.commands.fcoe", "result-type": "normal"}, "25": {"occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.fcoe", "replace_Eq_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/fcoe.py"], "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 41, in runTest\n    self.assertNotEqual(self.assert_parse(\"fcoe --nic=eth0\"), None)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 864, in assertNotEqual\n    if not first != second:\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "@@ -19,7 +19,7 @@", "         return (self.nic == y.nic)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self in y))", " ", "     def _getArgsAsStr(self):", "         retval = ''"]]], "op-name": "replace_Eq_with_In", "module-name": "pykickstart.commands.fcoe", "result-type": "normal"}, "5": {"occurrence": 4, "command": ["cosmic-ray", "worker", "pykickstart.commands.fcoe", "boolean_replacer", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/fcoe.py"], "result-data": [{"occurrence": 4, "line_number": 136, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 69, in runTest\n    F12_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 30, in runTest\n    \"fcoe --nic=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'fcoe --nic=eth0 --dcb\\n' != 'fcoe --nic=eth0\\n'\n- fcoe --nic=eth0 --dcb\n?                ------\n+ fcoe --nic=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "@@ -102,7 +102,7 @@", " ", "     def _getParser(self):", "         op = F12_Fcoe._getParser(self)", "-        op.add_argument('--dcb', action='store_true', default=False, help='', version=F13)", "+        op.add_argument('--dcb', action='store_true', default=True, help='', version=F13)", "         return op", " ", " class RHEL7_Fcoe(F13_Fcoe):"]]], "op-name": "boolean_replacer", "module-name": "pykickstart.commands.fcoe", "result-type": "normal"}, "4": {"occurrence": 3, "command": ["cosmic-ray", "worker", "pykickstart.commands.fcoe", "boolean_replacer", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/fcoe.py"], "result-data": [{"occurrence": 3, "line_number": 107, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 33, in runTest\n    self.assert_parse_error(\"fcoe\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "@@ -77,7 +77,7 @@", " ", "     def _getParser(self):", "         op = KSOptionParser(prog='fcoe', description='', version=F12)", "-        op.add_argument('--nic', required=True, version=F12, help='')", "+        op.add_argument('--nic', required=False, version=F12, help='')", "         return op", " ", "     def parse(self, args):"]]], "op-name": "boolean_replacer", "module-name": "pykickstart.commands.fcoe", "result-type": "normal"}, "28": {"occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.fcoe", "replace_Eq_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/fcoe.py"], "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "@@ -19,7 +19,7 @@", "         return (self.nic == y.nic)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self is y))", " ", "     def _getArgsAsStr(self):", "         retval = ''"]]], "op-name": "replace_Eq_with_Is", "module-name": "pykickstart.commands.fcoe", "result-type": "normal"}, "17": {"occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.fcoe", "replace_Eq_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/fcoe.py"], "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 41, in runTest\n    self.assertNotEqual(self.assert_parse(\"fcoe --nic=eth0\"), None)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 864, in assertNotEqual\n    if not first != second:\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\nRecursionError: maximum recursion depth exceeded while calling a Python object\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "@@ -19,7 +19,7 @@", "         return (self.nic == y.nic)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self != y))", " ", "     def _getArgsAsStr(self):", "         retval = ''"]]], "op-name": "replace_Eq_with_NotEq", "module-name": "pykickstart.commands.fcoe", "result-type": "normal"}, "20": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.fcoe", "replace_Eq_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/fcoe.py"], "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nUserWarning: A FCOE device with the name eth1 has already been defined.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 61, in runTest\n    fcoe --nic=eth1\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \nfcoe --nic=eth0\nfcoe --nic=eth1: A FCOE device with the name eth1 has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "@@ -16,7 +16,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.nic == y.nic)", "+        return (self.nic is not y.nic)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "op-name": "replace_Eq_with_IsNot", "module-name": "pykickstart.commands.fcoe", "result-type": "normal"}, "31": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.fcoe", "replace_In_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/fcoe.py"], "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithGt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nTypeError: unorderable types: F12_FcoeData() > list()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 61, in runTest\n    fcoe --nic=eth1\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \nfcoe --nic=eth0\nfcoe --nic=eth1: unorderable types: F12_FcoeData() > list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "@@ -85,7 +85,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, zd)", "         zd.lineno = self.lineno", "-        if (zd in self.dataList()):", "+        if (zd > self.dataList()):", "             warnings.warn((_('A FCOE device with the name %s has already been defined.') % zd.nic))", "         return zd", " "]]], "op-name": "replace_In_with_Gt", "module-name": "pykickstart.commands.fcoe", "result-type": "normal"}, "34": {"occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.fcoe", "replace_Eq_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/fcoe.py"], "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 41, in runTest\n    self.assertNotEqual(self.assert_parse(\"fcoe --nic=eth0\"), None)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 864, in assertNotEqual\n    if not first != second:\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\nTypeError: unorderable types: F12_FcoeData() < NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "@@ -19,7 +19,7 @@", "         return (self.nic == y.nic)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self < y))", " ", "     def _getArgsAsStr(self):", "         retval = ''"]]], "op-name": "replace_Eq_with_Lt", "module-name": "pykickstart.commands.fcoe", "result-type": "normal"}, "7": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.fcoe", "replace_Eq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/fcoe.py"], "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nUserWarning: A FCOE device with the name eth1 has already been defined.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 61, in runTest\n    fcoe --nic=eth1\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \nfcoe --nic=eth0\nfcoe --nic=eth1: A FCOE device with the name eth1 has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "@@ -16,7 +16,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.nic == y.nic)", "+        return (self.nic not in y.nic)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "op-name": "replace_Eq_with_NotIn", "module-name": "pykickstart.commands.fcoe", "result-type": "normal"}, "18": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.fcoe", "replace_In_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/fcoe.py"], "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nTypeError: unorderable types: F12_FcoeData() >= list()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 61, in runTest\n    fcoe --nic=eth1\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \nfcoe --nic=eth0\nfcoe --nic=eth1: unorderable types: F12_FcoeData() >= list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "@@ -85,7 +85,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, zd)", "         zd.lineno = self.lineno", "-        if (zd in self.dataList()):", "+        if (zd >= self.dataList()):", "             warnings.warn((_('A FCOE device with the name %s has already been defined.') % zd.nic))", "         return zd", " "]]], "op-name": "replace_In_with_GtE", "module-name": "pykickstart.commands.fcoe", "result-type": "normal"}, "22": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.fcoe", "replace_Eq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/fcoe.py"], "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 42, in runTest\n    self.assertNotEqual(self.assert_parse(\"fcoe --nic=eth0\"), self.assert_parse(\"fcoe --nic=eth1\"))\nAssertionError: <pykickstart.commands.fcoe.F12_FcoeData object at 0x7f0cca1b1278> == <pykickstart.commands.fcoe.F12_FcoeData object at 0x7f0cca1328d0>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "@@ -16,7 +16,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.nic == y.nic)", "+        return (self.nic <= y.nic)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "op-name": "replace_Eq_with_LtE", "module-name": "pykickstart.commands.fcoe", "result-type": "normal"}, "32": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.fcoe", "replace_In_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/fcoe.py"], "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithNotEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nUserWarning: A FCOE device with the name eth0 has already been defined.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 61, in runTest\n    fcoe --nic=eth1\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \nfcoe --nic=eth0\nfcoe --nic=eth1: A FCOE device with the name eth0 has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "@@ -85,7 +85,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, zd)", "         zd.lineno = self.lineno", "-        if (zd in self.dataList()):", "+        if (zd != self.dataList()):", "             warnings.warn((_('A FCOE device with the name %s has already been defined.') % zd.nic))", "         return zd", " "]]], "op-name": "replace_In_with_NotEq", "module-name": "pykickstart.commands.fcoe", "result-type": "normal"}, "29": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.fcoe", "replace_In_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/fcoe.py"], "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nTypeError: unorderable types: F12_FcoeData() <= list()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 61, in runTest\n    fcoe --nic=eth1\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \nfcoe --nic=eth0\nfcoe --nic=eth1: unorderable types: F12_FcoeData() <= list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "@@ -85,7 +85,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, zd)", "         zd.lineno = self.lineno", "-        if (zd in self.dataList()):", "+        if (zd <= self.dataList()):", "             warnings.warn((_('A FCOE device with the name %s has already been defined.') % zd.nic))", "         return zd", " "]]], "op-name": "replace_In_with_LtE", "module-name": "pykickstart.commands.fcoe", "result-type": "normal"}, "19": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.fcoe", "replace_In_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/fcoe.py"], "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nTypeError: unorderable types: F12_FcoeData() < list()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 61, in runTest\n    fcoe --nic=eth1\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \nfcoe --nic=eth0\nfcoe --nic=eth1: unorderable types: F12_FcoeData() < list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "@@ -85,7 +85,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, zd)", "         zd.lineno = self.lineno", "-        if (zd in self.dataList()):", "+        if (zd < self.dataList()):", "             warnings.warn((_('A FCOE device with the name %s has already been defined.') % zd.nic))", "         return zd", " "]]], "op-name": "replace_In_with_Lt", "module-name": "pykickstart.commands.fcoe", "result-type": "normal"}, "9": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.fcoe", "replace_In_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/fcoe.py"], "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithIsNot"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nUserWarning: A FCOE device with the name eth0 has already been defined.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 61, in runTest\n    fcoe --nic=eth1\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \nfcoe --nic=eth0\nfcoe --nic=eth1: A FCOE device with the name eth0 has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "@@ -85,7 +85,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, zd)", "         zd.lineno = self.lineno", "-        if (zd in self.dataList()):", "+        if (zd is not self.dataList()):", "             warnings.warn((_('A FCOE device with the name %s has already been defined.') % zd.nic))", "         return zd", " "]]], "op-name": "replace_In_with_IsNot", "module-name": "pykickstart.commands.fcoe", "result-type": "normal"}, "14": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.fcoe", "replace_Eq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/fcoe.py"], "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nUserWarning: A FCOE device with the name eth1 has already been defined.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 61, in runTest\n    fcoe --nic=eth1\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \nfcoe --nic=eth0\nfcoe --nic=eth1: A FCOE device with the name eth1 has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "@@ -16,7 +16,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.nic == y.nic)", "+        return (self.nic >= y.nic)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "op-name": "replace_Eq_with_GtE", "module-name": "pykickstart.commands.fcoe", "result-type": "normal"}, "13": {"occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.fcoe", "replace_Eq_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/fcoe.py"], "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 41, in runTest\n    self.assertNotEqual(self.assert_parse(\"fcoe --nic=eth0\"), None)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 864, in assertNotEqual\n    if not first != second:\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\nTypeError: unorderable types: F12_FcoeData() > NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "@@ -19,7 +19,7 @@", "         return (self.nic == y.nic)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self > y))", " ", "     def _getArgsAsStr(self):", "         retval = ''"]]], "op-name": "replace_Eq_with_Gt", "module-name": "pykickstart.commands.fcoe", "result-type": "normal"}, "15": {"occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.fcoe", "replace_Eq_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/fcoe.py"], "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 41, in runTest\n    self.assertNotEqual(self.assert_parse(\"fcoe --nic=eth0\"), None)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 864, in assertNotEqual\n    if not first != second:\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\nTypeError: unorderable types: F12_FcoeData() >= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "@@ -19,7 +19,7 @@", "         return (self.nic == y.nic)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self >= y))", " ", "     def _getArgsAsStr(self):", "         retval = ''"]]], "op-name": "replace_Eq_with_GtE", "module-name": "pykickstart.commands.fcoe", "result-type": "normal"}, "24": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.fcoe", "replace_Eq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/fcoe.py"], "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "@@ -16,7 +16,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.nic == y.nic)", "+        return (self.nic in y.nic)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "op-name": "replace_Eq_with_In", "module-name": "pykickstart.commands.fcoe", "result-type": "normal"}, "21": {"occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.fcoe", "replace_Eq_with_IsNot", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/fcoe.py"], "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 41, in runTest\n    self.assertNotEqual(self.assert_parse(\"fcoe --nic=eth0\"), None)\nAssertionError: <pykickstart.commands.fcoe.F12_FcoeData object at 0x7feffeba2668> == None\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "@@ -19,7 +19,7 @@", "         return (self.nic == y.nic)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self is not y))", " ", "     def _getArgsAsStr(self):", "         retval = ''"]]], "op-name": "replace_Eq_with_IsNot", "module-name": "pykickstart.commands.fcoe", "result-type": "normal"}, "30": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.fcoe", "replace_In_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/fcoe.py"], "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 65, in runTest\n    fcoe --nic=eth0\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "@@ -85,7 +85,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, zd)", "         zd.lineno = self.lineno", "-        if (zd in self.dataList()):", "+        if (zd is self.dataList()):", "             warnings.warn((_('A FCOE device with the name %s has already been defined.') % zd.nic))", "         return zd", " "]]], "op-name": "replace_In_with_Is", "module-name": "pykickstart.commands.fcoe", "result-type": "normal"}, "6": {"occurrence": 5, "command": ["cosmic-ray", "worker", "pykickstart.commands.fcoe", "boolean_replacer", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/fcoe.py"], "result-data": [{"occurrence": 5, "line_number": 146, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 76, in runTest\n    F13_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 69, in runTest\n    F12_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 30, in runTest\n    \"fcoe --nic=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'fcoe --nic=eth0 --autovlan\\n' != 'fcoe --nic=eth0\\n'\n- fcoe --nic=eth0 --autovlan\n+ fcoe --nic=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "@@ -111,6 +111,6 @@", " ", "     def _getParser(self):", "         op = F13_Fcoe._getParser(self)", "-        op.add_argument('--autovlan', action='store_true', default=False, help='', version=RHEL7)", "+        op.add_argument('--autovlan', action='store_true', default=True, help='', version=RHEL7)", "         return op", " "]]], "op-name": "boolean_replacer", "module-name": "pykickstart.commands.fcoe", "result-type": "normal"}, "3": {"occurrence": 2, "command": ["cosmic-ray", "worker", "pykickstart.commands.fcoe", "boolean_replacer", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/fcoe.py"], "result-data": [{"occurrence": 2, "line_number": 79, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 76, in runTest\n    F13_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 69, in runTest\n    F12_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 51, in runTest\n    self.assertEqual(data._getArgsAsStr(), \"\")\nAssertionError: ' --autovlan' != ''\n-  --autovlan\n+ \n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "@@ -52,7 +52,7 @@", " ", "     def __init__(self, *args, **kwargs):", "         F13_FcoeData.__init__(self, *args, **kwargs)", "-        self.autovlan = kwargs.get('autovlan', False)", "+        self.autovlan = kwargs.get('autovlan', True)", " ", "     def _getArgsAsStr(self):", "         retval = F13_FcoeData._getArgsAsStr(self)"]]], "op-name": "boolean_replacer", "module-name": "pykickstart.commands.fcoe", "result-type": "normal"}, "27": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.fcoe", "replace_Eq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/fcoe.py"], "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 65, in runTest\n    fcoe --nic=eth0\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "@@ -16,7 +16,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.nic == y.nic)", "+        return (self.nic is y.nic)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "op-name": "replace_Eq_with_Is", "module-name": "pykickstart.commands.fcoe", "result-type": "normal"}, "26": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.fcoe", "replace_In_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/fcoe.py"], "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nAttributeError: 'list' object has no attribute 'nic'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 61, in runTest\n    fcoe --nic=eth1\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \nfcoe --nic=eth0\nfcoe --nic=eth1: 'list' object has no attribute 'nic'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "@@ -85,7 +85,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, zd)", "         zd.lineno = self.lineno", "-        if (zd in self.dataList()):", "+        if (zd == self.dataList()):", "             warnings.warn((_('A FCOE device with the name %s has already been defined.') % zd.nic))", "         return zd", " "]]], "op-name": "replace_In_with_Eq", "module-name": "pykickstart.commands.fcoe", "result-type": "normal"}, "33": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.fcoe", "replace_Eq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/fcoe.py"], "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 65, in runTest\n    fcoe --nic=eth0\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "@@ -16,7 +16,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.nic == y.nic)", "+        return (self.nic < y.nic)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "op-name": "replace_Eq_with_Lt", "module-name": "pykickstart.commands.fcoe", "result-type": "normal"}, "12": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.fcoe", "replace_Eq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/fcoe.py"], "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nUserWarning: A FCOE device with the name eth1 has already been defined.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 61, in runTest\n    fcoe --nic=eth1\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \nfcoe --nic=eth0\nfcoe --nic=eth1: A FCOE device with the name eth1 has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "@@ -16,7 +16,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.nic == y.nic)", "+        return (self.nic > y.nic)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "op-name": "replace_Eq_with_Gt", "module-name": "pykickstart.commands.fcoe", "result-type": "normal"}, "11": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.fcoe", "number_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/fcoe.py"], "result-data": [{"occurrence": 0, "line_number": 93, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "@@ -64,7 +64,7 @@", "     removedKeywords = KickstartCommand.removedKeywords", "     removedAttrs = KickstartCommand.removedAttrs", " ", "-    def __init__(self, writePriority=71, *args, **kwargs):", "+    def __init__(self, writePriority=72, *args, **kwargs):", "         KickstartCommand.__init__(self, writePriority, *args, **kwargs)", "         self.op = self._getParser()", "         self.fcoe = kwargs.get('fcoe', [])"]]], "op-name": "number_replacer", "module-name": "pykickstart.commands.fcoe", "result-type": "normal"}, "8": {"occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.fcoe", "replace_Eq_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/fcoe.py"], "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 41, in runTest\n    self.assertNotEqual(self.assert_parse(\"fcoe --nic=eth0\"), None)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 864, in assertNotEqual\n    if not first != second:\n  File \"pykickstart.commands.fcoe\", line 42, in __ne__\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "@@ -19,7 +19,7 @@", "         return (self.nic == y.nic)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self not in y))", " ", "     def _getArgsAsStr(self):", "         retval = ''"]]], "op-name": "replace_Eq_with_NotIn", "module-name": "pykickstart.commands.fcoe", "result-type": "normal"}, "2": {"occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.fcoe", "boolean_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/fcoe.py"], "result-data": [{"occurrence": 1, "line_number": 63, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 69, in runTest\n    F12_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 51, in runTest\n    self.assertEqual(data._getArgsAsStr(), \"\")\nAssertionError: ' --dcb' != ''\n-  --dcb\n+ \n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "@@ -38,7 +38,7 @@", " ", "     def __init__(self, *args, **kwargs):", "         F12_FcoeData.__init__(self, *args, **kwargs)", "-        self.dcb = kwargs.get('dcb', False)", "+        self.dcb = kwargs.get('dcb', True)", " ", "     def _getArgsAsStr(self):", "         retval = F12_FcoeData._getArgsAsStr(self)"]]], "op-name": "boolean_replacer", "module-name": "pykickstart.commands.fcoe", "result-type": "normal"}, "1": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.fcoe", "boolean_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/fcoe.py"], "result-data": [{"occurrence": 0, "line_number": 37, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/fcoe.py\", line 41, in runTest\n    self.assertNotEqual(self.assert_parse(\"fcoe --nic=eth0\"), None)\nAssertionError: <pykickstart.commands.fcoe.F12_FcoeData object at 0x7fb79acc2f28> == None\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/fcoe.py", "@@ -15,7 +15,7 @@", " ", "     def __eq__(self, y):", "         if (not y):", "-            return False", "+            return True", "         return (self.nic == y.nic)", " ", "     def __ne__(self, y):"]]], "op-name": "boolean_replacer", "module-name": "pykickstart.commands.fcoe", "result-type": "normal"}}}