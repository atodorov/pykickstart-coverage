{"work-items": {"3": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 57, in runTest\n    self.assert_parse(\"url --url=http://domain.com --proxy=http://proxy.com\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -49,7 +49,7 @@", "     def __eq__(self, other):", "         if (not FC3_Url.__eq__(self, other)):", "             return False", "-        return (self.proxy == other.proxy)", "+        return (self.proxy < other.proxy)", " ", "     def __str__(self):", "         retval = FC3_Url.__str__(self)"]]], "op-name": "replace_Eq_with_Lt", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_Lt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 2, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "31": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 86, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 69, in runTest\n    F13_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 57, in runTest\n    self.assert_parse(\"url --url=http://domain.com --proxy=http://proxy.com\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -102,7 +102,7 @@", "     def __eq__(self, other):", "         if (not F14_Url.__eq__(self, other)):", "             return False", "-        return (self.mirrorlist == other.mirrorlist)", "+        return (self.mirrorlist != other.mirrorlist)", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "op-name": "replace_Eq_with_NotEq", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_NotEq", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 4, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "12": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 50, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 33, in runTest\n    self.assert_parse(\"url --url=http://domainB.com\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -17,7 +17,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return (self.url == other.url)", "+        return (self.url is not other.url)", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]], "op-name": "replace_Eq_with_IsNot", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 0, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "17": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 57, in runTest\n    self.assert_parse(\"url --url=http://domain.com --proxy=http://proxy.com\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -17,7 +17,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return (self.url == other.url)", "+        return (self.url is other.url)", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]], "op-name": "replace_Eq_with_Is", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 0, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "36": {"result-data": [{"operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 113, "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 69, in runTest\n    F13_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 50, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 33, in runTest\n    self.assert_parse(\"url --url=http://domainB.com\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -73,7 +73,7 @@", " ", "     def __eq__(self, other):", "         if (not F13_Url.__eq__(self, other)):", "-            return False", "+            return True", "         return (self.noverifyssl == other.noverifyssl)", " ", "     def __str__(self):"]]], "op-name": "boolean_replacer", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "boolean_replacer", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 4, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "2": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 50, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 33, in runTest\n    self.assert_parse(\"url --url=http://domainB.com\"))\n  File \"pykickstart.commands.url\", line 44, in __ne__\nTypeError: unorderable types: F13_Url() < F13_Url()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -20,7 +20,7 @@", "         return (self.url == other.url)", " ", "     def __ne__(self, other):", "-        return (not (self == other))", "+        return (not (self < other))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "op-name": "replace_Eq_with_Lt", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 1, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "16": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 86, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 69, in runTest\n    F13_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 57, in runTest\n    self.assert_parse(\"url --url=http://domain.com --proxy=http://proxy.com\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -102,7 +102,7 @@", "     def __eq__(self, other):", "         if (not F14_Url.__eq__(self, other)):", "             return False", "-        return (self.mirrorlist == other.mirrorlist)", "+        return (self.mirrorlist is not other.mirrorlist)", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "op-name": "replace_Eq_with_IsNot", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_IsNot", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 4, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "4": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 69, in runTest\n    F13_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 57, in runTest\n    self.assert_parse(\"url --url=http://domain.com --proxy=http://proxy.com\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -74,7 +74,7 @@", "     def __eq__(self, other):", "         if (not F13_Url.__eq__(self, other)):", "             return False", "-        return (self.noverifyssl == other.noverifyssl)", "+        return (self.noverifyssl < other.noverifyssl)", " ", "     def __str__(self):", "         retval = F13_Url.__str__(self)"]]], "op-name": "replace_Eq_with_Lt", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_Lt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 3, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "8": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 50, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 33, in runTest\n    self.assert_parse(\"url --url=http://domainB.com\"))\n  File \"pykickstart.commands.url\", line 44, in __ne__\nTypeError: unorderable types: F13_Url() <= F13_Url()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -20,7 +20,7 @@", "         return (self.url == other.url)", " ", "     def __ne__(self, other):", "-        return (not (self == other))", "+        return (not (self <= other))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "op-name": "replace_Eq_with_LtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 1, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "26": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 86, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 69, in runTest\n    F13_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 57, in runTest\n    self.assert_parse(\"url --url=http://domain.com --proxy=http://proxy.com\"))\n  File \"pykickstart.commands.url\", line 151, in __eq__\nTypeError: unorderable types: NoneType() > NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -102,7 +102,7 @@", "     def __eq__(self, other):", "         if (not F14_Url.__eq__(self, other)):", "             return False", "-        return (self.mirrorlist == other.mirrorlist)", "+        return (self.mirrorlist > other.mirrorlist)", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "op-name": "replace_Eq_with_Gt", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_Gt", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 4, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "24": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 57, in runTest\n    self.assert_parse(\"url --url=http://domain.com --proxy=http://proxy.com\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -49,7 +49,7 @@", "     def __eq__(self, other):", "         if (not FC3_Url.__eq__(self, other)):", "             return False", "-        return (self.proxy == other.proxy)", "+        return (self.proxy > other.proxy)", " ", "     def __str__(self):", "         retval = FC3_Url.__str__(self)"]]], "op-name": "replace_Eq_with_Gt", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_Gt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 2, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "38": {"result-data": [{"operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 149, "occurrence": 6}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 86, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 69, in runTest\n    F13_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 50, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 33, in runTest\n    self.assert_parse(\"url --url=http://domainB.com\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -101,7 +101,7 @@", " ", "     def __eq__(self, other):", "         if (not F14_Url.__eq__(self, other)):", "-            return False", "+            return True", "         return (self.mirrorlist == other.mirrorlist)", " ", "     def __str__(self):"]]], "op-name": "boolean_replacer", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "boolean_replacer", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 6, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "22": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 57, in runTest\n    self.assert_parse(\"url --url=http://domain.com --proxy=http://proxy.com\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -17,7 +17,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return (self.url == other.url)", "+        return (self.url > other.url)", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]], "op-name": "replace_Eq_with_Gt", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 0, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "18": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -20,7 +20,7 @@", "         return (self.url == other.url)", " ", "     def __ne__(self, other):", "-        return (not (self == other))", "+        return (not (self is other))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "op-name": "replace_Eq_with_Is", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 1, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "35": {"result-data": [{"operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 109, "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 113, in runTest\n    self.assertEqual(cmd.__str__(), \"# Use network installation\\n\\n\")\nAssertionError: '# Use network installation\\n --noverifyssl\\n' != '# Use network installation\\n\\n'\n  # Use network installation\n-  --noverifyssl\n+ \n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -69,7 +69,7 @@", " ", "     def __init__(self, *args, **kwargs):", "         F13_Url.__init__(self, *args, **kwargs)", "-        self.noverifyssl = kwargs.get('noverifyssl', False)", "+        self.noverifyssl = kwargs.get('noverifyssl', True)", " ", "     def __eq__(self, other):", "         if (not F13_Url.__eq__(self, other)):"]]], "op-name": "boolean_replacer", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "boolean_replacer", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 3, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "51": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -49,7 +49,7 @@", "     def __eq__(self, other):", "         if (not FC3_Url.__eq__(self, other)):", "             return False", "-        return (self.proxy == other.proxy)", "+        return (self.proxy in other.proxy)", " ", "     def __str__(self):", "         retval = FC3_Url.__str__(self)"]]], "op-name": "replace_Eq_with_In", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_In", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 2, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "37": {"result-data": [{"operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 129, "occurrence": 5}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 69, in runTest\n    F13_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 50, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 29, in runTest\n    self.assert_parse(\"url --url=http://domain.com\", \"url --url=\\\"http://domain.com\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'url --url=\"http://domain.com\" --noverifyssl\\n' != 'url --url=\"http://domain.com\"\\n'\n- url --url=\"http://domain.com\" --noverifyssl\n?                              --------------\n+ url --url=\"http://domain.com\"\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -85,7 +85,7 @@", " ", "     def _getParser(self):", "         op = F13_Url._getParser(self)", "-        op.add_argument('--noverifyssl', action='store_true', version=F14, default=False, help=\"\\n                        For a tree on a HTTPS server do not check the server's\\n                        certificate with what well-known CA validate and do not\\n                        check the server's hostname matches the certificate's\\n                        domain name.\")", "+        op.add_argument('--noverifyssl', action='store_true', version=F14, default=True, help=\"\\n                        For a tree on a HTTPS server do not check the server's\\n                        certificate with what well-known CA validate and do not\\n                        check the server's hostname matches the certificate's\\n                        domain name.\")", "         return op", " ", " class RHEL6_Url(F14_Url):"]]], "op-name": "boolean_replacer", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "boolean_replacer", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 5, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "9": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 59, in runTest\n    self.assert_parse(\"url --url=http://domain.com --proxy=http://proxyB.com\"))\nAssertionError: True is not false\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -49,7 +49,7 @@", "     def __eq__(self, other):", "         if (not FC3_Url.__eq__(self, other)):", "             return False", "-        return (self.proxy == other.proxy)", "+        return (self.proxy <= other.proxy)", " ", "     def __str__(self):", "         retval = FC3_Url.__str__(self)"]]], "op-name": "replace_Eq_with_LtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_LtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 2, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "14": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 59, in runTest\n    self.assert_parse(\"url --url=http://domain.com --proxy=http://proxyB.com\"))\nAssertionError: True is not false\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -49,7 +49,7 @@", "     def __eq__(self, other):", "         if (not FC3_Url.__eq__(self, other)):", "             return False", "-        return (self.proxy == other.proxy)", "+        return (self.proxy is not other.proxy)", " ", "     def __str__(self):", "         retval = FC3_Url.__str__(self)"]]], "op-name": "replace_Eq_with_IsNot", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_IsNot", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 2, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "34": {"result-data": [{"operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 78, "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 50, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 33, in runTest\n    self.assert_parse(\"url --url=http://domainB.com\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -48,7 +48,7 @@", " ", "     def __eq__(self, other):", "         if (not FC3_Url.__eq__(self, other)):", "-            return False", "+            return True", "         return (self.proxy == other.proxy)", " ", "     def __str__(self):"]]], "op-name": "boolean_replacer", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "boolean_replacer", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 2, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "20": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -74,7 +74,7 @@", "     def __eq__(self, other):", "         if (not F13_Url.__eq__(self, other)):", "             return False", "-        return (self.noverifyssl == other.noverifyssl)", "+        return (self.noverifyssl is other.noverifyssl)", " ", "     def __str__(self):", "         retval = F13_Url.__str__(self)"]]], "op-name": "replace_Eq_with_Is", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_Is", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 3, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "33": {"result-data": [{"operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 58, "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 50, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 39, in runTest\n    self.assert_parse_error(\"url\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -30,7 +30,7 @@", " ", "     def _getParser(self):", "         op = KSOptionParser(prog='url', description='\\n                            Install from an installation tree on a remote server\\n                            via FTP or HTTP.', version=FC3)", "-        op.add_argument('--url', required=True, version=FC3, help='\\n                        The URL to install from. Variable substitution is done\\n                        for $releasever and $basearch in the url.')", "+        op.add_argument('--url', required=False, version=FC3, help='\\n                        The URL to install from. Variable substitution is done\\n                        for $releasever and $basearch in the url.')", "         return op", " ", "     def parse(self, args):"]]], "op-name": "boolean_replacer", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "boolean_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 1, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "48": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 86, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 69, in runTest\n    F13_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 57, in runTest\n    self.assert_parse(\"url --url=http://domain.com --proxy=http://proxy.com\"))\n  File \"pykickstart.commands.url\", line 151, in __eq__\nTypeError: unorderable types: NoneType() >= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -102,7 +102,7 @@", "     def __eq__(self, other):", "         if (not F14_Url.__eq__(self, other)):", "             return False", "-        return (self.mirrorlist == other.mirrorlist)", "+        return (self.mirrorlist >= other.mirrorlist)", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "op-name": "replace_Eq_with_GtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_GtE", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 4, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "49": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 93, in runTest\n    self.assert_parse(\"url --mirrorlist=https://domain.com\"))\n  File \"pykickstart.commands.url\", line 148, in __eq__\n  File \"pykickstart.commands.url\", line 112, in __eq__\n  File \"pykickstart.commands.url\", line 77, in __eq__\n  File \"pykickstart.commands.url\", line 41, in __eq__\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -17,7 +17,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return (self.url == other.url)", "+        return (self.url in other.url)", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]], "op-name": "replace_Eq_with_In", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 0, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "53": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 86, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 69, in runTest\n    F13_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 57, in runTest\n    self.assert_parse(\"url --url=http://domain.com --proxy=http://proxy.com\"))\n  File \"pykickstart.commands.url\", line 151, in __eq__\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -102,7 +102,7 @@", "     def __eq__(self, other):", "         if (not F14_Url.__eq__(self, other)):", "             return False", "-        return (self.mirrorlist == other.mirrorlist)", "+        return (self.mirrorlist in other.mirrorlist)", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "op-name": "replace_Eq_with_In", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_In", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 4, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "40": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 50, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 33, in runTest\n    self.assert_parse(\"url --url=http://domainB.com\"))\n  File \"pykickstart.commands.url\", line 44, in __ne__\nTypeError: argument of type 'F13_Url' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -20,7 +20,7 @@", "         return (self.url == other.url)", " ", "     def __ne__(self, other):", "-        return (not (self == other))", "+        return (not (self not in other))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "op-name": "replace_Eq_with_NotIn", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 1, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "19": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 57, in runTest\n    self.assert_parse(\"url --url=http://domain.com --proxy=http://proxy.com\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -49,7 +49,7 @@", "     def __eq__(self, other):", "         if (not FC3_Url.__eq__(self, other)):", "             return False", "-        return (self.proxy == other.proxy)", "+        return (self.proxy is other.proxy)", " ", "     def __str__(self):", "         retval = FC3_Url.__str__(self)"]]], "op-name": "replace_Eq_with_Is", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_Is", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 2, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "30": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 69, in runTest\n    F13_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 57, in runTest\n    self.assert_parse(\"url --url=http://domain.com --proxy=http://proxy.com\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -74,7 +74,7 @@", "     def __eq__(self, other):", "         if (not F13_Url.__eq__(self, other)):", "             return False", "-        return (self.noverifyssl == other.noverifyssl)", "+        return (self.noverifyssl != other.noverifyssl)", " ", "     def __str__(self):", "         retval = F13_Url.__str__(self)"]]], "op-name": "replace_Eq_with_NotEq", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_NotEq", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 3, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "10": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 78, in runTest\n    self.assert_parse(\"url --url=https://domain.com --noverifyssl\"))\nAssertionError: True is not false\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -74,7 +74,7 @@", "     def __eq__(self, other):", "         if (not F13_Url.__eq__(self, other)):", "             return False", "-        return (self.noverifyssl == other.noverifyssl)", "+        return (self.noverifyssl <= other.noverifyssl)", " ", "     def __str__(self):", "         retval = F13_Url.__str__(self)"]]], "op-name": "replace_Eq_with_LtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_LtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 3, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "28": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 50, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 33, in runTest\n    self.assert_parse(\"url --url=http://domainB.com\"))\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\n  File \"pykickstart.commands.url\", line 44, in __ne__\nRecursionError: maximum recursion depth exceeded while calling a Python object\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -20,7 +20,7 @@", "         return (self.url == other.url)", " ", "     def __ne__(self, other):", "-        return (not (self == other))", "+        return (not (self != other))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "op-name": "replace_Eq_with_NotEq", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 1, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "15": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 69, in runTest\n    F13_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 57, in runTest\n    self.assert_parse(\"url --url=http://domain.com --proxy=http://proxy.com\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -74,7 +74,7 @@", "     def __eq__(self, other):", "         if (not F13_Url.__eq__(self, other)):", "             return False", "-        return (self.noverifyssl == other.noverifyssl)", "+        return (self.noverifyssl is not other.noverifyssl)", " ", "     def __str__(self):", "         retval = F13_Url.__str__(self)"]]], "op-name": "replace_Eq_with_IsNot", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_IsNot", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 3, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "21": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 93, in runTest\n    self.assert_parse(\"url --mirrorlist=https://domain.com\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -102,7 +102,7 @@", "     def __eq__(self, other):", "         if (not F14_Url.__eq__(self, other)):", "             return False", "-        return (self.mirrorlist == other.mirrorlist)", "+        return (self.mirrorlist is other.mirrorlist)", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "op-name": "replace_Eq_with_Is", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_Is", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 4, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "27": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 50, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 33, in runTest\n    self.assert_parse(\"url --url=http://domainB.com\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -17,7 +17,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return (self.url == other.url)", "+        return (self.url != other.url)", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]], "op-name": "replace_Eq_with_NotEq", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 0, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "45": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 50, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 33, in runTest\n    self.assert_parse(\"url --url=http://domainB.com\"))\n  File \"pykickstart.commands.url\", line 44, in __ne__\nTypeError: unorderable types: F13_Url() >= F13_Url()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -20,7 +20,7 @@", "         return (self.url == other.url)", " ", "     def __ne__(self, other):", "-        return (not (self == other))", "+        return (not (self >= other))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "op-name": "replace_Eq_with_GtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 1, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "7": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 50, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 33, in runTest\n    self.assert_parse(\"url --url=http://domainB.com\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -17,7 +17,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return (self.url == other.url)", "+        return (self.url <= other.url)", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]], "op-name": "replace_Eq_with_LtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 0, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "47": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -74,7 +74,7 @@", "     def __eq__(self, other):", "         if (not F13_Url.__eq__(self, other)):", "             return False", "-        return (self.noverifyssl == other.noverifyssl)", "+        return (self.noverifyssl >= other.noverifyssl)", " ", "     def __str__(self):", "         retval = F13_Url.__str__(self)"]]], "op-name": "replace_Eq_with_GtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_GtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 3, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "32": {"result-data": [{"operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 39, "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -16,7 +16,7 @@", " ", "     def __eq__(self, other):", "         if (not other):", "-            return False", "+            return True", "         return (self.url == other.url)", " ", "     def __ne__(self, other):"]]], "op-name": "boolean_replacer", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "boolean_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 0, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "42": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 69, in runTest\n    F13_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 57, in runTest\n    self.assert_parse(\"url --url=http://domain.com --proxy=http://proxy.com\"))\n  File \"pykickstart.commands.url\", line 115, in __eq__\nTypeError: argument of type 'bool' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -74,7 +74,7 @@", "     def __eq__(self, other):", "         if (not F13_Url.__eq__(self, other)):", "             return False", "-        return (self.noverifyssl == other.noverifyssl)", "+        return (self.noverifyssl not in other.noverifyssl)", " ", "     def __str__(self):", "         retval = F13_Url.__str__(self)"]]], "op-name": "replace_Eq_with_NotIn", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_NotIn", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 3, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "25": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 69, in runTest\n    F13_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 57, in runTest\n    self.assert_parse(\"url --url=http://domain.com --proxy=http://proxy.com\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -74,7 +74,7 @@", "     def __eq__(self, other):", "         if (not F13_Url.__eq__(self, other)):", "             return False", "-        return (self.noverifyssl == other.noverifyssl)", "+        return (self.noverifyssl > other.noverifyssl)", " ", "     def __str__(self):", "         retval = F13_Url.__str__(self)"]]], "op-name": "replace_Eq_with_Gt", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_Gt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 3, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "11": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 86, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 69, in runTest\n    F13_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 57, in runTest\n    self.assert_parse(\"url --url=http://domain.com --proxy=http://proxy.com\"))\n  File \"pykickstart.commands.url\", line 151, in __eq__\nTypeError: unorderable types: NoneType() <= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -102,7 +102,7 @@", "     def __eq__(self, other):", "         if (not F14_Url.__eq__(self, other)):", "             return False", "-        return (self.mirrorlist == other.mirrorlist)", "+        return (self.mirrorlist <= other.mirrorlist)", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "op-name": "replace_Eq_with_LtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_LtE", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 4, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "6": {"result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 31, "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -9,7 +9,7 @@", "     removedKeywords = KickstartCommand.removedKeywords", "     removedAttrs = KickstartCommand.removedAttrs", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         KickstartCommand.__init__(self, writePriority, *args, **kwargs)", "         self.url = kwargs.get('url', None)", "         self.op = self._getParser()"]]], "op-name": "number_replacer", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "number_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 0, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "44": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 93, in runTest\n    self.assert_parse(\"url --mirrorlist=https://domain.com\"))\n  File \"pykickstart.commands.url\", line 148, in __eq__\n  File \"pykickstart.commands.url\", line 112, in __eq__\n  File \"pykickstart.commands.url\", line 77, in __eq__\n  File \"pykickstart.commands.url\", line 41, in __eq__\nTypeError: unorderable types: NoneType() >= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -17,7 +17,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return (self.url == other.url)", "+        return (self.url >= other.url)", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]], "op-name": "replace_Eq_with_GtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 0, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "41": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 57, in runTest\n    self.assert_parse(\"url --url=http://domain.com --proxy=http://proxy.com\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -49,7 +49,7 @@", "     def __eq__(self, other):", "         if (not FC3_Url.__eq__(self, other)):", "             return False", "-        return (self.proxy == other.proxy)", "+        return (self.proxy not in other.proxy)", " ", "     def __str__(self):", "         retval = FC3_Url.__str__(self)"]]], "op-name": "replace_Eq_with_NotIn", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_NotIn", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 2, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "23": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 50, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 33, in runTest\n    self.assert_parse(\"url --url=http://domainB.com\"))\n  File \"pykickstart.commands.url\", line 44, in __ne__\nTypeError: unorderable types: F13_Url() > F13_Url()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -20,7 +20,7 @@", "         return (self.url == other.url)", " ", "     def __ne__(self, other):", "-        return (not (self == other))", "+        return (not (self > other))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "op-name": "replace_Eq_with_Gt", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 1, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "5": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 86, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 69, in runTest\n    F13_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 57, in runTest\n    self.assert_parse(\"url --url=http://domain.com --proxy=http://proxy.com\"))\n  File \"pykickstart.commands.url\", line 151, in __eq__\nTypeError: unorderable types: NoneType() < NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -102,7 +102,7 @@", "     def __eq__(self, other):", "         if (not F14_Url.__eq__(self, other)):", "             return False", "-        return (self.mirrorlist == other.mirrorlist)", "+        return (self.mirrorlist < other.mirrorlist)", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "op-name": "replace_Eq_with_Lt", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_Lt", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 4, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "1": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 50, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 33, in runTest\n    self.assert_parse(\"url --url=http://domainB.com\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -17,7 +17,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return (self.url == other.url)", "+        return (self.url < other.url)", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]], "op-name": "replace_Eq_with_Lt", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 0, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "52": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 69, in runTest\n    F13_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 57, in runTest\n    self.assert_parse(\"url --url=http://domain.com --proxy=http://proxy.com\"))\n  File \"pykickstart.commands.url\", line 115, in __eq__\nTypeError: argument of type 'bool' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -74,7 +74,7 @@", "     def __eq__(self, other):", "         if (not F13_Url.__eq__(self, other)):", "             return False", "-        return (self.noverifyssl == other.noverifyssl)", "+        return (self.noverifyssl in other.noverifyssl)", " ", "     def __str__(self):", "         retval = F13_Url.__str__(self)"]]], "op-name": "replace_Eq_with_In", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_In", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 3, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "29": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 57, in runTest\n    self.assert_parse(\"url --url=http://domain.com --proxy=http://proxy.com\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -49,7 +49,7 @@", "     def __eq__(self, other):", "         if (not FC3_Url.__eq__(self, other)):", "             return False", "-        return (self.proxy == other.proxy)", "+        return (self.proxy != other.proxy)", " ", "     def __str__(self):", "         retval = FC3_Url.__str__(self)"]]], "op-name": "replace_Eq_with_NotEq", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_NotEq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 2, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "50": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 50, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 33, in runTest\n    self.assert_parse(\"url --url=http://domainB.com\"))\n  File \"pykickstart.commands.url\", line 44, in __ne__\nTypeError: argument of type 'F13_Url' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -20,7 +20,7 @@", "         return (self.url == other.url)", " ", "     def __ne__(self, other):", "-        return (not (self == other))", "+        return (not (self in other))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "op-name": "replace_Eq_with_In", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 1, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "13": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 50, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 33, in runTest\n    self.assert_parse(\"url --url=http://domainB.com\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -20,7 +20,7 @@", "         return (self.url == other.url)", " ", "     def __ne__(self, other):", "-        return (not (self == other))", "+        return (not (self is not other))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "op-name": "replace_Eq_with_IsNot", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_IsNot", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 1, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "43": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 86, in runTest\n    F14_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 69, in runTest\n    F13_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 57, in runTest\n    self.assert_parse(\"url --url=http://domain.com --proxy=http://proxy.com\"))\n  File \"pykickstart.commands.url\", line 151, in __eq__\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -102,7 +102,7 @@", "     def __eq__(self, other):", "         if (not F14_Url.__eq__(self, other)):", "             return False", "-        return (self.mirrorlist == other.mirrorlist)", "+        return (self.mirrorlist not in other.mirrorlist)", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "op-name": "replace_Eq_with_NotIn", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_NotIn", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 4, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "39": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 50, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/url.py\", line 33, in runTest\n    self.assert_parse(\"url --url=http://domainB.com\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -17,7 +17,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return (self.url == other.url)", "+        return (self.url not in other.url)", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]], "op-name": "replace_Eq_with_NotIn", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 0, "module-name": "pykickstart.commands.url", "result-type": "normal"}, "46": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/url.py", "@@ -49,7 +49,7 @@", "     def __eq__(self, other):", "         if (not FC3_Url.__eq__(self, other)):", "             return False", "-        return (self.proxy == other.proxy)", "+        return (self.proxy >= other.proxy)", " ", "     def __str__(self):", "         retval = FC3_Url.__str__(self)"]]], "op-name": "replace_Eq_with_GtE", "command": ["cosmic-ray", "worker", "pykickstart.commands.url", "replace_Eq_with_GtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"], "occurrence": 2, "module-name": "pykickstart.commands.url", "result-type": "normal"}}, "_default": {}, "work-parameters": {"1": {"timeout": 31.62958, "test-runner": "nose", "test-args": ["-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/url.py"]}}}