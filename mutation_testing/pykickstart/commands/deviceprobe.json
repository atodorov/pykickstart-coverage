{"work-items": {"6": {"op-name": "replace_NotEq_with_Is", "occurrence": 0, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/deviceprobe.py\", line 29, in runTest\n    self.assert_parse(\"deviceprobe --cheese\", \"deviceprobe --cheese\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'deviceprobe --cheese\\n'\n+ deviceprobe --cheese\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/deviceprobe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/deviceprobe.py", "@@ -13,7 +13,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.deviceprobe != ''):", "+        if (self.deviceprobe is ''):", "             retval += ('deviceprobe %s\\n' % self.deviceprobe)", "         return retval", " "]]], "result-type": "normal", "module-name": "pykickstart.commands.deviceprobe", "command": ["cosmic-ray", "worker", "pykickstart.commands.deviceprobe", "replace_NotEq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/deviceprobe.py"]}, "3": {"op-name": "number_replacer", "occurrence": 0, "result-data": [{"line_number": 28, "occurrence": 0, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/deviceprobe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/deviceprobe.py", "@@ -7,7 +7,7 @@", "     removedKeywords = KickstartCommand.removedKeywords", "     removedAttrs = KickstartCommand.removedAttrs", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         KickstartCommand.__init__(self, writePriority, *args, **kwargs)", "         self.deviceprobe = kwargs.get('deviceprobe', '')", " "]]], "result-type": "normal", "module-name": "pykickstart.commands.deviceprobe", "command": ["cosmic-ray", "worker", "pykickstart.commands.deviceprobe", "number_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/deviceprobe.py"]}, "5": {"op-name": "replace_NotEq_with_GtE", "occurrence": 0, "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/deviceprobe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/deviceprobe.py", "@@ -13,7 +13,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.deviceprobe != ''):", "+        if (self.deviceprobe >= ''):", "             retval += ('deviceprobe %s\\n' % self.deviceprobe)", "         return retval", " "]]], "result-type": "normal", "module-name": "pykickstart.commands.deviceprobe", "command": ["cosmic-ray", "worker", "pykickstart.commands.deviceprobe", "replace_NotEq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/deviceprobe.py"]}, "7": {"op-name": "replace_NotEq_with_LtE", "occurrence": 0, "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/deviceprobe.py\", line 29, in runTest\n    self.assert_parse(\"deviceprobe --cheese\", \"deviceprobe --cheese\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'deviceprobe --cheese\\n'\n+ deviceprobe --cheese\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/deviceprobe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/deviceprobe.py", "@@ -13,7 +13,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.deviceprobe != ''):", "+        if (self.deviceprobe <= ''):", "             retval += ('deviceprobe %s\\n' % self.deviceprobe)", "         return retval", " "]]], "result-type": "normal", "module-name": "pykickstart.commands.deviceprobe", "command": ["cosmic-ray", "worker", "pykickstart.commands.deviceprobe", "replace_NotEq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/deviceprobe.py"]}, "1": {"op-name": "replace_NotEq_with_Gt", "occurrence": 0, "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/deviceprobe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/deviceprobe.py", "@@ -13,7 +13,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.deviceprobe != ''):", "+        if (self.deviceprobe > ''):", "             retval += ('deviceprobe %s\\n' % self.deviceprobe)", "         return retval", " "]]], "result-type": "normal", "module-name": "pykickstart.commands.deviceprobe", "command": ["cosmic-ray", "worker", "pykickstart.commands.deviceprobe", "replace_NotEq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/deviceprobe.py"]}, "4": {"op-name": "replace_NotEq_with_NotIn", "occurrence": 0, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/deviceprobe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/deviceprobe.py", "@@ -13,7 +13,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.deviceprobe != ''):", "+        if (self.deviceprobe not in ''):", "             retval += ('deviceprobe %s\\n' % self.deviceprobe)", "         return retval", " "]]], "result-type": "normal", "module-name": "pykickstart.commands.deviceprobe", "command": ["cosmic-ray", "worker", "pykickstart.commands.deviceprobe", "replace_NotEq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/deviceprobe.py"]}, "8": {"op-name": "replace_NotEq_with_Eq", "occurrence": 0, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/deviceprobe.py\", line 29, in runTest\n    self.assert_parse(\"deviceprobe --cheese\", \"deviceprobe --cheese\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'deviceprobe --cheese\\n'\n+ deviceprobe --cheese\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/deviceprobe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/deviceprobe.py", "@@ -13,7 +13,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.deviceprobe != ''):", "+        if (self.deviceprobe == ''):", "             retval += ('deviceprobe %s\\n' % self.deviceprobe)", "         return retval", " "]]], "result-type": "normal", "module-name": "pykickstart.commands.deviceprobe", "command": ["cosmic-ray", "worker", "pykickstart.commands.deviceprobe", "replace_NotEq_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/deviceprobe.py"]}, "2": {"op-name": "replace_NotEq_with_Lt", "occurrence": 0, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/deviceprobe.py\", line 29, in runTest\n    self.assert_parse(\"deviceprobe --cheese\", \"deviceprobe --cheese\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'deviceprobe --cheese\\n'\n+ deviceprobe --cheese\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/deviceprobe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/deviceprobe.py", "@@ -13,7 +13,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.deviceprobe != ''):", "+        if (self.deviceprobe < ''):", "             retval += ('deviceprobe %s\\n' % self.deviceprobe)", "         return retval", " "]]], "result-type": "normal", "module-name": "pykickstart.commands.deviceprobe", "command": ["cosmic-ray", "worker", "pykickstart.commands.deviceprobe", "replace_NotEq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/deviceprobe.py"]}, "9": {"op-name": "replace_NotEq_with_In", "occurrence": 0, "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/deviceprobe.py\", line 29, in runTest\n    self.assert_parse(\"deviceprobe --cheese\", \"deviceprobe --cheese\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'deviceprobe --cheese\\n'\n+ deviceprobe --cheese\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/deviceprobe.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/deviceprobe.py", "@@ -13,7 +13,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.deviceprobe != ''):", "+        if (self.deviceprobe in ''):", "             retval += ('deviceprobe %s\\n' % self.deviceprobe)", "         return retval", " "]]], "result-type": "normal", "module-name": "pykickstart.commands.deviceprobe", "command": ["cosmic-ray", "worker", "pykickstart.commands.deviceprobe", "replace_NotEq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/deviceprobe.py"]}}, "_default": {}, "work-parameters": {"1": {"timeout": 3.7383100000000002, "test-args": ["-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/deviceprobe.py"], "test-runner": "nose"}}}