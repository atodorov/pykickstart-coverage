{"work-parameters": {"1": {"test-args": ["-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/mouse.py"], "test-runner": "nose", "timeout": 5.0565999999999995}}, "_default": {}, "work-items": {"13": {"command": ["cosmic-ray", "worker", "pykickstart.commands.mouse", "replace_NotEq_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/mouse.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "occurrence": 0, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/mouse.py\", line 29, in runTest\n    self.assert_parse(\"mouse jerry\", \"mouse jerry\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.mouse\", line 63, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nKickstart command mouse requires one argument\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/mouse.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/mouse.py", "@@ -35,7 +35,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(extra) != 1):", "+        if (len(extra) == 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'mouse')))", "         elif any((arg for arg in extra if arg.startswith('-'))):", "             mapping = {'command': 'mouse', 'options': extra}"]]], "module-name": "pykickstart.commands.mouse", "op-name": "replace_NotEq_with_Eq", "occurrence": 0, "result-type": "normal"}, "9": {"command": ["cosmic-ray", "worker", "pykickstart.commands.mouse", "number_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/mouse.py"], "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "occurrence": 0, "line_number": 31}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/mouse.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/mouse.py", "@@ -9,7 +9,7 @@", "     removedKeywords = KickstartCommand.removedKeywords", "     removedAttrs = KickstartCommand.removedAttrs", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         KickstartCommand.__init__(self, writePriority, *args, **kwargs)", "         self.op = self._getParser()", "         self.device = kwargs.get('device', '')"]]], "module-name": "pykickstart.commands.mouse", "op-name": "number_replacer", "occurrence": 0, "result-type": "normal"}, "4": {"command": ["cosmic-ray", "worker", "pykickstart.commands.mouse", "boolean_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/mouse.py"], "result-data": [{"operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "occurrence": 0, "line_number": 36}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/mouse.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/mouse.py", "@@ -13,7 +13,7 @@", "         KickstartCommand.__init__(self, writePriority, *args, **kwargs)", "         self.op = self._getParser()", "         self.device = kwargs.get('device', '')", "-        self.emulthree = kwargs.get('emulthree', False)", "+        self.emulthree = kwargs.get('emulthree', True)", "         self.mouse = kwargs.get('mouse', '')", " ", "     def __str__(self):"]]], "module-name": "pykickstart.commands.mouse", "op-name": "boolean_replacer", "occurrence": 0, "result-type": "normal"}, "11": {"command": ["cosmic-ray", "worker", "pykickstart.commands.mouse", "number_replacer", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/mouse.py"], "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "occurrence": 2, "line_number": 69}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/mouse.py\", line 29, in runTest\n    self.assert_parse(\"mouse jerry\", \"mouse jerry\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.mouse\", line 69, in parse\nIndexError: list index out of range\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/mouse.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/mouse.py", "@@ -41,7 +41,7 @@", "             mapping = {'command': 'mouse', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         self.set_to_self(ns)", "-        self.mouse = extra[0]", "+        self.mouse = extra[1]", "         return self", " ", " class FC3_Mouse(DeprecatedCommand, RHEL3_Mouse):"]]], "module-name": "pykickstart.commands.mouse", "op-name": "number_replacer", "occurrence": 2, "result-type": "normal"}, "12": {"command": ["cosmic-ray", "worker", "pykickstart.commands.mouse", "replace_NotEq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/mouse.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn", "occurrence": 0, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/mouse.py\", line 29, in runTest\n    self.assert_parse(\"mouse jerry\", \"mouse jerry\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.mouse\", line 62, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/mouse.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/mouse.py", "@@ -35,7 +35,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(extra) != 1):", "+        if (len(extra) in 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'mouse')))", "         elif any((arg for arg in extra if arg.startswith('-'))):", "             mapping = {'command': 'mouse', 'options': extra}"]]], "module-name": "pykickstart.commands.mouse", "op-name": "replace_NotEq_with_In", "occurrence": 0, "result-type": "normal"}, "3": {"command": ["cosmic-ray", "worker", "pykickstart.commands.mouse", "replace_NotEq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/mouse.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE", "occurrence": 0, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/mouse.py\", line 29, in runTest\n    self.assert_parse(\"mouse jerry\", \"mouse jerry\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.mouse\", line 63, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nKickstart command mouse requires one argument\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/mouse.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/mouse.py", "@@ -35,7 +35,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(extra) != 1):", "+        if (len(extra) <= 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'mouse')))", "         elif any((arg for arg in extra if arg.startswith('-'))):", "             mapping = {'command': 'mouse', 'options': extra}"]]], "module-name": "pykickstart.commands.mouse", "op-name": "replace_NotEq_with_LtE", "occurrence": 0, "result-type": "normal"}, "10": {"command": ["cosmic-ray", "worker", "pykickstart.commands.mouse", "number_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/mouse.py"], "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "occurrence": 1, "line_number": 62}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/mouse.py\", line 29, in runTest\n    self.assert_parse(\"mouse jerry\", \"mouse jerry\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.mouse\", line 63, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nKickstart command mouse requires one argument\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/mouse.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/mouse.py", "@@ -35,7 +35,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(extra) != 1):", "+        if (len(extra) != 2):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'mouse')))", "         elif any((arg for arg in extra if arg.startswith('-'))):", "             mapping = {'command': 'mouse', 'options': extra}"]]], "module-name": "pykickstart.commands.mouse", "op-name": "number_replacer", "occurrence": 1, "result-type": "normal"}, "8": {"command": ["cosmic-ray", "worker", "pykickstart.commands.mouse", "replace_NotEq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/mouse.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE", "occurrence": 0, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/mouse.py\", line 29, in runTest\n    self.assert_parse(\"mouse jerry\", \"mouse jerry\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.mouse\", line 63, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nKickstart command mouse requires one argument\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/mouse.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/mouse.py", "@@ -35,7 +35,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(extra) != 1):", "+        if (len(extra) >= 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'mouse')))", "         elif any((arg for arg in extra if arg.startswith('-'))):", "             mapping = {'command': 'mouse', 'options': extra}"]]], "module-name": "pykickstart.commands.mouse", "op-name": "replace_NotEq_with_GtE", "occurrence": 0, "result-type": "normal"}, "1": {"command": ["cosmic-ray", "worker", "pykickstart.commands.mouse", "replace_NotEq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/mouse.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "occurrence": 0, "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/mouse.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/mouse.py", "@@ -35,7 +35,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(extra) != 1):", "+        if (len(extra) < 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'mouse')))", "         elif any((arg for arg in extra if arg.startswith('-'))):", "             mapping = {'command': 'mouse', 'options': extra}"]]], "module-name": "pykickstart.commands.mouse", "op-name": "replace_NotEq_with_Lt", "occurrence": 0, "result-type": "normal"}, "5": {"command": ["cosmic-ray", "worker", "pykickstart.commands.mouse", "boolean_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/mouse.py"], "result-data": [{"operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "occurrence": 1, "line_number": 55}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/mouse.py\", line 29, in runTest\n    self.assert_parse(\"mouse jerry\", \"mouse jerry\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'mouse --emulthree jerry\\n' != 'mouse jerry\\n'\n- mouse --emulthree jerry\n+ mouse jerry\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/mouse.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/mouse.py", "@@ -30,7 +30,7 @@", "     def _getParser(self):", "         op = KSOptionParser(prog='mouse', description='', version=RHEL3)", "         op.add_argument('--device', default='', version=RHEL3, help='')", "-        op.add_argument('--emulthree', default=False, action='store_true', version=RHEL3, help='')", "+        op.add_argument('--emulthree', default=True, action='store_true', version=RHEL3, help='')", "         return op", " ", "     def parse(self, args):"]]], "module-name": "pykickstart.commands.mouse", "op-name": "boolean_replacer", "occurrence": 1, "result-type": "normal"}, "6": {"command": ["cosmic-ray", "worker", "pykickstart.commands.mouse", "replace_NotEq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/mouse.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "occurrence": 0, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/mouse.py\", line 29, in runTest\n    self.assert_parse(\"mouse jerry\", \"mouse jerry\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.mouse\", line 62, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/mouse.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/mouse.py", "@@ -35,7 +35,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(extra) != 1):", "+        if (len(extra) not in 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'mouse')))", "         elif any((arg for arg in extra if arg.startswith('-'))):", "             mapping = {'command': 'mouse', 'options': extra}"]]], "module-name": "pykickstart.commands.mouse", "op-name": "replace_NotEq_with_NotIn", "occurrence": 0, "result-type": "normal"}, "2": {"command": ["cosmic-ray", "worker", "pykickstart.commands.mouse", "replace_NotEq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/mouse.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt", "occurrence": 0, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/mouse.py\", line 36, in runTest\n    self.assert_parse_error(\"mouse\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\n  File \"pykickstart.commands.mouse\", line 69, in parse\nIndexError: list index out of range\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/mouse.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/mouse.py", "@@ -35,7 +35,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(extra) != 1):", "+        if (len(extra) > 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'mouse')))", "         elif any((arg for arg in extra if arg.startswith('-'))):", "             mapping = {'command': 'mouse', 'options': extra}"]]], "module-name": "pykickstart.commands.mouse", "op-name": "replace_NotEq_with_Gt", "occurrence": 0, "result-type": "normal"}, "7": {"command": ["cosmic-ray", "worker", "pykickstart.commands.mouse", "replace_NotEq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/mouse.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "occurrence": 0, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/mouse.py\", line 29, in runTest\n    self.assert_parse(\"mouse jerry\", \"mouse jerry\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.mouse\", line 63, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nKickstart command mouse requires one argument\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/mouse.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/mouse.py", "@@ -35,7 +35,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(extra) != 1):", "+        if (len(extra) is 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'mouse')))", "         elif any((arg for arg in extra if arg.startswith('-'))):", "             mapping = {'command': 'mouse', 'options': extra}"]]], "module-name": "pykickstart.commands.mouse", "op-name": "replace_NotEq_with_Is", "occurrence": 0, "result-type": "normal"}}}