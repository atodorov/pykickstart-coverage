{"work-parameters": {"1": {"test-args": ["-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "test-runner": "nose", "timeout": 14.08547}}, "work-items": {"42": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_NotEq", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: \"driverdisk ['/dev/sdb2']\\n\" != 'driverdisk /dev/sdb2\\n'\n- driverdisk ['/dev/sdb2']\n?            --         --\n+ driverdisk /dev/sdb2\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -98,7 +98,7 @@", "         ddd = self.dataClass()", "         self.set_to_obj(ns, ddd)", "         ddd.lineno = self.lineno", "-        if (len(ns.partition) == 1):", "+        if (len(ns.partition) != 1):", "             ddd.partition = ns.partition[0]", "         return ddd", " "]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 1}, "5": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_NotIn", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_NotIn", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 62, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 188, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -136,7 +136,7 @@", "         ddd = self.dataClass()", "         self.set_to_obj(ns, ddd)", "         ddd.lineno = self.lineno", "-        if (len(ns.partition) == 1):", "+        if (len(ns.partition) not in 1):", "             ddd.partition = ns.partition[0]", "         return ddd", " "]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 4}, "62": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "number_replacer", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "number_replacer", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 143, "occurrence": 6}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: \"driverdisk ['/dev/sdb2']\\n\" != 'driverdisk /dev/sdb2\\n'\n- driverdisk ['/dev/sdb2']\n?            --         --\n+ driverdisk /dev/sdb2\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -98,7 +98,7 @@", "         ddd = self.dataClass()", "         self.set_to_obj(ns, ddd)", "         ddd.lineno = self.lineno", "-        if (len(ns.partition) == 1):", "+        if (len(ns.partition) == 2):", "             ddd.partition = ns.partition[0]", "         return ddd", " "]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 6}, "11": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_GtE", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithGtE", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 132, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nUnexpected arguments to driverdisk command: []\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -88,7 +88,7 @@", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(ns.partition) > 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) >= 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partition) == 1) and ns.source):"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 1}, "90": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_LtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_LtE", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLtE", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 62, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 170, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOnly one partition may be specified for driverdisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -120,7 +120,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(ns.partition) > 1):", "+        if (len(ns.partition) <= 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 2}, "35": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_Gt", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_Gt", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 62, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: \"driverdisk ['/dev/sdb2']\\n\" != 'driverdisk /dev/sdb2\\n'\n- driverdisk ['/dev/sdb2']\n?            --         --\n+ driverdisk /dev/sdb2\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -136,7 +136,7 @@", "         ddd = self.dataClass()", "         self.set_to_obj(ns, ddd)", "         ddd.lineno = self.lineno", "-        if (len(ns.partition) == 1):", "+        if (len(ns.partition) > 1):", "             ddd.partition = ns.partition[0]", "         return ddd", " "]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 4}, "89": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_LtE", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLtE", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 132, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nUnexpected arguments to driverdisk command: []\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -88,7 +88,7 @@", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(ns.partition) > 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) <= 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partition) == 1) and ns.source):"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 1}, "86": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_In", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_In", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 62, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 177, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -127,7 +127,7 @@", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partition) == 1) and ns.source):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --source and partition may be specified for driverdisk command.')))", "-        elif ((len(ns.partition) == 1) and ns.biospart):", "+        elif ((len(ns.partition) in 1) and ns.biospart):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --biospart and partition may be specified for driverdisk command.')))", "         elif (ns.source and ns.biospart):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --biospart and --source may be specified for driverdisk command.')))"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 3}, "61": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "number_replacer", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "number_replacer", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 134, "occurrence": 5}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 47, in runTest\n    self.assert_parse_error(\"driverdisk /dev/sdb2 --source=http://10.0.0.1/disk.img\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -91,7 +91,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        if ((len(ns.partition) == 1) and ns.source):", "+        if ((len(ns.partition) == 2) and ns.source):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --source and partition may be specified for driverdisk command.')))", "         if ((not ns.partition) and (not ns.source)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --source or partition must be specified for driverdisk command.')))"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 5}, "18": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_Is", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIs", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 129, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOnly one partition may be specified for driverdisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -86,7 +86,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(ns.partition) > 1):", "+        if (len(ns.partition) is 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 0}, "48": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_Lt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_Lt", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 62, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 29, in runTest\n    self.assert_parse(\"driverdisk --source=http://10.0.0.1/disk.img\", \"driverdisk --source=http://10.0.0.1/disk.img\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 176, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOnly one of --source and partition may be specified for driverdisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -125,7 +125,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        if ((len(ns.partition) == 1) and ns.source):", "+        if ((len(ns.partition) < 1) and ns.source):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --source and partition may be specified for driverdisk command.')))", "         elif ((len(ns.partition) == 1) and ns.biospart):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --biospart and partition may be specified for driverdisk command.')))"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 2}, "71": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_GtE", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -98,7 +98,7 @@", "         ddd = self.dataClass()", "         self.set_to_obj(ns, ddd)", "         ddd.lineno = self.lineno", "-        if (len(ns.partition) == 1):", "+        if (len(ns.partition) >= 1):", "             ddd.partition = ns.partition[0]", "         return ddd", " "]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 1}, "95": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_Eq", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_Eq", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithEq", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 62, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 173, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nUnexpected arguments to driverdisk command: []\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -122,7 +122,7 @@", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(ns.partition) > 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) == 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partition) == 1) and ns.source):"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 3}, "17": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_IsNot", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_IsNot", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIsNot", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -122,7 +122,7 @@", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(ns.partition) > 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) is not 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partition) == 1) and ns.source):"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 3}, "67": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "number_replacer", "11", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "number_replacer", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 177, "occurrence": 11}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 71, in runTest\n    self.assert_parse_error(\"driverdisk /dev/sdb2 --biospart=0x82\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -127,7 +127,7 @@", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partition) == 1) and ns.source):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --source and partition may be specified for driverdisk command.')))", "-        elif ((len(ns.partition) == 1) and ns.biospart):", "+        elif ((len(ns.partition) == 2) and ns.biospart):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --biospart and partition may be specified for driverdisk command.')))", "         elif (ns.source and ns.biospart):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --biospart and --source may be specified for driverdisk command.')))"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 11}, "13": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_GtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_GtE", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithGtE", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 62, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 173, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nUnexpected arguments to driverdisk command: []\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -122,7 +122,7 @@", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(ns.partition) > 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) >= 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partition) == 1) and ns.source):"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 3}, "54": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_LtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_LtE", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 65, in runTest\n    self.assert_parse(\"driverdisk --biospart=0x82\", \"driverdisk --biospart=0x82\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 178, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOnly one of --biospart and partition may be specified for driverdisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -127,7 +127,7 @@", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partition) == 1) and ns.source):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --source and partition may be specified for driverdisk command.')))", "-        elif ((len(ns.partition) == 1) and ns.biospart):", "+        elif ((len(ns.partition) <= 1) and ns.biospart):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --biospart and partition may be specified for driverdisk command.')))", "         elif (ns.source and ns.biospart):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --biospart and --source may be specified for driverdisk command.')))"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 3}, "74": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_GtE", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_GtE", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -136,7 +136,7 @@", "         ddd = self.dataClass()", "         self.set_to_obj(ns, ddd)", "         ddd.lineno = self.lineno", "-        if (len(ns.partition) == 1):", "+        if (len(ns.partition) >= 1):", "             ddd.partition = ns.partition[0]", "         return ddd", " "]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 4}, "56": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "number_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "number_replacer", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 31, "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -9,7 +9,7 @@", "     removedKeywords = BaseData.removedKeywords", "     removedAttrs = BaseData.removedAttrs", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         BaseData.__init__(self, writePriority, *args, **kwargs)", "         self.partition = kwargs.get('partition', '')", "         self.source = kwargs.get('source', '')"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 0}, "77": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_In", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_In", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIn", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 62, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 169, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -120,7 +120,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(ns.partition) > 1):", "+        if (len(ns.partition) in 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 2}, "15": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_IsNot", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_IsNot", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIsNot", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -88,7 +88,7 @@", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(ns.partition) > 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) is not 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partition) == 1) and ns.source):"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 1}, "92": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_Eq", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithEq", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 129, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOnly one partition may be specified for driverdisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -86,7 +86,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(ns.partition) > 1):", "+        if (len(ns.partition) == 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 0}, "3": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_NotIn", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_NotIn", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 62, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 175, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -125,7 +125,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        if ((len(ns.partition) == 1) and ns.source):", "+        if ((len(ns.partition) not in 1) and ns.source):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --source and partition may be specified for driverdisk command.')))", "         elif ((len(ns.partition) == 1) and ns.biospart):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --biospart and partition may be specified for driverdisk command.')))"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 2}, "28": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_IsNot", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_IsNot", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 62, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 29, in runTest\n    self.assert_parse(\"driverdisk --source=http://10.0.0.1/disk.img\", \"driverdisk --source=http://10.0.0.1/disk.img\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 176, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOnly one of --source and partition may be specified for driverdisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -125,7 +125,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        if ((len(ns.partition) == 1) and ns.source):", "+        if ((len(ns.partition) is not 1) and ns.source):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --source and partition may be specified for driverdisk command.')))", "         elif ((len(ns.partition) == 1) and ns.biospart):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --biospart and partition may be specified for driverdisk command.')))"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 2}, "39": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_Is", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_Is", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -127,7 +127,7 @@", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partition) == 1) and ns.source):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --source and partition may be specified for driverdisk command.')))", "-        elif ((len(ns.partition) == 1) and ns.biospart):", "+        elif ((len(ns.partition) is 1) and ns.biospart):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --biospart and partition may be specified for driverdisk command.')))", "         elif (ns.source and ns.biospart):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --biospart and --source may be specified for driverdisk command.')))"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 3}, "7": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_NotEq", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -88,7 +88,7 @@", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(ns.partition) > 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) != 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partition) == 1) and ns.source):"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 1}, "9": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_NotEq", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_NotEq", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -122,7 +122,7 @@", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(ns.partition) > 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) != 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partition) == 1) and ns.source):"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 3}, "41": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_NotEq", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 29, in runTest\n    self.assert_parse(\"driverdisk --source=http://10.0.0.1/disk.img\", \"driverdisk --source=http://10.0.0.1/disk.img\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 135, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOnly one of --source and partition may be specified for driverdisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -91,7 +91,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        if ((len(ns.partition) == 1) and ns.source):", "+        if ((len(ns.partition) != 1) and ns.source):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --source and partition may be specified for driverdisk command.')))", "         if ((not ns.partition) and (not ns.source)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --source or partition must be specified for driverdisk command.')))"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 0}, "75": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_In", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIn", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 128, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -86,7 +86,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(ns.partition) > 1):", "+        if (len(ns.partition) in 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 0}, "4": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_NotIn", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_NotIn", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 62, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 177, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -127,7 +127,7 @@", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partition) == 1) and ns.source):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --source and partition may be specified for driverdisk command.')))", "-        elif ((len(ns.partition) == 1) and ns.biospart):", "+        elif ((len(ns.partition) not in 1) and ns.biospart):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --biospart and partition may be specified for driverdisk command.')))", "         elif (ns.source and ns.biospart):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --biospart and --source may be specified for driverdisk command.')))"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 3}, "37": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_Is", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -98,7 +98,7 @@", "         ddd = self.dataClass()", "         self.set_to_obj(ns, ddd)", "         ddd.lineno = self.lineno", "-        if (len(ns.partition) == 1):", "+        if (len(ns.partition) is 1):", "             ddd.partition = ns.partition[0]", "         return ddd", " "]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 1}, "33": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_Gt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_Gt", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 62, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 47, in runTest\n    self.assert_parse_error(\"driverdisk /dev/sdb2 --source=http://10.0.0.1/disk.img\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -125,7 +125,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        if ((len(ns.partition) == 1) and ns.source):", "+        if ((len(ns.partition) > 1) and ns.source):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --source and partition may be specified for driverdisk command.')))", "         elif ((len(ns.partition) == 1) and ns.biospart):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --biospart and partition may be specified for driverdisk command.')))"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 2}, "68": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "number_replacer", "12", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "number_replacer", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 188, "occurrence": 12}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 62, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: \"driverdisk ['/dev/sdb2']\\n\" != 'driverdisk /dev/sdb2\\n'\n- driverdisk ['/dev/sdb2']\n?            --         --\n+ driverdisk /dev/sdb2\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -136,7 +136,7 @@", "         ddd = self.dataClass()", "         self.set_to_obj(ns, ddd)", "         ddd.lineno = self.lineno", "-        if (len(ns.partition) == 1):", "+        if (len(ns.partition) == 2):", "             ddd.partition = ns.partition[0]", "         return ddd", " "]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 12}, "20": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_Is", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_Is", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIs", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 62, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 170, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOnly one partition may be specified for driverdisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -120,7 +120,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(ns.partition) > 1):", "+        if (len(ns.partition) is 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 2}, "52": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_LtE", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 29, in runTest\n    self.assert_parse(\"driverdisk --source=http://10.0.0.1/disk.img\", \"driverdisk --source=http://10.0.0.1/disk.img\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 144, in parse\nIndexError: list index out of range\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -98,7 +98,7 @@", "         ddd = self.dataClass()", "         self.set_to_obj(ns, ddd)", "         ddd.lineno = self.lineno", "-        if (len(ns.partition) == 1):", "+        if (len(ns.partition) <= 1):", "             ddd.partition = ns.partition[0]", "         return ddd", " "]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 1}, "14": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_IsNot", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIsNot", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 29, in runTest\n    self.assert_parse(\"driverdisk --source=http://10.0.0.1/disk.img\", \"driverdisk --source=http://10.0.0.1/disk.img\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 129, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOnly one partition may be specified for driverdisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -86,7 +86,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(ns.partition) > 1):", "+        if (len(ns.partition) is not 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 0}, "72": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_GtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_GtE", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -125,7 +125,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        if ((len(ns.partition) == 1) and ns.source):", "+        if ((len(ns.partition) >= 1) and ns.source):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --source and partition may be specified for driverdisk command.')))", "         elif ((len(ns.partition) == 1) and ns.biospart):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --biospart and partition may be specified for driverdisk command.')))"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 2}, "79": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_Lt", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLt", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 29, in runTest\n    self.assert_parse(\"driverdisk --source=http://10.0.0.1/disk.img\", \"driverdisk --source=http://10.0.0.1/disk.img\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 129, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOnly one partition may be specified for driverdisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -86,7 +86,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(ns.partition) > 1):", "+        if (len(ns.partition) < 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 0}, "44": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_NotEq", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_NotEq", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 65, in runTest\n    self.assert_parse(\"driverdisk --biospart=0x82\", \"driverdisk --biospart=0x82\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 178, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOnly one of --biospart and partition may be specified for driverdisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -127,7 +127,7 @@", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partition) == 1) and ns.source):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --source and partition may be specified for driverdisk command.')))", "-        elif ((len(ns.partition) == 1) and ns.biospart):", "+        elif ((len(ns.partition) != 1) and ns.biospart):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --biospart and partition may be specified for driverdisk command.')))", "         elif (ns.source and ns.biospart):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --biospart and --source may be specified for driverdisk command.')))"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 3}, "70": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_GtE", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -91,7 +91,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        if ((len(ns.partition) == 1) and ns.source):", "+        if ((len(ns.partition) >= 1) and ns.source):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --source and partition may be specified for driverdisk command.')))", "         if ((not ns.partition) and (not ns.source)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --source or partition must be specified for driverdisk command.')))"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 0}, "50": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_Lt", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_Lt", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 62, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: \"driverdisk ['/dev/sdb2']\\n\" != 'driverdisk /dev/sdb2\\n'\n- driverdisk ['/dev/sdb2']\n?            --         --\n+ driverdisk /dev/sdb2\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -136,7 +136,7 @@", "         ddd = self.dataClass()", "         self.set_to_obj(ns, ddd)", "         ddd.lineno = self.lineno", "-        if (len(ns.partition) == 1):", "+        if (len(ns.partition) < 1):", "             ddd.partition = ns.partition[0]", "         return ddd", " "]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 4}, "78": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_In", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_In", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIn", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 62, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 171, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -122,7 +122,7 @@", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(ns.partition) > 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) in 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partition) == 1) and ns.source):"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 3}, "53": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_LtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_LtE", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 62, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 29, in runTest\n    self.assert_parse(\"driverdisk --source=http://10.0.0.1/disk.img\", \"driverdisk --source=http://10.0.0.1/disk.img\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 176, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOnly one of --source and partition may be specified for driverdisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -125,7 +125,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        if ((len(ns.partition) == 1) and ns.source):", "+        if ((len(ns.partition) <= 1) and ns.source):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --source and partition may be specified for driverdisk command.')))", "         elif ((len(ns.partition) == 1) and ns.biospart):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --biospart and partition may be specified for driverdisk command.')))"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 2}, "21": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_Is", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_Is", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIs", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 62, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 173, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nUnexpected arguments to driverdisk command: []\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -122,7 +122,7 @@", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(ns.partition) > 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) is 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partition) == 1) and ns.source):"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 3}, "73": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_GtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_GtE", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -127,7 +127,7 @@", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partition) == 1) and ns.source):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --source and partition may be specified for driverdisk command.')))", "-        elif ((len(ns.partition) == 1) and ns.biospart):", "+        elif ((len(ns.partition) >= 1) and ns.biospart):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --biospart and partition may be specified for driverdisk command.')))", "         elif (ns.source and ns.biospart):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --biospart and --source may be specified for driverdisk command.')))"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 3}, "60": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "number_replacer", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "number_replacer", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 130, "occurrence": 4}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -88,7 +88,7 @@", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(ns.partition) > 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) > 1):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partition) == 1) and ns.source):"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 4}, "24": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_NotIn", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_NotIn", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 62, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 169, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -120,7 +120,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(ns.partition) > 1):", "+        if (len(ns.partition) not in 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 2}, "12": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_GtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_GtE", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithGtE", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 62, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 170, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOnly one partition may be specified for driverdisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -120,7 +120,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(ns.partition) > 1):", "+        if (len(ns.partition) >= 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 2}, "91": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_LtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_LtE", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLtE", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 62, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 173, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nUnexpected arguments to driverdisk command: []\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -122,7 +122,7 @@", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(ns.partition) > 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) <= 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partition) == 1) and ns.source):"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 3}, "46": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_Lt", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 29, in runTest\n    self.assert_parse(\"driverdisk --source=http://10.0.0.1/disk.img\", \"driverdisk --source=http://10.0.0.1/disk.img\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 135, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOnly one of --source and partition may be specified for driverdisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -91,7 +91,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        if ((len(ns.partition) == 1) and ns.source):", "+        if ((len(ns.partition) < 1) and ns.source):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --source and partition may be specified for driverdisk command.')))", "         if ((not ns.partition) and (not ns.source)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --source or partition must be specified for driverdisk command.')))"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 0}, "87": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_In", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_In", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 62, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 188, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -136,7 +136,7 @@", "         ddd = self.dataClass()", "         self.set_to_obj(ns, ddd)", "         ddd.lineno = self.lineno", "-        if (len(ns.partition) == 1):", "+        if (len(ns.partition) in 1):", "             ddd.partition = ns.partition[0]", "         return ddd", " "]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 4}, "22": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_NotIn", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 128, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -86,7 +86,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(ns.partition) > 1):", "+        if (len(ns.partition) not in 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 0}, "84": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_In", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 143, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -98,7 +98,7 @@", "         ddd = self.dataClass()", "         self.set_to_obj(ns, ddd)", "         ddd.lineno = self.lineno", "-        if (len(ns.partition) == 1):", "+        if (len(ns.partition) in 1):", "             ddd.partition = ns.partition[0]", "         return ddd", " "]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 1}, "23": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_NotIn", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 130, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -88,7 +88,7 @@", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(ns.partition) > 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) not in 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partition) == 1) and ns.source):"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 1}, "27": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_IsNot", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_IsNot", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: \"driverdisk ['/dev/sdb2']\\n\" != 'driverdisk /dev/sdb2\\n'\n- driverdisk ['/dev/sdb2']\n?            --         --\n+ driverdisk /dev/sdb2\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -98,7 +98,7 @@", "         ddd = self.dataClass()", "         self.set_to_obj(ns, ddd)", "         ddd.lineno = self.lineno", "-        if (len(ns.partition) == 1):", "+        if (len(ns.partition) is not 1):", "             ddd.partition = ns.partition[0]", "         return ddd", " "]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 1}, "94": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_Eq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_Eq", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithEq", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 62, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 170, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOnly one partition may be specified for driverdisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -120,7 +120,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(ns.partition) > 1):", "+        if (len(ns.partition) == 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 2}, "26": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_IsNot", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 29, in runTest\n    self.assert_parse(\"driverdisk --source=http://10.0.0.1/disk.img\", \"driverdisk --source=http://10.0.0.1/disk.img\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 135, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOnly one of --source and partition may be specified for driverdisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -91,7 +91,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        if ((len(ns.partition) == 1) and ns.source):", "+        if ((len(ns.partition) is not 1) and ns.source):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --source and partition may be specified for driverdisk command.')))", "         if ((not ns.partition) and (not ns.source)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --source or partition must be specified for driverdisk command.')))"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 0}, "69": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "number_replacer", "13", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "number_replacer", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 189, "occurrence": 13}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 62, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 189, in parse\nIndexError: list index out of range\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -137,7 +137,7 @@", "         self.set_to_obj(ns, ddd)", "         ddd.lineno = self.lineno", "         if (len(ns.partition) == 1):", "-            ddd.partition = ns.partition[0]", "+            ddd.partition = ns.partition[1]", "         return ddd", " ", " class F12_DriverDisk(FC4_DriverDisk):"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 13}, "64": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "number_replacer", "8", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "number_replacer", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 169, "occurrence": 8}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 62, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 45, in runTest\n    self.assert_parse_error(\"driverdisk /dev/sdb2 foobar\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -120,7 +120,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(ns.partition) > 1):", "+        if (len(ns.partition) > 2):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 8}, "63": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "number_replacer", "7", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "number_replacer", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 144, "occurrence": 7}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 144, in parse\nIndexError: list index out of range\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -99,7 +99,7 @@", "         self.set_to_obj(ns, ddd)", "         ddd.lineno = self.lineno", "         if (len(ns.partition) == 1):", "-            ddd.partition = ns.partition[0]", "+            ddd.partition = ns.partition[1]", "         return ddd", " ", "     def dataList(self):"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 7}, "81": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_Lt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_Lt", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLt", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 62, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 29, in runTest\n    self.assert_parse(\"driverdisk --source=http://10.0.0.1/disk.img\", \"driverdisk --source=http://10.0.0.1/disk.img\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 170, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOnly one partition may be specified for driverdisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -120,7 +120,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(ns.partition) > 1):", "+        if (len(ns.partition) < 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 2}, "55": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_LtE", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_LtE", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 62, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 29, in runTest\n    self.assert_parse(\"driverdisk --source=http://10.0.0.1/disk.img\", \"driverdisk --source=http://10.0.0.1/disk.img\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 189, in parse\nIndexError: list index out of range\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -136,7 +136,7 @@", "         ddd = self.dataClass()", "         self.set_to_obj(ns, ddd)", "         ddd.lineno = self.lineno", "-        if (len(ns.partition) == 1):", "+        if (len(ns.partition) <= 1):", "             ddd.partition = ns.partition[0]", "         return ddd", " "]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 4}, "59": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "number_replacer", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "number_replacer", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 128, "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 45, in runTest\n    self.assert_parse_error(\"driverdisk /dev/sdb2 foobar\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -86,7 +86,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(ns.partition) > 1):", "+        if (len(ns.partition) > 2):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 3}, "32": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_Gt", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: \"driverdisk ['/dev/sdb2']\\n\" != 'driverdisk /dev/sdb2\\n'\n- driverdisk ['/dev/sdb2']\n?            --         --\n+ driverdisk /dev/sdb2\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -98,7 +98,7 @@", "         ddd = self.dataClass()", "         self.set_to_obj(ns, ddd)", "         ddd.lineno = self.lineno", "-        if (len(ns.partition) == 1):", "+        if (len(ns.partition) > 1):", "             ddd.partition = ns.partition[0]", "         return ddd", " "]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 1}, "80": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_Lt", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLt", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -88,7 +88,7 @@", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(ns.partition) > 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) < 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partition) == 1) and ns.source):"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 1}, "40": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_Is", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_Is", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -136,7 +136,7 @@", "         ddd = self.dataClass()", "         self.set_to_obj(ns, ddd)", "         ddd.lineno = self.lineno", "-        if (len(ns.partition) == 1):", "+        if (len(ns.partition) is 1):", "             ddd.partition = ns.partition[0]", "         return ddd", " "]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 4}, "30": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_IsNot", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_IsNot", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 62, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: \"driverdisk ['/dev/sdb2']\\n\" != 'driverdisk /dev/sdb2\\n'\n- driverdisk ['/dev/sdb2']\n?            --         --\n+ driverdisk /dev/sdb2\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -136,7 +136,7 @@", "         ddd = self.dataClass()", "         self.set_to_obj(ns, ddd)", "         ddd.lineno = self.lineno", "-        if (len(ns.partition) == 1):", "+        if (len(ns.partition) is not 1):", "             ddd.partition = ns.partition[0]", "         return ddd", " "]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 4}, "57": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "number_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "number_replacer", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 59, "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -34,7 +34,7 @@", "     removedKeywords = FC3_DriverDiskData.removedKeywords", "     removedAttrs = FC3_DriverDiskData.removedAttrs", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         FC3_DriverDiskData.__init__(self, *args, **kwargs)", "         self.deleteRemovedAttrs()", "         self.biospart = kwargs.get('biospart', '')"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 1}, "45": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_NotEq", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_NotEq", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 62, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: \"driverdisk ['/dev/sdb2']\\n\" != 'driverdisk /dev/sdb2\\n'\n- driverdisk ['/dev/sdb2']\n?            --         --\n+ driverdisk /dev/sdb2\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -136,7 +136,7 @@", "         ddd = self.dataClass()", "         self.set_to_obj(ns, ddd)", "         ddd.lineno = self.lineno", "-        if (len(ns.partition) == 1):", "+        if (len(ns.partition) != 1):", "             ddd.partition = ns.partition[0]", "         return ddd", " "]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 4}, "93": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_Eq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_Eq", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithEq", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 132, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nUnexpected arguments to driverdisk command: []\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -88,7 +88,7 @@", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(ns.partition) > 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) == 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partition) == 1) and ns.source):"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 1}, "6": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_NotEq", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 29, in runTest\n    self.assert_parse(\"driverdisk --source=http://10.0.0.1/disk.img\", \"driverdisk --source=http://10.0.0.1/disk.img\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 129, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOnly one partition may be specified for driverdisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -86,7 +86,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(ns.partition) > 1):", "+        if (len(ns.partition) != 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 0}, "2": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_NotIn", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 143, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -98,7 +98,7 @@", "         ddd = self.dataClass()", "         self.set_to_obj(ns, ddd)", "         ddd.lineno = self.lineno", "-        if (len(ns.partition) == 1):", "+        if (len(ns.partition) not in 1):", "             ddd.partition = ns.partition[0]", "         return ddd", " "]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 1}, "38": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_Is", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_Is", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -125,7 +125,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        if ((len(ns.partition) == 1) and ns.source):", "+        if ((len(ns.partition) is 1) and ns.source):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --source and partition may be specified for driverdisk command.')))", "         elif ((len(ns.partition) == 1) and ns.biospart):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --biospart and partition may be specified for driverdisk command.')))"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 2}, "49": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_Lt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_Lt", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 65, in runTest\n    self.assert_parse(\"driverdisk --biospart=0x82\", \"driverdisk --biospart=0x82\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 178, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOnly one of --biospart and partition may be specified for driverdisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -127,7 +127,7 @@", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partition) == 1) and ns.source):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --source and partition may be specified for driverdisk command.')))", "-        elif ((len(ns.partition) == 1) and ns.biospart):", "+        elif ((len(ns.partition) < 1) and ns.biospart):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --biospart and partition may be specified for driverdisk command.')))", "         elif (ns.source and ns.biospart):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --biospart and --source may be specified for driverdisk command.')))"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 3}, "88": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_LtE", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLtE", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 129, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOnly one partition may be specified for driverdisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -86,7 +86,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(ns.partition) > 1):", "+        if (len(ns.partition) <= 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 0}, "83": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_In", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 134, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -91,7 +91,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        if ((len(ns.partition) == 1) and ns.source):", "+        if ((len(ns.partition) in 1) and ns.source):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --source and partition may be specified for driverdisk command.')))", "         if ((not ns.partition) and (not ns.source)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --source or partition must be specified for driverdisk command.')))"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 0}, "29": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_IsNot", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_IsNot", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 65, in runTest\n    self.assert_parse(\"driverdisk --biospart=0x82\", \"driverdisk --biospart=0x82\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 178, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOnly one of --biospart and partition may be specified for driverdisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -127,7 +127,7 @@", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partition) == 1) and ns.source):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --source and partition may be specified for driverdisk command.')))", "-        elif ((len(ns.partition) == 1) and ns.biospart):", "+        elif ((len(ns.partition) is not 1) and ns.biospart):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --biospart and partition may be specified for driverdisk command.')))", "         elif (ns.source and ns.biospart):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --biospart and --source may be specified for driverdisk command.')))"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 3}, "76": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_In", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIn", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 130, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -88,7 +88,7 @@", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(ns.partition) > 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) in 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partition) == 1) and ns.source):"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 1}, "66": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "number_replacer", "10", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "number_replacer", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 175, "occurrence": 10}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 62, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 47, in runTest\n    self.assert_parse_error(\"driverdisk /dev/sdb2 --source=http://10.0.0.1/disk.img\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -125,7 +125,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        if ((len(ns.partition) == 1) and ns.source):", "+        if ((len(ns.partition) == 2) and ns.source):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --source and partition may be specified for driverdisk command.')))", "         elif ((len(ns.partition) == 1) and ns.biospart):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --biospart and partition may be specified for driverdisk command.')))"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 10}, "16": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_IsNot", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_IsNot", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIsNot", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 62, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 29, in runTest\n    self.assert_parse(\"driverdisk --source=http://10.0.0.1/disk.img\", \"driverdisk --source=http://10.0.0.1/disk.img\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 170, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOnly one partition may be specified for driverdisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -120,7 +120,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(ns.partition) > 1):", "+        if (len(ns.partition) is not 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 2}, "51": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_LtE", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 29, in runTest\n    self.assert_parse(\"driverdisk --source=http://10.0.0.1/disk.img\", \"driverdisk --source=http://10.0.0.1/disk.img\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 135, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOnly one of --source and partition may be specified for driverdisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -91,7 +91,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        if ((len(ns.partition) == 1) and ns.source):", "+        if ((len(ns.partition) <= 1) and ns.source):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --source and partition may be specified for driverdisk command.')))", "         if ((not ns.partition) and (not ns.source)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --source or partition must be specified for driverdisk command.')))"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 0}, "82": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_Lt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_Lt", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLt", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -122,7 +122,7 @@", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(ns.partition) > 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) < 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partition) == 1) and ns.source):"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 3}, "47": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_Lt", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: \"driverdisk ['/dev/sdb2']\\n\" != 'driverdisk /dev/sdb2\\n'\n- driverdisk ['/dev/sdb2']\n?            --         --\n+ driverdisk /dev/sdb2\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -98,7 +98,7 @@", "         ddd = self.dataClass()", "         self.set_to_obj(ns, ddd)", "         ddd.lineno = self.lineno", "-        if (len(ns.partition) == 1):", "+        if (len(ns.partition) < 1):", "             ddd.partition = ns.partition[0]", "         return ddd", " "]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 1}, "10": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_GtE", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithGtE", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 129, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOnly one partition may be specified for driverdisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -86,7 +86,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(ns.partition) > 1):", "+        if (len(ns.partition) >= 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 0}, "58": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "number_replacer", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "number_replacer", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 95, "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -66,7 +66,7 @@", "     removedKeywords = KickstartCommand.removedKeywords", "     removedAttrs = KickstartCommand.removedAttrs", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         KickstartCommand.__init__(self, writePriority, *args, **kwargs)", "         self.op = self._getParser()", "         self.driverdiskList = kwargs.get('driverdiskList', [])"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 2}, "25": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_NotIn", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_NotIn", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 62, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 171, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -122,7 +122,7 @@", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(ns.partition) > 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) not in 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partition) == 1) and ns.source):"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 3}, "1": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_NotIn", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 134, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -91,7 +91,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        if ((len(ns.partition) == 1) and ns.source):", "+        if ((len(ns.partition) not in 1) and ns.source):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --source and partition may be specified for driverdisk command.')))", "         if ((not ns.partition) and (not ns.source)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --source or partition must be specified for driverdisk command.')))"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 0}, "85": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_In", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_In", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 62, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 175, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -125,7 +125,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        if ((len(ns.partition) == 1) and ns.source):", "+        if ((len(ns.partition) in 1) and ns.source):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --source and partition may be specified for driverdisk command.')))", "         elif ((len(ns.partition) == 1) and ns.biospart):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --biospart and partition may be specified for driverdisk command.')))"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 2}, "36": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_Is", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -91,7 +91,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        if ((len(ns.partition) == 1) and ns.source):", "+        if ((len(ns.partition) is 1) and ns.source):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --source and partition may be specified for driverdisk command.')))", "         if ((not ns.partition) and (not ns.source)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --source or partition must be specified for driverdisk command.')))"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 0}, "8": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_NotEq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_NotEq", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 62, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 29, in runTest\n    self.assert_parse(\"driverdisk --source=http://10.0.0.1/disk.img\", \"driverdisk --source=http://10.0.0.1/disk.img\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 170, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOnly one partition may be specified for driverdisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -120,7 +120,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(ns.partition) > 1):", "+        if (len(ns.partition) != 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 2}, "43": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_NotEq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_NotEq", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 62, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 29, in runTest\n    self.assert_parse(\"driverdisk --source=http://10.0.0.1/disk.img\", \"driverdisk --source=http://10.0.0.1/disk.img\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 176, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOnly one of --source and partition may be specified for driverdisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -125,7 +125,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        if ((len(ns.partition) == 1) and ns.source):", "+        if ((len(ns.partition) != 1) and ns.source):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --source and partition may be specified for driverdisk command.')))", "         elif ((len(ns.partition) == 1) and ns.biospart):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --biospart and partition may be specified for driverdisk command.')))"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 2}, "34": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_Gt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_Gt", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 77, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 71, in runTest\n    self.assert_parse_error(\"driverdisk /dev/sdb2 --biospart=0x82\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -127,7 +127,7 @@", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partition) == 1) and ns.source):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --source and partition may be specified for driverdisk command.')))", "-        elif ((len(ns.partition) == 1) and ns.biospart):", "+        elif ((len(ns.partition) > 1) and ns.biospart):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --biospart and partition may be specified for driverdisk command.')))", "         elif (ns.source and ns.biospart):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --biospart and --source may be specified for driverdisk command.')))"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 3}, "31": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Eq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Eq_with_Gt", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 47, in runTest\n    self.assert_parse_error(\"driverdisk /dev/sdb2 --source=http://10.0.0.1/disk.img\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -91,7 +91,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        if ((len(ns.partition) == 1) and ns.source):", "+        if ((len(ns.partition) > 1) and ns.source):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one of --source and partition may be specified for driverdisk command.')))", "         if ((not ns.partition) and (not ns.source)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --source or partition must be specified for driverdisk command.')))"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 0}, "19": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "replace_Gt_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "replace_Gt_with_Is", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIs", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/driverdisk.py\", line 28, in runTest\n    self.assert_parse(\"driverdisk /dev/sdb2\", \"driverdisk /dev/sdb2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.driverdisk\", line 132, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nUnexpected arguments to driverdisk command: []\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -88,7 +88,7 @@", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(ns.partition) > 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) is 0):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partition) == 1) and ns.source):"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 1}, "65": {"command": ["cosmic-ray", "worker", "pykickstart.commands.driverdisk", "number_replacer", "9", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/driverdisk.py"], "op-name": "number_replacer", "result-type": "normal", "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 171, "occurrence": 9}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/driverdisk.py", "@@ -122,7 +122,7 @@", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(ns.partition) > 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Only one partition may be specified for driverdisk command.')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) > 1):", "             mapping = {'command': 'driverdisk', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partition) == 1) and ns.source):"]]], "module-name": "pykickstart.commands.driverdisk", "occurrence": 9}}, "_default": {}}