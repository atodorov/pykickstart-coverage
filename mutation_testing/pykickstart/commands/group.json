{"work-parameters": {"1": {"test-runner": "nose", "test-args": ["-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/group.py"], "timeout": 7.07391}}, "work-items": {"27": {"op-name": "replace_In_with_IsNot", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithIsNot"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nUserWarning: A group with the name test has already been defined.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/group.py\", line 65, in runTest\n    group --name=othertest\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \ngroup --name=test\ngroup --name=othertest: A group with the name test has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "@@ -57,7 +57,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, gd)", "         gd.lineno = self.lineno", "-        if (gd in self.dataList()):", "+        if (gd is not self.dataList()):", "             warnings.warn((_('A group with the name %s has already been defined.') % gd.name))", "         return gd", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.group", "replace_In_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/group.py"], "module-name": "pykickstart.commands.group", "result-type": "normal", "occurrence": 0}, "9": {"op-name": "replace_Eq_with_In", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "@@ -17,7 +17,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.name == y.name)", "+        return (self.name in y.name)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.group", "replace_Eq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/group.py"], "module-name": "pykickstart.commands.group", "result-type": "normal", "occurrence": 0}, "16": {"op-name": "replace_In_with_Gt", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithGt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nTypeError: unorderable types: F12_GroupData() > list()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/group.py\", line 65, in runTest\n    group --name=othertest\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \ngroup --name=test\ngroup --name=othertest: unorderable types: F12_GroupData() > list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "@@ -57,7 +57,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, gd)", "         gd.lineno = self.lineno", "-        if (gd in self.dataList()):", "+        if (gd > self.dataList()):", "             warnings.warn((_('A group with the name %s has already been defined.') % gd.name))", "         return gd", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.group", "replace_In_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/group.py"], "module-name": "pykickstart.commands.group", "result-type": "normal", "occurrence": 0}, "6": {"op-name": "boolean_replacer", "result-data": [{"line_number": 38, "occurrence": 0, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "@@ -16,7 +16,7 @@", " ", "     def __eq__(self, y):", "         if (not y):", "-            return False", "+            return True", "         return (self.name == y.name)", " ", "     def __ne__(self, y):"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.group", "boolean_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/group.py"], "module-name": "pykickstart.commands.group", "result-type": "normal", "occurrence": 0}, "26": {"op-name": "replace_Eq_with_NotEq", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/group.py\", line 35, in runTest\n    self.assertTrue(self.assert_parse(\"group --name=testA\") != self.assert_parse(\"group --name=testB\"))\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\n  File \"pykickstart.commands.group\", line 43, in __ne__\nRecursionError: maximum recursion depth exceeded while calling a Python object\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "@@ -20,7 +20,7 @@", "         return (self.name == y.name)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self != y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.group", "replace_Eq_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/group.py"], "module-name": "pykickstart.commands.group", "result-type": "normal", "occurrence": 1}, "4": {"op-name": "replace_Eq_with_NotIn", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nUserWarning: A group with the name othertest has already been defined.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/group.py\", line 65, in runTest\n    group --name=othertest\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \ngroup --name=test\ngroup --name=othertest: A group with the name othertest has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "@@ -17,7 +17,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.name == y.name)", "+        return (self.name not in y.name)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.group", "replace_Eq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/group.py"], "module-name": "pykickstart.commands.group", "result-type": "normal", "occurrence": 0}, "8": {"op-name": "replace_In_with_Lt", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nTypeError: unorderable types: F12_GroupData() < list()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/group.py\", line 65, in runTest\n    group --name=othertest\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \ngroup --name=test\ngroup --name=othertest: unorderable types: F12_GroupData() < list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "@@ -57,7 +57,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, gd)", "         gd.lineno = self.lineno", "-        if (gd in self.dataList()):", "+        if (gd < self.dataList()):", "             warnings.warn((_('A group with the name %s has already been defined.') % gd.name))", "         return gd", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.group", "replace_In_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/group.py"], "module-name": "pykickstart.commands.group", "result-type": "normal", "occurrence": 0}, "7": {"op-name": "boolean_replacer", "result-data": [{"line_number": 79, "occurrence": 1, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/group.py\", line 40, in runTest\n    self.assert_parse_error(\"group\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "@@ -48,7 +48,7 @@", " ", "     def _getParser(self):", "         op = KSOptionParser(prog='group', description='\\n            Creates a new user group on the system. If a group with the given\\n            name or GID already exists, this command will fail. In addition,\\n            the ``user`` command can be used to create a new group for the\\n            newly created user.', version=F12)", "-        op.add_argument('--name', required=True, version=F12, help='Provides the name of the new group.')", "+        op.add_argument('--name', required=False, version=F12, help='Provides the name of the new group.')", "         op.add_argument('--gid', type=int, version=F12, help=\"\\n                        The group's GID. If not provided, this defaults to the\\n                        next available non-system GID.\")", "         return op", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.group", "boolean_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/group.py"], "module-name": "pykickstart.commands.group", "result-type": "normal", "occurrence": 1}, "5": {"op-name": "replace_Eq_with_NotIn", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/group.py\", line 35, in runTest\n    self.assertTrue(self.assert_parse(\"group --name=testA\") != self.assert_parse(\"group --name=testB\"))\n  File \"pykickstart.commands.group\", line 43, in __ne__\nTypeError: argument of type 'F12_GroupData' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "@@ -20,7 +20,7 @@", "         return (self.name == y.name)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self not in y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.group", "replace_Eq_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/group.py"], "module-name": "pykickstart.commands.group", "result-type": "normal", "occurrence": 1}, "13": {"op-name": "replace_In_with_Eq", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nAttributeError: 'list' object has no attribute 'name'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/group.py\", line 65, in runTest\n    group --name=othertest\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \ngroup --name=test\ngroup --name=othertest: 'list' object has no attribute 'name'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "@@ -57,7 +57,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, gd)", "         gd.lineno = self.lineno", "-        if (gd in self.dataList()):", "+        if (gd == self.dataList()):", "             warnings.warn((_('A group with the name %s has already been defined.') % gd.name))", "         return gd", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.group", "replace_In_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/group.py"], "module-name": "pykickstart.commands.group", "result-type": "normal", "occurrence": 0}, "3": {"op-name": "replace_Eq_with_LtE", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/group.py\", line 35, in runTest\n    self.assertTrue(self.assert_parse(\"group --name=testA\") != self.assert_parse(\"group --name=testB\"))\n  File \"pykickstart.commands.group\", line 43, in __ne__\nTypeError: unorderable types: F12_GroupData() <= F12_GroupData()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "@@ -20,7 +20,7 @@", "         return (self.name == y.name)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self <= y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.group", "replace_Eq_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/group.py"], "module-name": "pykickstart.commands.group", "result-type": "normal", "occurrence": 1}, "18": {"op-name": "replace_Eq_with_Gt", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/group.py\", line 35, in runTest\n    self.assertTrue(self.assert_parse(\"group --name=testA\") != self.assert_parse(\"group --name=testB\"))\n  File \"pykickstart.commands.group\", line 43, in __ne__\nTypeError: unorderable types: F12_GroupData() > F12_GroupData()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "@@ -20,7 +20,7 @@", "         return (self.name == y.name)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self > y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.group", "replace_Eq_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/group.py"], "module-name": "pykickstart.commands.group", "result-type": "normal", "occurrence": 1}, "28": {"op-name": "number_replacer", "result-data": [{"line_number": 60, "occurrence": 0, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "@@ -35,7 +35,7 @@", "     removedKeywords = KickstartCommand.removedKeywords", "     removedAttrs = KickstartCommand.removedAttrs", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         KickstartCommand.__init__(self, writePriority, *args, **kwargs)", "         self.op = self._getParser()", "         self.groupList = kwargs.get('groupList', [])"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.group", "number_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/group.py"], "module-name": "pykickstart.commands.group", "result-type": "normal", "occurrence": 0}, "1": {"op-name": "replace_In_with_GtE", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nTypeError: unorderable types: F12_GroupData() >= list()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/group.py\", line 65, in runTest\n    group --name=othertest\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \ngroup --name=test\ngroup --name=othertest: unorderable types: F12_GroupData() >= list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "@@ -57,7 +57,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, gd)", "         gd.lineno = self.lineno", "-        if (gd in self.dataList()):", "+        if (gd >= self.dataList()):", "             warnings.warn((_('A group with the name %s has already been defined.') % gd.name))", "         return gd", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.group", "replace_In_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/group.py"], "module-name": "pykickstart.commands.group", "result-type": "normal", "occurrence": 0}, "23": {"op-name": "replace_In_with_LtE", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nTypeError: unorderable types: F12_GroupData() <= list()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/group.py\", line 65, in runTest\n    group --name=othertest\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \ngroup --name=test\ngroup --name=othertest: unorderable types: F12_GroupData() <= list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "@@ -57,7 +57,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, gd)", "         gd.lineno = self.lineno", "-        if (gd in self.dataList()):", "+        if (gd <= self.dataList()):", "             warnings.warn((_('A group with the name %s has already been defined.') % gd.name))", "         return gd", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.group", "replace_In_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/group.py"], "module-name": "pykickstart.commands.group", "result-type": "normal", "occurrence": 0}, "25": {"op-name": "replace_Eq_with_NotEq", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nUserWarning: A group with the name othertest has already been defined.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/group.py\", line 65, in runTest\n    group --name=othertest\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \ngroup --name=test\ngroup --name=othertest: A group with the name othertest has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "@@ -17,7 +17,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.name == y.name)", "+        return (self.name != y.name)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.group", "replace_Eq_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/group.py"], "module-name": "pykickstart.commands.group", "result-type": "normal", "occurrence": 0}, "2": {"op-name": "replace_Eq_with_LtE", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nUserWarning: A group with the name othertest has already been defined.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/group.py\", line 65, in runTest\n    group --name=othertest\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \ngroup --name=test\ngroup --name=othertest: A group with the name othertest has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "@@ -17,7 +17,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.name == y.name)", "+        return (self.name <= y.name)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.group", "replace_Eq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/group.py"], "module-name": "pykickstart.commands.group", "result-type": "normal", "occurrence": 0}, "22": {"op-name": "replace_Eq_with_Lt", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/group.py\", line 35, in runTest\n    self.assertTrue(self.assert_parse(\"group --name=testA\") != self.assert_parse(\"group --name=testB\"))\n  File \"pykickstart.commands.group\", line 43, in __ne__\nTypeError: unorderable types: F12_GroupData() < F12_GroupData()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "@@ -20,7 +20,7 @@", "         return (self.name == y.name)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self < y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.group", "replace_Eq_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/group.py"], "module-name": "pykickstart.commands.group", "result-type": "normal", "occurrence": 1}, "12": {"op-name": "replace_Eq_with_GtE", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/group.py\", line 35, in runTest\n    self.assertTrue(self.assert_parse(\"group --name=testA\") != self.assert_parse(\"group --name=testB\"))\n  File \"pykickstart.commands.group\", line 43, in __ne__\nTypeError: unorderable types: F12_GroupData() >= F12_GroupData()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "@@ -20,7 +20,7 @@", "         return (self.name == y.name)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self >= y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.group", "replace_Eq_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/group.py"], "module-name": "pykickstart.commands.group", "result-type": "normal", "occurrence": 1}, "24": {"op-name": "replace_In_with_Is", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/group.py\", line 69, in runTest\n    group --name=test --gid=1010\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "@@ -57,7 +57,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, gd)", "         gd.lineno = self.lineno", "-        if (gd in self.dataList()):", "+        if (gd is self.dataList()):", "             warnings.warn((_('A group with the name %s has already been defined.') % gd.name))", "         return gd", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.group", "replace_In_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/group.py"], "module-name": "pykickstart.commands.group", "result-type": "normal", "occurrence": 0}, "29": {"op-name": "replace_Eq_with_Is", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/group.py\", line 69, in runTest\n    group --name=test --gid=1010\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "@@ -17,7 +17,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.name == y.name)", "+        return (self.name is y.name)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.group", "replace_Eq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/group.py"], "module-name": "pykickstart.commands.group", "result-type": "normal", "occurrence": 0}, "21": {"op-name": "replace_Eq_with_Lt", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nUserWarning: A group with the name othertest has already been defined.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/group.py\", line 65, in runTest\n    group --name=othertest\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \ngroup --name=test\ngroup --name=othertest: A group with the name othertest has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "@@ -17,7 +17,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.name == y.name)", "+        return (self.name < y.name)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.group", "replace_Eq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/group.py"], "module-name": "pykickstart.commands.group", "result-type": "normal", "occurrence": 0}, "19": {"op-name": "replace_Eq_with_IsNot", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nUserWarning: A group with the name othertest has already been defined.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/group.py\", line 65, in runTest\n    group --name=othertest\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \ngroup --name=test\ngroup --name=othertest: A group with the name othertest has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "@@ -17,7 +17,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.name == y.name)", "+        return (self.name is not y.name)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.group", "replace_Eq_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/group.py"], "module-name": "pykickstart.commands.group", "result-type": "normal", "occurrence": 0}, "20": {"op-name": "replace_Eq_with_IsNot", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/group.py\", line 35, in runTest\n    self.assertTrue(self.assert_parse(\"group --name=testA\") != self.assert_parse(\"group --name=testB\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "@@ -20,7 +20,7 @@", "         return (self.name == y.name)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self is not y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.group", "replace_Eq_with_IsNot", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/group.py"], "module-name": "pykickstart.commands.group", "result-type": "normal", "occurrence": 1}, "10": {"op-name": "replace_Eq_with_In", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/group.py\", line 35, in runTest\n    self.assertTrue(self.assert_parse(\"group --name=testA\") != self.assert_parse(\"group --name=testB\"))\n  File \"pykickstart.commands.group\", line 43, in __ne__\nTypeError: argument of type 'F12_GroupData' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "@@ -20,7 +20,7 @@", "         return (self.name == y.name)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self in y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.group", "replace_Eq_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/group.py"], "module-name": "pykickstart.commands.group", "result-type": "normal", "occurrence": 1}, "11": {"op-name": "replace_Eq_with_GtE", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "@@ -17,7 +17,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.name == y.name)", "+        return (self.name >= y.name)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.group", "replace_Eq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/group.py"], "module-name": "pykickstart.commands.group", "result-type": "normal", "occurrence": 0}, "17": {"op-name": "replace_Eq_with_Gt", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/group.py\", line 69, in runTest\n    group --name=test --gid=1010\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "@@ -17,7 +17,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.name == y.name)", "+        return (self.name > y.name)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.group", "replace_Eq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/group.py"], "module-name": "pykickstart.commands.group", "result-type": "normal", "occurrence": 0}, "15": {"op-name": "replace_In_with_NotEq", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithNotEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nUserWarning: A group with the name test has already been defined.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/group.py\", line 65, in runTest\n    group --name=othertest\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \ngroup --name=test\ngroup --name=othertest: A group with the name test has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "@@ -57,7 +57,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, gd)", "         gd.lineno = self.lineno", "-        if (gd in self.dataList()):", "+        if (gd != self.dataList()):", "             warnings.warn((_('A group with the name %s has already been defined.') % gd.name))", "         return gd", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.group", "replace_In_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/group.py"], "module-name": "pykickstart.commands.group", "result-type": "normal", "occurrence": 0}, "30": {"op-name": "replace_Eq_with_Is", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "@@ -20,7 +20,7 @@", "         return (self.name == y.name)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self is y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.group", "replace_Eq_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/group.py"], "module-name": "pykickstart.commands.group", "result-type": "normal", "occurrence": 1}, "14": {"op-name": "replace_In_with_NotIn", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nUserWarning: A group with the name test has already been defined.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/group.py\", line 65, in runTest\n    group --name=othertest\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \ngroup --name=test\ngroup --name=othertest: A group with the name test has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/group.py", "@@ -57,7 +57,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, gd)", "         gd.lineno = self.lineno", "-        if (gd in self.dataList()):", "+        if (gd not in self.dataList()):", "             warnings.warn((_('A group with the name %s has already been defined.') % gd.name))", "         return gd", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.group", "replace_In_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/group.py"], "module-name": "pykickstart.commands.group", "result-type": "normal", "occurrence": 0}}, "_default": {}}