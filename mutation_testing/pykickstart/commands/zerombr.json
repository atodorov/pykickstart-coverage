{"_default": {}, "work-parameters": {"1": {"test-args": ["-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zerombr.py"], "test-runner": "nose", "timeout": 4.69759}}, "work-items": {"5": {"module-name": "pykickstart.commands.zerombr", "command": ["cosmic-ray", "worker", "pykickstart.commands.zerombr", "replace_Gt_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zerombr.py"], "op-name": "replace_Gt_with_NotEq", "result-type": "normal", "occurrence": 0, "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotEq"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zerombr.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zerombr.py", "@@ -26,7 +26,7 @@", " ", "     def parse(self, args):", "         extra = self.op.parse_known_args(args=args, lineno=self.lineno)[1]", "-        if (len(extra) > 0):", "+        if (len(extra) != 0):", "             warnings.warn((_('Ignoring deprecated option on line %s:  The zerombr command no longer takes any options.  In future releases, this will result in a fatal error from kickstart.  Please modify your kickstart file to remove any options.') % self.lineno), DeprecationWarning)", "         self.zerombr = True", "         return self"]]]}, "15": {"module-name": "pykickstart.commands.zerombr", "command": ["cosmic-ray", "worker", "pykickstart.commands.zerombr", "replace_Gt_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zerombr.py"], "op-name": "replace_Gt_with_GtE", "result-type": "normal", "occurrence": 0, "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithGtE"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zerombr.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zerombr.py", "@@ -26,7 +26,7 @@", " ", "     def parse(self, args):", "         extra = self.op.parse_known_args(args=args, lineno=self.lineno)[1]", "-        if (len(extra) > 0):", "+        if (len(extra) >= 0):", "             warnings.warn((_('Ignoring deprecated option on line %s:  The zerombr command no longer takes any options.  In future releases, this will result in a fatal error from kickstart.  Please modify your kickstart file to remove any options.') % self.lineno), DeprecationWarning)", "         self.zerombr = True", "         return self"]]]}, "11": {"module-name": "pykickstart.commands.zerombr", "command": ["cosmic-ray", "worker", "pykickstart.commands.zerombr", "replace_Gt_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zerombr.py"], "op-name": "replace_Gt_with_NotIn", "result-type": "normal", "occurrence": 0, "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zerombr.py\", line 29, in runTest\n    self.assert_parse(\"zerombr\", \"zerombr\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.zerombr\", line 59, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zerombr.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zerombr.py", "@@ -26,7 +26,7 @@", " ", "     def parse(self, args):", "         extra = self.op.parse_known_args(args=args, lineno=self.lineno)[1]", "-        if (len(extra) > 0):", "+        if (len(extra) not in 0):", "             warnings.warn((_('Ignoring deprecated option on line %s:  The zerombr command no longer takes any options.  In future releases, this will result in a fatal error from kickstart.  Please modify your kickstart file to remove any options.') % self.lineno), DeprecationWarning)", "         self.zerombr = True", "         return self"]]]}, "10": {"module-name": "pykickstart.commands.zerombr", "command": ["cosmic-ray", "worker", "pykickstart.commands.zerombr", "number_replacer", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zerombr.py"], "op-name": "number_replacer", "result-type": "normal", "occurrence": 2, "result-data": [{"line_number": 59, "occurrence": 2, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zerombr.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zerombr.py", "@@ -26,7 +26,7 @@", " ", "     def parse(self, args):", "         extra = self.op.parse_known_args(args=args, lineno=self.lineno)[1]", "-        if (len(extra) > 0):", "+        if (len(extra) > 1):", "             warnings.warn((_('Ignoring deprecated option on line %s:  The zerombr command no longer takes any options.  In future releases, this will result in a fatal error from kickstart.  Please modify your kickstart file to remove any options.') % self.lineno), DeprecationWarning)", "         self.zerombr = True", "         return self"]]]}, "6": {"module-name": "pykickstart.commands.zerombr", "command": ["cosmic-ray", "worker", "pykickstart.commands.zerombr", "replace_Gt_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zerombr.py"], "op-name": "replace_Gt_with_LtE", "result-type": "normal", "occurrence": 0, "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLtE"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zerombr.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zerombr.py", "@@ -26,7 +26,7 @@", " ", "     def parse(self, args):", "         extra = self.op.parse_known_args(args=args, lineno=self.lineno)[1]", "-        if (len(extra) > 0):", "+        if (len(extra) <= 0):", "             warnings.warn((_('Ignoring deprecated option on line %s:  The zerombr command no longer takes any options.  In future releases, this will result in a fatal error from kickstart.  Please modify your kickstart file to remove any options.') % self.lineno), DeprecationWarning)", "         self.zerombr = True", "         return self"]]]}, "7": {"module-name": "pykickstart.commands.zerombr", "command": ["cosmic-ray", "worker", "pykickstart.commands.zerombr", "replace_Gt_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zerombr.py"], "op-name": "replace_Gt_with_In", "result-type": "normal", "occurrence": 0, "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zerombr.py\", line 29, in runTest\n    self.assert_parse(\"zerombr\", \"zerombr\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.zerombr\", line 59, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zerombr.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zerombr.py", "@@ -26,7 +26,7 @@", " ", "     def parse(self, args):", "         extra = self.op.parse_known_args(args=args, lineno=self.lineno)[1]", "-        if (len(extra) > 0):", "+        if (len(extra) in 0):", "             warnings.warn((_('Ignoring deprecated option on line %s:  The zerombr command no longer takes any options.  In future releases, this will result in a fatal error from kickstart.  Please modify your kickstart file to remove any options.') % self.lineno), DeprecationWarning)", "         self.zerombr = True", "         return self"]]]}, "9": {"module-name": "pykickstart.commands.zerombr", "command": ["cosmic-ray", "worker", "pykickstart.commands.zerombr", "number_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zerombr.py"], "op-name": "number_replacer", "result-type": "normal", "occurrence": 1, "result-data": [{"line_number": 57, "occurrence": 1, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zerombr.py\", line 29, in runTest\n    self.assert_parse(\"zerombr\", \"zerombr\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.zerombr\", line 57, in parse\nIndexError: tuple index out of range\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zerombr.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zerombr.py", "@@ -25,7 +25,7 @@", "         return op", " ", "     def parse(self, args):", "-        extra = self.op.parse_known_args(args=args, lineno=self.lineno)[1]", "+        extra = self.op.parse_known_args(args=args, lineno=self.lineno)[2]", "         if (len(extra) > 0):", "             warnings.warn((_('Ignoring deprecated option on line %s:  The zerombr command no longer takes any options.  In future releases, this will result in a fatal error from kickstart.  Please modify your kickstart file to remove any options.') % self.lineno), DeprecationWarning)", "         self.zerombr = True"]]]}, "8": {"module-name": "pykickstart.commands.zerombr", "command": ["cosmic-ray", "worker", "pykickstart.commands.zerombr", "number_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zerombr.py"], "op-name": "number_replacer", "result-type": "normal", "occurrence": 0, "result-data": [{"line_number": 31, "occurrence": 0, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zerombr.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zerombr.py", "@@ -9,7 +9,7 @@", "     removedKeywords = KickstartCommand.removedKeywords", "     removedAttrs = KickstartCommand.removedAttrs", " ", "-    def __init__(self, writePriority=110, *args, **kwargs):", "+    def __init__(self, writePriority=111, *args, **kwargs):", "         KickstartCommand.__init__(self, writePriority, *args, **kwargs)", "         self.op = self._getParser()", "         self.zerombr = kwargs.get('zerombr', False)"]]]}, "12": {"module-name": "pykickstart.commands.zerombr", "command": ["cosmic-ray", "worker", "pykickstart.commands.zerombr", "replace_Gt_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zerombr.py"], "op-name": "replace_Gt_with_Is", "result-type": "normal", "occurrence": 0, "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIs"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zerombr.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zerombr.py", "@@ -26,7 +26,7 @@", " ", "     def parse(self, args):", "         extra = self.op.parse_known_args(args=args, lineno=self.lineno)[1]", "-        if (len(extra) > 0):", "+        if (len(extra) is 0):", "             warnings.warn((_('Ignoring deprecated option on line %s:  The zerombr command no longer takes any options.  In future releases, this will result in a fatal error from kickstart.  Please modify your kickstart file to remove any options.') % self.lineno), DeprecationWarning)", "         self.zerombr = True", "         return self"]]]}, "3": {"module-name": "pykickstart.commands.zerombr", "command": ["cosmic-ray", "worker", "pykickstart.commands.zerombr", "boolean_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zerombr.py"], "op-name": "boolean_replacer", "result-type": "normal", "occurrence": 1, "result-data": [{"line_number": 62, "occurrence": 1, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zerombr.py\", line 29, in runTest\n    self.assert_parse(\"zerombr\", \"zerombr\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'zerombr\\n'\n+ zerombr\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zerombr.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zerombr.py", "@@ -28,7 +28,7 @@", "         extra = self.op.parse_known_args(args=args, lineno=self.lineno)[1]", "         if (len(extra) > 0):", "             warnings.warn((_('Ignoring deprecated option on line %s:  The zerombr command no longer takes any options.  In future releases, this will result in a fatal error from kickstart.  Please modify your kickstart file to remove any options.') % self.lineno), DeprecationWarning)", "-        self.zerombr = True", "+        self.zerombr = False", "         return self", " ", " class F9_ZeroMbr(FC3_ZeroMbr):"]]]}, "1": {"module-name": "pykickstart.commands.zerombr", "command": ["cosmic-ray", "worker", "pykickstart.commands.zerombr", "replace_Gt_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zerombr.py"], "op-name": "replace_Gt_with_IsNot", "result-type": "normal", "occurrence": 0, "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIsNot"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zerombr.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zerombr.py", "@@ -26,7 +26,7 @@", " ", "     def parse(self, args):", "         extra = self.op.parse_known_args(args=args, lineno=self.lineno)[1]", "-        if (len(extra) > 0):", "+        if (len(extra) is not 0):", "             warnings.warn((_('Ignoring deprecated option on line %s:  The zerombr command no longer takes any options.  In future releases, this will result in a fatal error from kickstart.  Please modify your kickstart file to remove any options.') % self.lineno), DeprecationWarning)", "         self.zerombr = True", "         return self"]]]}, "14": {"module-name": "pykickstart.commands.zerombr", "command": ["cosmic-ray", "worker", "pykickstart.commands.zerombr", "replace_Gt_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zerombr.py"], "op-name": "replace_Gt_with_Eq", "result-type": "normal", "occurrence": 0, "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithEq"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zerombr.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zerombr.py", "@@ -26,7 +26,7 @@", " ", "     def parse(self, args):", "         extra = self.op.parse_known_args(args=args, lineno=self.lineno)[1]", "-        if (len(extra) > 0):", "+        if (len(extra) == 0):", "             warnings.warn((_('Ignoring deprecated option on line %s:  The zerombr command no longer takes any options.  In future releases, this will result in a fatal error from kickstart.  Please modify your kickstart file to remove any options.') % self.lineno), DeprecationWarning)", "         self.zerombr = True", "         return self"]]]}, "2": {"module-name": "pykickstart.commands.zerombr", "command": ["cosmic-ray", "worker", "pykickstart.commands.zerombr", "boolean_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zerombr.py"], "op-name": "boolean_replacer", "result-type": "normal", "occurrence": 0, "result-data": [{"line_number": 34, "occurrence": 0, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zerombr.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zerombr.py", "@@ -12,7 +12,7 @@", "     def __init__(self, writePriority=110, *args, **kwargs):", "         KickstartCommand.__init__(self, writePriority, *args, **kwargs)", "         self.op = self._getParser()", "-        self.zerombr = kwargs.get('zerombr', False)", "+        self.zerombr = kwargs.get('zerombr', True)", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]]}, "4": {"module-name": "pykickstart.commands.zerombr", "command": ["cosmic-ray", "worker", "pykickstart.commands.zerombr", "boolean_replacer", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zerombr.py"], "op-name": "boolean_replacer", "result-type": "normal", "occurrence": 2, "result-data": [{"line_number": 71, "occurrence": 2, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zerombr.py\", line 36, in runTest\n    self.assert_parse(\"zerombr\", \"zerombr\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'zerombr\\n'\n+ zerombr\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zerombr.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zerombr.py", "@@ -37,6 +37,6 @@", " ", "     def parse(self, args):", "         self.op.parse_args(args=args, lineno=self.lineno)", "-        self.zerombr = True", "+        self.zerombr = False", "         return self", " "]]]}, "13": {"module-name": "pykickstart.commands.zerombr", "command": ["cosmic-ray", "worker", "pykickstart.commands.zerombr", "replace_Gt_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zerombr.py"], "op-name": "replace_Gt_with_Lt", "result-type": "normal", "occurrence": 0, "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLt"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zerombr.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zerombr.py", "@@ -26,7 +26,7 @@", " ", "     def parse(self, args):", "         extra = self.op.parse_known_args(args=args, lineno=self.lineno)[1]", "-        if (len(extra) > 0):", "+        if (len(extra) < 0):", "             warnings.warn((_('Ignoring deprecated option on line %s:  The zerombr command no longer takes any options.  In future releases, this will result in a fatal error from kickstart.  Please modify your kickstart file to remove any options.') % self.lineno), DeprecationWarning)", "         self.zerombr = True", "         return self"]]]}}}