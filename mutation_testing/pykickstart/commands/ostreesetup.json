{"work-items": {"10": {"result-type": "normal", "occurrence": 0, "op-name": "replace_Is_with_Eq", "module-name": "pykickstart.commands.ostreesetup", "command": ["cosmic-ray", "worker", "pykickstart.commands.ostreesetup", "replace_Is_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ostreesetup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithEq", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ostreesetup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ostreesetup.py", "@@ -50,7 +50,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (self.remote is None):", "+        if (self.remote == None):", "             self.remote = self.osname", "         if (not self.url.startswith(('file:', 'http:', 'https:'))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='ostree repos must use file, HTTP or HTTPS protocol.'))"]]]}, "1": {"result-type": "normal", "occurrence": 0, "op-name": "replace_Is_with_GtE", "module-name": "pykickstart.commands.ostreesetup", "command": ["cosmic-ray", "worker", "pykickstart.commands.ostreesetup", "replace_Is_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ostreesetup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithGtE", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ostreesetup\", line 80, in parse\nTypeError: unorderable types: NoneType() >= NoneType()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ostreesetup.py\", line 29, in runTest\n    self.assert_parse(\"ostreesetup --osname=fedora-atomic --url=http://example.com/repo --ref=fedora-atomic/sometest/base/core\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: unorderable types: NoneType() >= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ostreesetup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ostreesetup.py", "@@ -50,7 +50,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (self.remote is None):", "+        if (self.remote >= None):", "             self.remote = self.osname", "         if (not self.url.startswith(('file:', 'http:', 'https:'))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='ostree repos must use file, HTTP or HTTPS protocol.'))"]]]}, "5": {"result-type": "normal", "occurrence": 1, "op-name": "boolean_replacer", "module-name": "pykickstart.commands.ostreesetup", "command": ["cosmic-ray", "worker", "pykickstart.commands.ostreesetup", "boolean_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ostreesetup.py"], "result-data": [{"operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 65, "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ostreesetup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ostreesetup.py", "@@ -40,7 +40,7 @@", " ", "     def _getParser(self):", "         op = KSOptionParser(prog='ostreesetup', description='\\n                            Used for OSTree installations. See\\n                            https://wiki.gnome.org/action/show/Projects/OSTree\\n                            for more information about OSTree.\\n                            ', version=F21)", "-        op.add_argument('--osname', required=True, version=F21, help='\\n                        Management root for OS installation.')", "+        op.add_argument('--osname', required=False, version=F21, help='\\n                        Management root for OS installation.')", "         op.add_argument('--remote', version=F21, help='\\n                        Management root for OS installation.')", "         op.add_argument('--url', required=True, version=F21, help='\\n                        Repository URL.')", "         op.add_argument('--ref', required=True, version=F21, help='\\n                        Name of branch inside the repository.')"]]]}, "2": {"result-type": "normal", "occurrence": 0, "op-name": "replace_Is_with_IsNot", "module-name": "pykickstart.commands.ostreesetup", "command": ["cosmic-ray", "worker", "pykickstart.commands.ostreesetup", "replace_Is_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ostreesetup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithIsNot", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ostreesetup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ostreesetup.py", "@@ -50,7 +50,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (self.remote is None):", "+        if (self.remote is not None):", "             self.remote = self.osname", "         if (not self.url.startswith(('file:', 'http:', 'https:'))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='ostree repos must use file, HTTP or HTTPS protocol.'))"]]]}, "6": {"result-type": "normal", "occurrence": 2, "op-name": "boolean_replacer", "module-name": "pykickstart.commands.ostreesetup", "command": ["cosmic-ray", "worker", "pykickstart.commands.ostreesetup", "boolean_replacer", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ostreesetup.py"], "result-data": [{"operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 69, "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ostreesetup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ostreesetup.py", "@@ -42,7 +42,7 @@", "         op = KSOptionParser(prog='ostreesetup', description='\\n                            Used for OSTree installations. See\\n                            https://wiki.gnome.org/action/show/Projects/OSTree\\n                            for more information about OSTree.\\n                            ', version=F21)", "         op.add_argument('--osname', required=True, version=F21, help='\\n                        Management root for OS installation.')", "         op.add_argument('--remote', version=F21, help='\\n                        Management root for OS installation.')", "-        op.add_argument('--url', required=True, version=F21, help='\\n                        Repository URL.')", "+        op.add_argument('--url', required=False, version=F21, help='\\n                        Repository URL.')", "         op.add_argument('--ref', required=True, version=F21, help='\\n                        Name of branch inside the repository.')", "         op.add_argument('--nogpg', action='store_true', version=F21, help='\\n                        Disable GPG key verification.')", "         return op"]]]}, "11": {"result-type": "normal", "occurrence": 0, "op-name": "replace_Is_with_In", "module-name": "pykickstart.commands.ostreesetup", "command": ["cosmic-ray", "worker", "pykickstart.commands.ostreesetup", "replace_Is_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ostreesetup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithIn", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ostreesetup\", line 80, in parse\nTypeError: argument of type 'NoneType' is not iterable\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ostreesetup.py\", line 29, in runTest\n    self.assert_parse(\"ostreesetup --osname=fedora-atomic --url=http://example.com/repo --ref=fedora-atomic/sometest/base/core\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ostreesetup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ostreesetup.py", "@@ -50,7 +50,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (self.remote is None):", "+        if (self.remote in None):", "             self.remote = self.osname", "         if (not self.url.startswith(('file:', 'http:', 'https:'))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='ostree repos must use file, HTTP or HTTPS protocol.'))"]]]}, "7": {"result-type": "normal", "occurrence": 3, "op-name": "boolean_replacer", "module-name": "pykickstart.commands.ostreesetup", "command": ["cosmic-ray", "worker", "pykickstart.commands.ostreesetup", "boolean_replacer", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ostreesetup.py"], "result-data": [{"operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 71, "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ostreesetup.py\", line 37, in runTest\n    self.assert_parse_error(\"ostreesetup --os=fedora-atomic --url=http://example.com/repo\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ostreesetup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ostreesetup.py", "@@ -43,7 +43,7 @@", "         op.add_argument('--osname', required=True, version=F21, help='\\n                        Management root for OS installation.')", "         op.add_argument('--remote', version=F21, help='\\n                        Management root for OS installation.')", "         op.add_argument('--url', required=True, version=F21, help='\\n                        Repository URL.')", "-        op.add_argument('--ref', required=True, version=F21, help='\\n                        Name of branch inside the repository.')", "+        op.add_argument('--ref', required=False, version=F21, help='\\n                        Name of branch inside the repository.')", "         op.add_argument('--nogpg', action='store_true', version=F21, help='\\n                        Disable GPG key verification.')", "         return op", " "]]]}, "13": {"result-type": "normal", "occurrence": 0, "op-name": "replace_Is_with_NotEq", "module-name": "pykickstart.commands.ostreesetup", "command": ["cosmic-ray", "worker", "pykickstart.commands.ostreesetup", "replace_Is_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ostreesetup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ostreesetup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ostreesetup.py", "@@ -50,7 +50,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (self.remote is None):", "+        if (self.remote != None):", "             self.remote = self.osname", "         if (not self.url.startswith(('file:', 'http:', 'https:'))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='ostree repos must use file, HTTP or HTTPS protocol.'))"]]]}, "4": {"result-type": "normal", "occurrence": 0, "op-name": "boolean_replacer", "module-name": "pykickstart.commands.ostreesetup", "command": ["cosmic-ray", "worker", "pykickstart.commands.ostreesetup", "boolean_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ostreesetup.py"], "result-data": [{"operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 34, "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ostreesetup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ostreesetup.py", "@@ -15,7 +15,7 @@", "         self.remote = kwargs.get('remote', self.osname)", "         self.url = kwargs.get('url', None)", "         self.ref = kwargs.get('ref', None)", "-        self.nogpg = kwargs.get('nogpg', False)", "+        self.nogpg = kwargs.get('nogpg', True)", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]]}, "8": {"result-type": "normal", "occurrence": 0, "op-name": "replace_Is_with_Lt", "module-name": "pykickstart.commands.ostreesetup", "command": ["cosmic-ray", "worker", "pykickstart.commands.ostreesetup", "replace_Is_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ostreesetup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithLt", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ostreesetup\", line 80, in parse\nTypeError: unorderable types: NoneType() < NoneType()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ostreesetup.py\", line 29, in runTest\n    self.assert_parse(\"ostreesetup --osname=fedora-atomic --url=http://example.com/repo --ref=fedora-atomic/sometest/base/core\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: unorderable types: NoneType() < NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ostreesetup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ostreesetup.py", "@@ -50,7 +50,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (self.remote is None):", "+        if (self.remote < None):", "             self.remote = self.osname", "         if (not self.url.startswith(('file:', 'http:', 'https:'))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='ostree repos must use file, HTTP or HTTPS protocol.'))"]]]}, "3": {"result-type": "normal", "occurrence": 0, "op-name": "replace_Is_with_NotIn", "module-name": "pykickstart.commands.ostreesetup", "command": ["cosmic-ray", "worker", "pykickstart.commands.ostreesetup", "replace_Is_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ostreesetup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ostreesetup\", line 80, in parse\nTypeError: argument of type 'NoneType' is not iterable\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ostreesetup.py\", line 29, in runTest\n    self.assert_parse(\"ostreesetup --osname=fedora-atomic --url=http://example.com/repo --ref=fedora-atomic/sometest/base/core\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ostreesetup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ostreesetup.py", "@@ -50,7 +50,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (self.remote is None):", "+        if (self.remote not in None):", "             self.remote = self.osname", "         if (not self.url.startswith(('file:', 'http:', 'https:'))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='ostree repos must use file, HTTP or HTTPS protocol.'))"]]]}, "9": {"result-type": "normal", "occurrence": 0, "op-name": "replace_Is_with_LtE", "module-name": "pykickstart.commands.ostreesetup", "command": ["cosmic-ray", "worker", "pykickstart.commands.ostreesetup", "replace_Is_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ostreesetup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithLtE", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ostreesetup\", line 80, in parse\nTypeError: unorderable types: NoneType() <= NoneType()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ostreesetup.py\", line 29, in runTest\n    self.assert_parse(\"ostreesetup --osname=fedora-atomic --url=http://example.com/repo --ref=fedora-atomic/sometest/base/core\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: unorderable types: NoneType() <= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ostreesetup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ostreesetup.py", "@@ -50,7 +50,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (self.remote is None):", "+        if (self.remote <= None):", "             self.remote = self.osname", "         if (not self.url.startswith(('file:', 'http:', 'https:'))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='ostree repos must use file, HTTP or HTTPS protocol.'))"]]]}, "12": {"result-type": "normal", "occurrence": 0, "op-name": "replace_Is_with_Gt", "module-name": "pykickstart.commands.ostreesetup", "command": ["cosmic-ray", "worker", "pykickstart.commands.ostreesetup", "replace_Is_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ostreesetup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithGt", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ostreesetup\", line 80, in parse\nTypeError: unorderable types: NoneType() > NoneType()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ostreesetup.py\", line 29, in runTest\n    self.assert_parse(\"ostreesetup --osname=fedora-atomic --url=http://example.com/repo --ref=fedora-atomic/sometest/base/core\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: unorderable types: NoneType() > NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ostreesetup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ostreesetup.py", "@@ -50,7 +50,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (self.remote is None):", "+        if (self.remote > None):", "             self.remote = self.osname", "         if (not self.url.startswith(('file:', 'http:', 'https:'))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='ostree repos must use file, HTTP or HTTPS protocol.'))"]]]}}, "work-parameters": {"1": {"timeout": 9.154069999999999, "test-runner": "nose", "test-args": ["-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ostreesetup.py"]}}, "_default": {}}