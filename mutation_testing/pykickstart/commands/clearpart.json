{"work-parameters": {"1": {"test-args": ["-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "timeout": 18.63128, "test-runner": "nose"}}, "_default": {}, "work-items": {"30": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Gt_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.clearpart\", line 109, in __str__\n  File \"pykickstart.commands.clearpart\", line 57, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -31,7 +31,7 @@", "             initstr = ' --initlabel'", "         else:", "             initstr = ''", "-        if (len(self.drives) > 0):", "+        if (len(self.drives) in 0):", "             drivestr = (' --drives=' + ','.join(self.drives))", "         else:", "             drivestr = ''"]]], "op-name": "replace_Gt_with_In", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "18": {"occurrence": 2, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Eq_with_Lt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'clearpart\\n' != 'clearpart --all\\n'\n- clearpart\n+ clearpart --all\n?          ++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -23,7 +23,7 @@", "             clearstr = ' --none'", "         elif (self.type == CLEARPART_TYPE_LINUX):", "             clearstr = ' --linux'", "-        elif (self.type == CLEARPART_TYPE_ALL):", "+        elif (self.type < CLEARPART_TYPE_ALL):", "             clearstr = ' --all'", "         else:", "             clearstr = ''"]]], "op-name": "replace_Eq_with_Lt", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "47": {"occurrence": 2, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Eq_with_LtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -23,7 +23,7 @@", "             clearstr = ' --none'", "         elif (self.type == CLEARPART_TYPE_LINUX):", "             clearstr = ' --linux'", "-        elif (self.type == CLEARPART_TYPE_ALL):", "+        elif (self.type <= CLEARPART_TYPE_ALL):", "             clearstr = ' --all'", "         else:", "             clearstr = ''"]]], "op-name": "replace_Eq_with_LtE", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "41": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Is_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'clearpart --all\\n'\n+ clearpart --all\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -17,7 +17,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.type is None):", "+        if (self.type is not None):", "             return retval", "         if (self.type == CLEARPART_TYPE_NONE):", "             clearstr = ' --none'"]]], "op-name": "replace_Is_with_IsNot", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "16": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Eq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'clearpart --none\\n' != 'clearpart --all\\n'\n- clearpart --none\n?             ^^^^\n+ clearpart --all\n?             ^^^\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -19,7 +19,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (self.type is None):", "             return retval", "-        if (self.type == CLEARPART_TYPE_NONE):", "+        if (self.type < CLEARPART_TYPE_NONE):", "             clearstr = ' --none'", "         elif (self.type == CLEARPART_TYPE_LINUX):", "             clearstr = ' --linux'"]]], "op-name": "replace_Eq_with_Lt", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "3": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Eq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 38, in runTest\n    \"clearpart --list=sda2,sda3,disk/by-label/foo\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'clearpart --none --list=sda2,sda3,disk/by-label/foo\\n' != 'clearpart --list=sda2,sda3,disk/by-label/foo\\n'\n- clearpart --none --list=sda2,sda3,disk/by-label/foo\n?          -------\n+ clearpart --list=sda2,sda3,disk/by-label/foo\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -19,7 +19,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (self.type is None):", "             return retval", "-        if (self.type == CLEARPART_TYPE_NONE):", "+        if (self.type >= CLEARPART_TYPE_NONE):", "             clearstr = ' --none'", "         elif (self.type == CLEARPART_TYPE_LINUX):", "             clearstr = ' --linux'"]]], "op-name": "replace_Eq_with_GtE", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "24": {"occurrence": 2, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Eq_with_Gt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'clearpart\\n' != 'clearpart --all\\n'\n- clearpart\n+ clearpart --all\n?          ++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -23,7 +23,7 @@", "             clearstr = ' --none'", "         elif (self.type == CLEARPART_TYPE_LINUX):", "             clearstr = ' --linux'", "-        elif (self.type == CLEARPART_TYPE_ALL):", "+        elif (self.type > CLEARPART_TYPE_ALL):", "             clearstr = ' --all'", "         else:", "             clearstr = ''"]]], "op-name": "replace_Eq_with_Gt", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "9": {"occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Eq_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'clearpart --linux\\n' != 'clearpart --all\\n'\n- clearpart --linux\n?              ^^^^\n+ clearpart --all\n?             + ^\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -21,7 +21,7 @@", "             return retval", "         if (self.type == CLEARPART_TYPE_NONE):", "             clearstr = ' --none'", "-        elif (self.type == CLEARPART_TYPE_LINUX):", "+        elif (self.type != CLEARPART_TYPE_LINUX):", "             clearstr = ' --linux'", "         elif (self.type == CLEARPART_TYPE_ALL):", "             clearstr = ' --all'"]]], "op-name": "replace_Eq_with_NotEq", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "22": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Eq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 11, in runTest\n    self.assert_parse(\"clearpart --none\", \"clearpart --none\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'clearpart\\n' != 'clearpart --none\\n'\n- clearpart\n+ clearpart --none\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -19,7 +19,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (self.type is None):", "             return retval", "-        if (self.type == CLEARPART_TYPE_NONE):", "+        if (self.type > CLEARPART_TYPE_NONE):", "             clearstr = ' --none'", "         elif (self.type == CLEARPART_TYPE_LINUX):", "             clearstr = ' --linux'"]]], "op-name": "replace_Eq_with_Gt", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "55": {"occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Eq_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.clearpart\", line 109, in __str__\n  File \"pykickstart.commands.clearpart\", line 45, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -21,7 +21,7 @@", "             return retval", "         if (self.type == CLEARPART_TYPE_NONE):", "             clearstr = ' --none'", "-        elif (self.type == CLEARPART_TYPE_LINUX):", "+        elif (self.type not in CLEARPART_TYPE_LINUX):", "             clearstr = ' --linux'", "         elif (self.type == CLEARPART_TYPE_ALL):", "             clearstr = ' --all'"]]], "op-name": "replace_Eq_with_NotIn", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "40": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Is_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.clearpart\", line 109, in __str__\n  File \"pykickstart.commands.clearpart\", line 40, in __str__\nTypeError: unorderable types: int() <= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -17,7 +17,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.type is None):", "+        if (self.type <= None):", "             return retval", "         if (self.type == CLEARPART_TYPE_NONE):", "             clearstr = ' --none'"]]], "op-name": "replace_Is_with_LtE", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "7": {"occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "boolean_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 85}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'clearpart --all --initlabel\\n' != 'clearpart --all\\n'\n- clearpart --all --initlabel\n+ clearpart --all\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -42,7 +42,7 @@", "         op = KSOptionParser(prog='clearpart', description='\\n                            Removes partitions from the system, prior to creation\\n                            of new partitions. By default, no partitions are\\n                            removed.\\n\\n                            If the clearpart command is used, then the ``--onpart``\\n                            command cannot be used on a logical partition.', version=FC3)", "         op.add_argument('--all', dest='type', action='store_const', const=CLEARPART_TYPE_ALL, version=FC3, help='Erases all partitions from the system.')", "         op.add_argument('--drives', type=commaSplit, help='\\n                        Specifies which drives to clear partitions from. For\\n                        example, the following clears the partitions on the\\n                        first two drives on the primary IDE controller:\\n\\n                        ``clearpart --all --drives=sda,sdb``', version=FC3)", "-        op.add_argument('--initlabel', dest='initAll', action='store_true', default=False, version=FC3, help=\"\\n                        Initializes the disk label to the default for your\\n                        architecture (for example msdos for x86 and gpt for\\n                        Itanium). This is only meaningful in combination with\\n                        the '--all' option.\")", "+        op.add_argument('--initlabel', dest='initAll', action='store_true', default=True, version=FC3, help=\"\\n                        Initializes the disk label to the default for your\\n                        architecture (for example msdos for x86 and gpt for\\n                        Itanium). This is only meaningful in combination with\\n                        the '--all' option.\")", "         op.add_argument('--linux', dest='type', action='store_const', const=CLEARPART_TYPE_LINUX, version=FC3, help='Erases all Linux partitions.')", "         op.add_argument('--none', dest='type', action='store_const', const=CLEARPART_TYPE_NONE, version=FC3, help='\\n                        Do not remove any partitions. This is the default')", "         return op"]]], "op-name": "boolean_replacer", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "32": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Is_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.clearpart\", line 109, in __str__\n  File \"pykickstart.commands.clearpart\", line 40, in __str__\nTypeError: unorderable types: int() >= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -17,7 +17,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.type is None):", "+        if (self.type >= None):", "             return retval", "         if (self.type == CLEARPART_TYPE_NONE):", "             clearstr = ' --none'"]]], "op-name": "replace_Is_with_GtE", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "14": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Gt_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.clearpart\", line 109, in __str__\n  File \"pykickstart.commands.clearpart\", line 57, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -31,7 +31,7 @@", "             initstr = ' --initlabel'", "         else:", "             initstr = ''", "-        if (len(self.drives) > 0):", "+        if (len(self.drives) not in 0):", "             drivestr = (' --drives=' + ','.join(self.drives))", "         else:", "             drivestr = ''"]]], "op-name": "replace_Gt_with_NotIn", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "19": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Eq_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'clearpart --none\\n' != 'clearpart --all\\n'\n- clearpart --none\n?             ^^^^\n+ clearpart --all\n?             ^^^\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -19,7 +19,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (self.type is None):", "             return retval", "-        if (self.type == CLEARPART_TYPE_NONE):", "+        if (self.type is not CLEARPART_TYPE_NONE):", "             clearstr = ' --none'", "         elif (self.type == CLEARPART_TYPE_LINUX):", "             clearstr = ' --linux'"]]], "op-name": "replace_Eq_with_IsNot", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "45": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Eq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'clearpart --none\\n' != 'clearpart --all\\n'\n- clearpart --none\n?             ^^^^\n+ clearpart --all\n?             ^^^\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -19,7 +19,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (self.type is None):", "             return retval", "-        if (self.type == CLEARPART_TYPE_NONE):", "+        if (self.type <= CLEARPART_TYPE_NONE):", "             clearstr = ' --none'", "         elif (self.type == CLEARPART_TYPE_LINUX):", "             clearstr = ' --linux'"]]], "op-name": "replace_Eq_with_LtE", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "2": {"occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Gt_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -60,7 +60,7 @@", " ", "     def __str__(self):", "         s = super(F17_ClearPart, self).__str__()", "-        if (s and (len(self.devices) > 0)):", "+        if (s and (len(self.devices) != 0)):", "             s = s.rstrip()", "             s += (' --list=' + ','.join(self.devices))", "             s += '\\n'"]]], "op-name": "replace_Gt_with_NotEq", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "56": {"occurrence": 2, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Eq_with_NotIn", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.clearpart\", line 109, in __str__\n  File \"pykickstart.commands.clearpart\", line 47, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -23,7 +23,7 @@", "             clearstr = ' --none'", "         elif (self.type == CLEARPART_TYPE_LINUX):", "             clearstr = ' --linux'", "-        elif (self.type == CLEARPART_TYPE_ALL):", "+        elif (self.type not in CLEARPART_TYPE_ALL):", "             clearstr = ' --all'", "         else:", "             clearstr = ''"]]], "op-name": "replace_Eq_with_NotIn", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "38": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Gt_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'clearpart --all --drives=\\n' != 'clearpart --all\\n'\n- clearpart --all --drives=\n?                ----------\n+ clearpart --all\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -31,7 +31,7 @@", "             initstr = ' --initlabel'", "         else:", "             initstr = ''", "-        if (len(self.drives) > 0):", "+        if (len(self.drives) is 0):", "             drivestr = (' --drives=' + ','.join(self.drives))", "         else:", "             drivestr = ''"]]], "op-name": "replace_Gt_with_Is", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "44": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Is_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.clearpart\", line 109, in __str__\n  File \"pykickstart.commands.clearpart\", line 40, in __str__\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -17,7 +17,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.type is None):", "+        if (self.type not in None):", "             return retval", "         if (self.type == CLEARPART_TYPE_NONE):", "             clearstr = ' --none'"]]], "op-name": "replace_Is_with_NotIn", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "6": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "boolean_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 34}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -12,7 +12,7 @@", "         KickstartCommand.__init__(self, writePriority, *args, **kwargs)", "         self.op = self._getParser()", "         self.drives = kwargs.get('drives', [])", "-        self.initAll = kwargs.get('initAll', False)", "+        self.initAll = kwargs.get('initAll', True)", "         self.type = kwargs.get('type', None)", " ", "     def __str__(self):"]]], "op-name": "boolean_replacer", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "23": {"occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Eq_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'clearpart --linux\\n' != 'clearpart --all\\n'\n- clearpart --linux\n?              ^^^^\n+ clearpart --all\n?             + ^\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -21,7 +21,7 @@", "             return retval", "         if (self.type == CLEARPART_TYPE_NONE):", "             clearstr = ' --none'", "-        elif (self.type == CLEARPART_TYPE_LINUX):", "+        elif (self.type > CLEARPART_TYPE_LINUX):", "             clearstr = ' --linux'", "         elif (self.type == CLEARPART_TYPE_ALL):", "             clearstr = ' --all'"]]], "op-name": "replace_Eq_with_Gt", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "8": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Eq_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'clearpart --none\\n' != 'clearpart --all\\n'\n- clearpart --none\n?             ^^^^\n+ clearpart --all\n?             ^^^\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -19,7 +19,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (self.type is None):", "             return retval", "-        if (self.type == CLEARPART_TYPE_NONE):", "+        if (self.type != CLEARPART_TYPE_NONE):", "             clearstr = ' --none'", "         elif (self.type == CLEARPART_TYPE_LINUX):", "             clearstr = ' --linux'"]]], "op-name": "replace_Eq_with_NotEq", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "33": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Is_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.clearpart\", line 109, in __str__\n  File \"pykickstart.commands.clearpart\", line 40, in __str__\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -17,7 +17,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.type is None):", "+        if (self.type in None):", "             return retval", "         if (self.type == CLEARPART_TYPE_NONE):", "             clearstr = ' --none'"]]], "op-name": "replace_Is_with_In", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "11": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Is_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -17,7 +17,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.type is None):", "+        if (self.type == None):", "             return retval", "         if (self.type == CLEARPART_TYPE_NONE):", "             clearstr = ' --none'"]]], "op-name": "replace_Is_with_Eq", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "50": {"occurrence": 2, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "number_replacer", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 110}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -60,7 +60,7 @@", " ", "     def __str__(self):", "         s = super(F17_ClearPart, self).__str__()", "-        if (s and (len(self.devices) > 0)):", "+        if (s and (len(self.devices) > 1)):", "             s = s.rstrip()", "             s += (' --list=' + ','.join(self.devices))", "             s += '\\n'"]]], "op-name": "number_replacer", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "26": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Is_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.clearpart\", line 109, in __str__\n  File \"pykickstart.commands.clearpart\", line 40, in __str__\nTypeError: unorderable types: int() > NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -17,7 +17,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.type is None):", "+        if (self.type > None):", "             return retval", "         if (self.type == CLEARPART_TYPE_NONE):", "             clearstr = ' --none'"]]], "op-name": "replace_Is_with_Gt", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "27": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Eq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -19,7 +19,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (self.type is None):", "             return retval", "-        if (self.type == CLEARPART_TYPE_NONE):", "+        if (self.type is CLEARPART_TYPE_NONE):", "             clearstr = ' --none'", "         elif (self.type == CLEARPART_TYPE_LINUX):", "             clearstr = ' --linux'"]]], "op-name": "replace_Eq_with_Is", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "37": {"occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Gt_with_Eq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'clearpart --all --list=\\n' != 'clearpart --all\\n'\n- clearpart --all --list=\n?                --------\n+ clearpart --all\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -60,7 +60,7 @@", " ", "     def __str__(self):", "         s = super(F17_ClearPart, self).__str__()", "-        if (s and (len(self.devices) > 0)):", "+        if (s and (len(self.devices) == 0)):", "             s = s.rstrip()", "             s += (' --list=' + ','.join(self.devices))", "             s += '\\n'"]]], "op-name": "replace_Gt_with_Eq", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "12": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Gt_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -31,7 +31,7 @@", "             initstr = ' --initlabel'", "         else:", "             initstr = ''", "-        if (len(self.drives) > 0):", "+        if (len(self.drives) is not 0):", "             drivestr = (' --drives=' + ','.join(self.drives))", "         else:", "             drivestr = ''"]]], "op-name": "replace_Gt_with_IsNot", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "39": {"occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Gt_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'clearpart --all --list=\\n' != 'clearpart --all\\n'\n- clearpart --all --list=\n?                --------\n+ clearpart --all\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -60,7 +60,7 @@", " ", "     def __str__(self):", "         s = super(F17_ClearPart, self).__str__()", "-        if (s and (len(self.devices) > 0)):", "+        if (s and (len(self.devices) is 0)):", "             s = s.rstrip()", "             s += (' --list=' + ','.join(self.devices))", "             s += '\\n'"]]], "op-name": "replace_Gt_with_Is", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "28": {"occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Eq_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -21,7 +21,7 @@", "             return retval", "         if (self.type == CLEARPART_TYPE_NONE):", "             clearstr = ' --none'", "-        elif (self.type == CLEARPART_TYPE_LINUX):", "+        elif (self.type is CLEARPART_TYPE_LINUX):", "             clearstr = ' --linux'", "         elif (self.type == CLEARPART_TYPE_ALL):", "             clearstr = ' --all'"]]], "op-name": "replace_Eq_with_Is", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "13": {"occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Gt_with_IsNot", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -60,7 +60,7 @@", " ", "     def __str__(self):", "         s = super(F17_ClearPart, self).__str__()", "-        if (s and (len(self.devices) > 0)):", "+        if (s and (len(self.devices) is not 0)):", "             s = s.rstrip()", "             s += (' --list=' + ','.join(self.devices))", "             s += '\\n'"]]], "op-name": "replace_Gt_with_IsNot", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "25": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Is_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'clearpart --all\\n'\n+ clearpart --all\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -17,7 +17,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.type is None):", "+        if (self.type != None):", "             return retval", "         if (self.type == CLEARPART_TYPE_NONE):", "             clearstr = ' --none'"]]], "op-name": "replace_Is_with_NotEq", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "1": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Gt_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -31,7 +31,7 @@", "             initstr = ' --initlabel'", "         else:", "             initstr = ''", "-        if (len(self.drives) > 0):", "+        if (len(self.drives) != 0):", "             drivestr = (' --drives=' + ','.join(self.drives))", "         else:", "             drivestr = ''"]]], "op-name": "replace_Gt_with_NotEq", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "31": {"occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Gt_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.clearpart\", line 110, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -60,7 +60,7 @@", " ", "     def __str__(self):", "         s = super(F17_ClearPart, self).__str__()", "-        if (s and (len(self.devices) > 0)):", "+        if (s and (len(self.devices) in 0)):", "             s = s.rstrip()", "             s += (' --list=' + ','.join(self.devices))", "             s += '\\n'"]]], "op-name": "replace_Gt_with_In", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "46": {"occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Eq_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -21,7 +21,7 @@", "             return retval", "         if (self.type == CLEARPART_TYPE_NONE):", "             clearstr = ' --none'", "-        elif (self.type == CLEARPART_TYPE_LINUX):", "+        elif (self.type <= CLEARPART_TYPE_LINUX):", "             clearstr = ' --linux'", "         elif (self.type == CLEARPART_TYPE_ALL):", "             clearstr = ' --all'"]]], "op-name": "replace_Eq_with_LtE", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "4": {"occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Eq_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'clearpart --linux\\n' != 'clearpart --all\\n'\n- clearpart --linux\n?              ^^^^\n+ clearpart --all\n?             + ^\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -21,7 +21,7 @@", "             return retval", "         if (self.type == CLEARPART_TYPE_NONE):", "             clearstr = ' --none'", "-        elif (self.type == CLEARPART_TYPE_LINUX):", "+        elif (self.type >= CLEARPART_TYPE_LINUX):", "             clearstr = ' --linux'", "         elif (self.type == CLEARPART_TYPE_ALL):", "             clearstr = ' --all'"]]], "op-name": "replace_Eq_with_GtE", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "35": {"occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Gt_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 38, in runTest\n    \"clearpart --list=sda2,sda3,disk/by-label/foo\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'clearpart\\n' != 'clearpart --list=sda2,sda3,disk/by-label/foo\\n'\n- clearpart\n+ clearpart --list=sda2,sda3,disk/by-label/foo\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -60,7 +60,7 @@", " ", "     def __str__(self):", "         s = super(F17_ClearPart, self).__str__()", "-        if (s and (len(self.devices) > 0)):", "+        if (s and (len(self.devices) < 0)):", "             s = s.rstrip()", "             s += (' --list=' + ','.join(self.devices))", "             s += '\\n'"]]], "op-name": "replace_Gt_with_Lt", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "54": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Eq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.clearpart\", line 109, in __str__\n  File \"pykickstart.commands.clearpart\", line 43, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -19,7 +19,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (self.type is None):", "             return retval", "-        if (self.type == CLEARPART_TYPE_NONE):", "+        if (self.type not in CLEARPART_TYPE_NONE):", "             clearstr = ' --none'", "         elif (self.type == CLEARPART_TYPE_LINUX):", "             clearstr = ' --linux'"]]], "op-name": "replace_Eq_with_NotIn", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "10": {"occurrence": 2, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Eq_with_NotEq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'clearpart\\n' != 'clearpart --all\\n'\n- clearpart\n+ clearpart --all\n?          ++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -23,7 +23,7 @@", "             clearstr = ' --none'", "         elif (self.type == CLEARPART_TYPE_LINUX):", "             clearstr = ' --linux'", "-        elif (self.type == CLEARPART_TYPE_ALL):", "+        elif (self.type != CLEARPART_TYPE_ALL):", "             clearstr = ' --all'", "         else:", "             clearstr = ''"]]], "op-name": "replace_Eq_with_NotEq", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "17": {"occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Eq_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 24, in runTest\n    self.assert_parse(\"clearpart --drives=sda,sdb --all --linux --initlabel\", \"clearpart --linux --initlabel --drives=sda,sdb\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'clearpart --initlabel --drives=sda,sdb\\n' != 'clearpart --linux --initlabel --drives=sda,sdb\\n'\n- clearpart --initlabel --drives=sda,sdb\n+ clearpart --linux --initlabel --drives=sda,sdb\n?          ++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -21,7 +21,7 @@", "             return retval", "         if (self.type == CLEARPART_TYPE_NONE):", "             clearstr = ' --none'", "-        elif (self.type == CLEARPART_TYPE_LINUX):", "+        elif (self.type < CLEARPART_TYPE_LINUX):", "             clearstr = ' --linux'", "         elif (self.type == CLEARPART_TYPE_ALL):", "             clearstr = ' --all'"]]], "op-name": "replace_Eq_with_Lt", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "52": {"occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Eq_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.clearpart\", line 109, in __str__\n  File \"pykickstart.commands.clearpart\", line 45, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -21,7 +21,7 @@", "             return retval", "         if (self.type == CLEARPART_TYPE_NONE):", "             clearstr = ' --none'", "-        elif (self.type == CLEARPART_TYPE_LINUX):", "+        elif (self.type in CLEARPART_TYPE_LINUX):", "             clearstr = ' --linux'", "         elif (self.type == CLEARPART_TYPE_ALL):", "             clearstr = ' --all'"]]], "op-name": "replace_Eq_with_In", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "51": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Eq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.clearpart\", line 109, in __str__\n  File \"pykickstart.commands.clearpart\", line 43, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -19,7 +19,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (self.type is None):", "             return retval", "-        if (self.type == CLEARPART_TYPE_NONE):", "+        if (self.type in CLEARPART_TYPE_NONE):", "             clearstr = ' --none'", "         elif (self.type == CLEARPART_TYPE_LINUX):", "             clearstr = ' --linux'"]]], "op-name": "replace_Eq_with_In", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "42": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Gt_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'clearpart --all --drives=\\n' != 'clearpart --all\\n'\n- clearpart --all --drives=\n?                ----------\n+ clearpart --all\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -31,7 +31,7 @@", "             initstr = ' --initlabel'", "         else:", "             initstr = ''", "-        if (len(self.drives) > 0):", "+        if (len(self.drives) >= 0):", "             drivestr = (' --drives=' + ','.join(self.drives))", "         else:", "             drivestr = ''"]]], "op-name": "replace_Gt_with_GtE", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "15": {"occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Gt_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.clearpart\", line 110, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -60,7 +60,7 @@", " ", "     def __str__(self):", "         s = super(F17_ClearPart, self).__str__()", "-        if (s and (len(self.devices) > 0)):", "+        if (s and (len(self.devices) not in 0)):", "             s = s.rstrip()", "             s += (' --list=' + ','.join(self.devices))", "             s += '\\n'"]]], "op-name": "replace_Gt_with_NotIn", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "48": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "number_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 29}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -8,7 +8,7 @@", "     removedKeywords = KickstartCommand.removedKeywords", "     removedAttrs = KickstartCommand.removedAttrs", " ", "-    def __init__(self, writePriority=120, *args, **kwargs):", "+    def __init__(self, writePriority=121, *args, **kwargs):", "         KickstartCommand.__init__(self, writePriority, *args, **kwargs)", "         self.op = self._getParser()", "         self.drives = kwargs.get('drives', [])"]]], "op-name": "number_replacer", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "59": {"occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Gt_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'clearpart --all --list=\\n' != 'clearpart --all\\n'\n- clearpart --all --list=\n?                --------\n+ clearpart --all\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -60,7 +60,7 @@", " ", "     def __str__(self):", "         s = super(F17_ClearPart, self).__str__()", "-        if (s and (len(self.devices) > 0)):", "+        if (s and (len(self.devices) <= 0)):", "             s = s.rstrip()", "             s += (' --list=' + ','.join(self.devices))", "             s += '\\n'"]]], "op-name": "replace_Gt_with_LtE", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "36": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Gt_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'clearpart --all --drives=\\n' != 'clearpart --all\\n'\n- clearpart --all --drives=\n?                ----------\n+ clearpart --all\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -31,7 +31,7 @@", "             initstr = ' --initlabel'", "         else:", "             initstr = ''", "-        if (len(self.drives) > 0):", "+        if (len(self.drives) == 0):", "             drivestr = (' --drives=' + ','.join(self.drives))", "         else:", "             drivestr = ''"]]], "op-name": "replace_Gt_with_Eq", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "21": {"occurrence": 2, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Eq_with_IsNot", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'clearpart\\n' != 'clearpart --all\\n'\n- clearpart\n+ clearpart --all\n?          ++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -23,7 +23,7 @@", "             clearstr = ' --none'", "         elif (self.type == CLEARPART_TYPE_LINUX):", "             clearstr = ' --linux'", "-        elif (self.type == CLEARPART_TYPE_ALL):", "+        elif (self.type is not CLEARPART_TYPE_ALL):", "             clearstr = ' --all'", "         else:", "             clearstr = ''"]]], "op-name": "replace_Eq_with_IsNot", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "20": {"occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Eq_with_IsNot", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'clearpart --linux\\n' != 'clearpart --all\\n'\n- clearpart --linux\n?              ^^^^\n+ clearpart --all\n?             + ^\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -21,7 +21,7 @@", "             return retval", "         if (self.type == CLEARPART_TYPE_NONE):", "             clearstr = ' --none'", "-        elif (self.type == CLEARPART_TYPE_LINUX):", "+        elif (self.type is not CLEARPART_TYPE_LINUX):", "             clearstr = ' --linux'", "         elif (self.type == CLEARPART_TYPE_ALL):", "             clearstr = ' --all'"]]], "op-name": "replace_Eq_with_IsNot", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "5": {"occurrence": 2, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Eq_with_GtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 38, in runTest\n    \"clearpart --list=sda2,sda3,disk/by-label/foo\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'clearpart --all --list=sda2,sda3,disk/by-label/foo\\n' != 'clearpart --list=sda2,sda3,disk/by-label/foo\\n'\n- clearpart --all --list=sda2,sda3,disk/by-label/foo\n?          ------\n+ clearpart --list=sda2,sda3,disk/by-label/foo\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -23,7 +23,7 @@", "             clearstr = ' --none'", "         elif (self.type == CLEARPART_TYPE_LINUX):", "             clearstr = ' --linux'", "-        elif (self.type == CLEARPART_TYPE_ALL):", "+        elif (self.type >= CLEARPART_TYPE_ALL):", "             clearstr = ' --all'", "         else:", "             clearstr = ''"]]], "op-name": "replace_Eq_with_GtE", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "49": {"occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "number_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 57}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 19, in runTest\n    self.assert_parse(\"clearpart --all --drives sda\", \"clearpart --all --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'clearpart --all\\n' != 'clearpart --all --drives=sda\\n'\n- clearpart --all\n+ clearpart --all --drives=sda\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -31,7 +31,7 @@", "             initstr = ' --initlabel'", "         else:", "             initstr = ''", "-        if (len(self.drives) > 0):", "+        if (len(self.drives) > 1):", "             drivestr = (' --drives=' + ','.join(self.drives))", "         else:", "             drivestr = ''"]]], "op-name": "number_replacer", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "53": {"occurrence": 2, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Eq_with_In", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.clearpart\", line 109, in __str__\n  File \"pykickstart.commands.clearpart\", line 47, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -23,7 +23,7 @@", "             clearstr = ' --none'", "         elif (self.type == CLEARPART_TYPE_LINUX):", "             clearstr = ' --linux'", "-        elif (self.type == CLEARPART_TYPE_ALL):", "+        elif (self.type in CLEARPART_TYPE_ALL):", "             clearstr = ' --all'", "         else:", "             clearstr = ''"]]], "op-name": "replace_Eq_with_In", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "58": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Gt_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'clearpart --all --drives=\\n' != 'clearpart --all\\n'\n- clearpart --all --drives=\n?                ----------\n+ clearpart --all\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -31,7 +31,7 @@", "             initstr = ' --initlabel'", "         else:", "             initstr = ''", "-        if (len(self.drives) > 0):", "+        if (len(self.drives) <= 0):", "             drivestr = (' --drives=' + ','.join(self.drives))", "         else:", "             drivestr = ''"]]], "op-name": "replace_Gt_with_LtE", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "34": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Gt_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 19, in runTest\n    self.assert_parse(\"clearpart --all --drives sda\", \"clearpart --all --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'clearpart --all\\n' != 'clearpart --all --drives=sda\\n'\n- clearpart --all\n+ clearpart --all --drives=sda\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -31,7 +31,7 @@", "             initstr = ' --initlabel'", "         else:", "             initstr = ''", "-        if (len(self.drives) > 0):", "+        if (len(self.drives) < 0):", "             drivestr = (' --drives=' + ','.join(self.drives))", "         else:", "             drivestr = ''"]]], "op-name": "replace_Gt_with_Lt", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "57": {"occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Is_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.clearpart\", line 109, in __str__\n  File \"pykickstart.commands.clearpart\", line 40, in __str__\nTypeError: unorderable types: int() < NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -17,7 +17,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.type is None):", "+        if (self.type < None):", "             return retval", "         if (self.type == CLEARPART_TYPE_NONE):", "             clearstr = ' --none'"]]], "op-name": "replace_Is_with_Lt", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "43": {"occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Gt_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 36, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/clearpart.py\", line 10, in runTest\n    self.assert_parse(\"clearpart --all\", \"clearpart --all\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'clearpart --all --list=\\n' != 'clearpart --all\\n'\n- clearpart --all --list=\n?                --------\n+ clearpart --all\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -60,7 +60,7 @@", " ", "     def __str__(self):", "         s = super(F17_ClearPart, self).__str__()", "-        if (s and (len(self.devices) > 0)):", "+        if (s and (len(self.devices) >= 0)):", "             s = s.rstrip()", "             s += (' --list=' + ','.join(self.devices))", "             s += '\\n'"]]], "op-name": "replace_Gt_with_GtE", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}, "29": {"occurrence": 2, "command": ["cosmic-ray", "worker", "pykickstart.commands.clearpart", "replace_Eq_with_Is", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/clearpart.py"], "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/clearpart.py", "@@ -23,7 +23,7 @@", "             clearstr = ' --none'", "         elif (self.type == CLEARPART_TYPE_LINUX):", "             clearstr = ' --linux'", "-        elif (self.type == CLEARPART_TYPE_ALL):", "+        elif (self.type is CLEARPART_TYPE_ALL):", "             clearstr = ' --all'", "         else:", "             clearstr = ''"]]], "op-name": "replace_Eq_with_Is", "module-name": "pykickstart.commands.clearpart", "result-type": "normal"}}}