{"work-items": {"52": {"result-type": "normal", "op-name": "boolean_replacer", "result-data": [{"line_number": 136, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 73, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 126, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --drives , --only-use , or --interactive must be specified for ignoredisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -90,7 +90,7 @@", " ", "     def _getParser(self):", "         op = F8_IgnoreDisk._getParser(self)", "-        op.add_argument('--interactive', action='store_true', default=False, version=RHEL6, help='\\n                        Allow the user manually navigate the advanced storage\\n                        screen.')", "+        op.add_argument('--interactive', action='store_true', default=True, version=RHEL6, help='\\n                        Allow the user manually navigate the advanced storage\\n                        screen.')", "         return op", " ", " class F14_IgnoreDisk(RHEL6_IgnoreDisk):"]]], "occurrence": 2, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "boolean_replacer", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "53": {"result-type": "normal", "op-name": "replace_NotEq_with_Is", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 73, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 126, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --drives , --only-use , or --interactive must be specified for ignoredisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -82,7 +82,7 @@", "             howmany += 1", "         if self.interactive:", "             howmany += 1", "-        if (howmany != 1):", "+        if (howmany is 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives , --only-use , or --interactive must be specified for ignoredisk command.')))", "         if self.interactive:", "             self.ignoredisk = []"]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_NotEq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "56": {"result-type": "normal", "op-name": "replace_Eq_with_Lt", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 38, in runTest\n    self.assert_parse_error(\"ignoredisk\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) < 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Eq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "105": {"result-type": "normal", "op-name": "replace_Gt_with_Lt", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLt", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 54, in runTest\n    self.assert_parse(\"ignoredisk --only-use=sda\", \"ignoredisk --only-use=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'ignoredisk --only-use=sda\\n'\n+ ignoredisk --only-use=sda\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -42,7 +42,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (len(self.ignoredisk) > 0):", "             retval += ('ignoredisk --drives=%s\\n' % ','.join(self.ignoredisk))", "-        elif (len(self.onlyuse) > 0):", "+        elif (len(self.onlyuse) < 0):", "             retval += ('ignoredisk --only-use=%s\\n' % ','.join(self.onlyuse))", "         return retval", " "]]], "occurrence": 2, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_Lt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "8": {"result-type": "normal", "op-name": "number_replacer", "result-data": [{"line_number": 30, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -9,7 +9,7 @@", "     removedKeywords = KickstartCommand.removedKeywords", "     removedAttrs = KickstartCommand.removedAttrs", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         KickstartCommand.__init__(self, writePriority, *args, **kwargs)", "         self.op = self._getParser()", "         self.ignoredisk = kwargs.get('ignoredisk', [])"]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "number_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "76": {"result-type": "normal", "op-name": "replace_Gt_with_NotEq", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotEq", "occurrence": 4}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) != 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 4, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_NotEq", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "67": {"result-type": "normal", "op-name": "replace_Gt_with_Is", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIs", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 84, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --drives or --only-use must be specified for ignoredisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) is 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 4, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_Is", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "24": {"result-type": "normal", "op-name": "number_replacer", "result-data": [{"line_number": 125, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "occurrence": 16}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 73, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 126, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --drives , --only-use , or --interactive must be specified for ignoredisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -82,7 +82,7 @@", "             howmany += 1", "         if self.interactive:", "             howmany += 1", "-        if (howmany != 1):", "+        if (howmany != 2):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives , --only-use , or --interactive must be specified for ignoredisk command.')))", "         if self.interactive:", "             self.ignoredisk = []"]]], "occurrence": 16, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "number_replacer", "16", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "101": {"result-type": "normal", "op-name": "replace_Gt_with_Eq", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithEq", "occurrence": 5}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 73, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 126, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --drives , --only-use , or --interactive must be specified for ignoredisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -76,7 +76,7 @@", "     def parse(self, args):", "         retval = F8_IgnoreDisk.parse(self, args)", "         howmany = 0", "-        if (len(self.ignoredisk) > 0):", "+        if (len(self.ignoredisk) == 0):", "             howmany += 1", "         if (len(self.onlyuse) > 0):", "             howmany += 1"]]], "occurrence": 5, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_Eq", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "70": {"result-type": "normal", "op-name": "replace_Eq_with_NotIn", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 83, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) not in 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Eq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "23": {"result-type": "normal", "op-name": "number_replacer", "result-data": [{"line_number": 124, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "occurrence": 15}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 76, in runTest\n    self.assert_parse(\"ignoredisk --interactive\", \"ignoredisk --interactive\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 126, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --drives , --only-use , or --interactive must be specified for ignoredisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -81,7 +81,7 @@", "         if (len(self.onlyuse) > 0):", "             howmany += 1", "         if self.interactive:", "-            howmany += 1", "+            howmany += 2", "         if (howmany != 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives , --only-use , or --interactive must be specified for ignoredisk command.')))", "         if self.interactive:"]]], "occurrence": 15, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "number_replacer", "15", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "75": {"result-type": "normal", "op-name": "replace_Gt_with_NotEq", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotEq", "occurrence": 3}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) != 0) and (len(self.onlyuse) > 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 3, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_NotEq", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "86": {"result-type": "normal", "op-name": "replace_Gt_with_NotIn", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotIn", "occurrence": 6}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 73, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 121, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -78,7 +78,7 @@", "         howmany = 0", "         if (len(self.ignoredisk) > 0):", "             howmany += 1", "-        if (len(self.onlyuse) > 0):", "+        if (len(self.onlyuse) not in 0):", "             howmany += 1", "         if self.interactive:", "             howmany += 1"]]], "occurrence": 6, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_NotIn", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "78": {"result-type": "normal", "op-name": "replace_Gt_with_NotEq", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotEq", "occurrence": 6}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -78,7 +78,7 @@", "         howmany = 0", "         if (len(self.ignoredisk) > 0):", "             howmany += 1", "-        if (len(self.onlyuse) > 0):", "+        if (len(self.onlyuse) != 0):", "             howmany += 1", "         if self.interactive:", "             howmany += 1"]]], "occurrence": 6, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_NotEq", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "64": {"result-type": "normal", "op-name": "replace_Gt_with_Is", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIs", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'ignoredisk --drives=sda\\n'\n+ ignoredisk --drives=sda\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -40,7 +40,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (len(self.ignoredisk) > 0):", "+        if (len(self.ignoredisk) is 0):", "             retval += ('ignoredisk --drives=%s\\n' % ','.join(self.ignoredisk))", "         elif (len(self.onlyuse) > 0):", "             retval += ('ignoredisk --only-use=%s\\n' % ','.join(self.onlyuse))"]]], "occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "35": {"result-type": "normal", "op-name": "replace_Gt_with_GtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithGtE", "occurrence": 6}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 73, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 126, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --drives , --only-use , or --interactive must be specified for ignoredisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -78,7 +78,7 @@", "         howmany = 0", "         if (len(self.ignoredisk) > 0):", "             howmany += 1", "-        if (len(self.onlyuse) > 0):", "+        if (len(self.onlyuse) >= 0):", "             howmany += 1", "         if self.interactive:", "             howmany += 1"]]], "occurrence": 6, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_GtE", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "21": {"result-type": "normal", "op-name": "number_replacer", "result-data": [{"line_number": 121, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "occurrence": 13}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 73, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 54, in runTest\n    self.assert_parse(\"ignoredisk --only-use=sda\", \"ignoredisk --only-use=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 126, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --drives , --only-use , or --interactive must be specified for ignoredisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -78,7 +78,7 @@", "         howmany = 0", "         if (len(self.ignoredisk) > 0):", "             howmany += 1", "-        if (len(self.onlyuse) > 0):", "+        if (len(self.onlyuse) > 1):", "             howmany += 1", "         if self.interactive:", "             howmany += 1"]]], "occurrence": 13, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "number_replacer", "13", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "36": {"result-type": "normal", "op-name": "replace_Gt_with_In", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIn", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.ignoredisk\", line 39, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -16,7 +16,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (len(self.ignoredisk) > 0):", "+        if (len(self.ignoredisk) in 0):", "             retval += ('ignoredisk --drives=%s\\n' % ','.join(self.ignoredisk))", "         return retval", " "]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "99": {"result-type": "normal", "op-name": "replace_Gt_with_Eq", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithEq", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 54, in runTest\n    self.assert_parse(\"ignoredisk --only-use=sda\", \"ignoredisk --only-use=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 84, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --drives or --only-use must be specified for ignoredisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) == 0) and (len(self.onlyuse) > 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 3, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_Eq", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "3": {"result-type": "normal", "op-name": "replace_Gt_with_IsNot", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIsNot", "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -42,7 +42,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (len(self.ignoredisk) > 0):", "             retval += ('ignoredisk --drives=%s\\n' % ','.join(self.ignoredisk))", "-        elif (len(self.onlyuse) > 0):", "+        elif (len(self.onlyuse) is not 0):", "             retval += ('ignoredisk --only-use=%s\\n' % ','.join(self.onlyuse))", "         return retval", " "]]], "occurrence": 2, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_IsNot", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "55": {"result-type": "normal", "op-name": "replace_Eq_with_NotEq", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 38, in runTest\n    self.assert_parse_error(\"ignoredisk\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) != 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Eq_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "28": {"result-type": "normal", "op-name": "replace_Eq_with_Is", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) is 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Eq_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "14": {"result-type": "normal", "op-name": "number_replacer", "result-data": [{"line_number": 83, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "occurrence": 6}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 38, in runTest\n    self.assert_parse_error(\"ignoredisk\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 1)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 6, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "number_replacer", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "95": {"result-type": "normal", "op-name": "replace_NotEq_with_GtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 73, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 126, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --drives , --only-use , or --interactive must be specified for ignoredisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -82,7 +82,7 @@", "             howmany += 1", "         if self.interactive:", "             howmany += 1", "-        if (howmany != 1):", "+        if (howmany >= 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives , --only-use , or --interactive must be specified for ignoredisk command.')))", "         if self.interactive:", "             self.ignoredisk = []"]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_NotEq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "104": {"result-type": "normal", "op-name": "replace_Gt_with_Lt", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLt", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'ignoredisk --drives=sda\\n'\n+ ignoredisk --drives=sda\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -40,7 +40,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (len(self.ignoredisk) > 0):", "+        if (len(self.ignoredisk) < 0):", "             retval += ('ignoredisk --drives=%s\\n' % ','.join(self.ignoredisk))", "         elif (len(self.onlyuse) > 0):", "             retval += ('ignoredisk --only-use=%s\\n' % ','.join(self.onlyuse))"]]], "occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "4": {"result-type": "normal", "op-name": "replace_Gt_with_IsNot", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIsNot", "occurrence": 3}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) is not 0) and (len(self.onlyuse) > 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 3, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_IsNot", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "68": {"result-type": "normal", "op-name": "replace_Gt_with_Is", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIs", "occurrence": 5}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 73, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 126, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --drives , --only-use , or --interactive must be specified for ignoredisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -76,7 +76,7 @@", "     def parse(self, args):", "         retval = F8_IgnoreDisk.parse(self, args)", "         howmany = 0", "-        if (len(self.ignoredisk) > 0):", "+        if (len(self.ignoredisk) is 0):", "             howmany += 1", "         if (len(self.onlyuse) > 0):", "             howmany += 1"]]], "occurrence": 5, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_Is", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "25": {"result-type": "normal", "op-name": "replace_Eq_with_In", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 83, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) in 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Eq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "103": {"result-type": "normal", "op-name": "replace_Gt_with_Lt", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLt", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'ignoredisk --drives=sda\\n'\n+ ignoredisk --drives=sda\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -16,7 +16,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (len(self.ignoredisk) > 0):", "+        if (len(self.ignoredisk) < 0):", "             retval += ('ignoredisk --drives=%s\\n' % ','.join(self.ignoredisk))", "         return retval", " "]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "42": {"result-type": "normal", "op-name": "replace_Gt_with_In", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIn", "occurrence": 6}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 73, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 121, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -78,7 +78,7 @@", "         howmany = 0", "         if (len(self.ignoredisk) > 0):", "             howmany += 1", "-        if (len(self.onlyuse) > 0):", "+        if (len(self.onlyuse) in 0):", "             howmany += 1", "         if self.interactive:", "             howmany += 1"]]], "occurrence": 6, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_In", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "33": {"result-type": "normal", "op-name": "replace_Gt_with_GtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithGtE", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 84, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --drives or --only-use must be specified for ignoredisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) >= 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 4, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_GtE", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "57": {"result-type": "normal", "op-name": "replace_Eq_with_Lt", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 38, in runTest\n    self.assert_parse_error(\"ignoredisk\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) < 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Eq_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "109": {"result-type": "normal", "op-name": "replace_Gt_with_Lt", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLt", "occurrence": 6}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 73, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 54, in runTest\n    self.assert_parse(\"ignoredisk --only-use=sda\", \"ignoredisk --only-use=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 126, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --drives , --only-use , or --interactive must be specified for ignoredisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -78,7 +78,7 @@", "         howmany = 0", "         if (len(self.ignoredisk) > 0):", "             howmany += 1", "-        if (len(self.onlyuse) > 0):", "+        if (len(self.onlyuse) < 0):", "             howmany += 1", "         if self.interactive:", "             howmany += 1"]]], "occurrence": 6, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_Lt", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "48": {"result-type": "normal", "op-name": "replace_Gt_with_LtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLtE", "occurrence": 5}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 73, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 126, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --drives , --only-use , or --interactive must be specified for ignoredisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -76,7 +76,7 @@", "     def parse(self, args):", "         retval = F8_IgnoreDisk.parse(self, args)", "         howmany = 0", "-        if (len(self.ignoredisk) > 0):", "+        if (len(self.ignoredisk) <= 0):", "             howmany += 1", "         if (len(self.onlyuse) > 0):", "             howmany += 1"]]], "occurrence": 5, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_LtE", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "89": {"result-type": "normal", "op-name": "replace_Eq_with_GtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 84, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --drives or --only-use must be specified for ignoredisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) >= 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Eq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "77": {"result-type": "normal", "op-name": "replace_Gt_with_NotEq", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotEq", "occurrence": 5}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -76,7 +76,7 @@", "     def parse(self, args):", "         retval = F8_IgnoreDisk.parse(self, args)", "         howmany = 0", "-        if (len(self.ignoredisk) > 0):", "+        if (len(self.ignoredisk) != 0):", "             howmany += 1", "         if (len(self.onlyuse) > 0):", "             howmany += 1"]]], "occurrence": 5, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_NotEq", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "49": {"result-type": "normal", "op-name": "replace_Gt_with_LtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLtE", "occurrence": 6}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 73, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 126, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --drives , --only-use , or --interactive must be specified for ignoredisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -78,7 +78,7 @@", "         howmany = 0", "         if (len(self.ignoredisk) > 0):", "             howmany += 1", "-        if (len(self.onlyuse) > 0):", "+        if (len(self.onlyuse) <= 0):", "             howmany += 1", "         if self.interactive:", "             howmany += 1"]]], "occurrence": 6, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_LtE", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "63": {"result-type": "normal", "op-name": "replace_Gt_with_Is", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIs", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'ignoredisk --drives=sda\\n'\n+ ignoredisk --drives=sda\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -16,7 +16,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (len(self.ignoredisk) > 0):", "+        if (len(self.ignoredisk) is 0):", "             retval += ('ignoredisk --drives=%s\\n' % ','.join(self.ignoredisk))", "         return retval", " "]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "60": {"result-type": "normal", "op-name": "replace_NotEq_with_LtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 73, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 126, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --drives , --only-use , or --interactive must be specified for ignoredisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -82,7 +82,7 @@", "             howmany += 1", "         if self.interactive:", "             howmany += 1", "-        if (howmany != 1):", "+        if (howmany <= 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives , --only-use , or --interactive must be specified for ignoredisk command.')))", "         if self.interactive:", "             self.ignoredisk = []"]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_NotEq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "79": {"result-type": "normal", "op-name": "replace_NotEq_with_Lt", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 73, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 67, in runTest\n    self.assert_parse_error(\"ignoredisk --drives=sda --only-use=sdb\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -82,7 +82,7 @@", "             howmany += 1", "         if self.interactive:", "             howmany += 1", "-        if (howmany != 1):", "+        if (howmany < 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives , --only-use , or --interactive must be specified for ignoredisk command.')))", "         if self.interactive:", "             self.ignoredisk = []"]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_NotEq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "61": {"result-type": "normal", "op-name": "replace_NotEq_with_Gt", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 73, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 38, in runTest\n    self.assert_parse_error(\"ignoredisk\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -82,7 +82,7 @@", "             howmany += 1", "         if self.interactive:", "             howmany += 1", "-        if (howmany != 1):", "+        if (howmany > 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives , --only-use , or --interactive must be specified for ignoredisk command.')))", "         if self.interactive:", "             self.ignoredisk = []"]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_NotEq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "58": {"result-type": "normal", "op-name": "replace_Eq_with_IsNot", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 84, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --drives or --only-use must be specified for ignoredisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) is not 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Eq_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "11": {"result-type": "normal", "op-name": "number_replacer", "result-data": [{"line_number": 72, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'ignoredisk --drives=sda\\n'\n+ ignoredisk --drives=sda\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -40,7 +40,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (len(self.ignoredisk) > 0):", "+        if (len(self.ignoredisk) > 1):", "             retval += ('ignoredisk --drives=%s\\n' % ','.join(self.ignoredisk))", "         elif (len(self.onlyuse) > 0):", "             retval += ('ignoredisk --only-use=%s\\n' % ','.join(self.onlyuse))"]]], "occurrence": 3, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "number_replacer", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "45": {"result-type": "normal", "op-name": "replace_Gt_with_LtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLtE", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 43, in runTest\n    self.assertEqual(cmd.__str__(), \"\")\nAssertionError: 'ignoredisk --only-use=\\n' != ''\n- ignoredisk --only-use=\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -42,7 +42,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (len(self.ignoredisk) > 0):", "             retval += ('ignoredisk --drives=%s\\n' % ','.join(self.ignoredisk))", "-        elif (len(self.onlyuse) > 0):", "+        elif (len(self.onlyuse) <= 0):", "             retval += ('ignoredisk --only-use=%s\\n' % ','.join(self.onlyuse))", "         return retval", " "]]], "occurrence": 2, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_LtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "102": {"result-type": "normal", "op-name": "replace_Gt_with_Eq", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithEq", "occurrence": 6}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 73, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 126, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --drives , --only-use , or --interactive must be specified for ignoredisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -78,7 +78,7 @@", "         howmany = 0", "         if (len(self.ignoredisk) > 0):", "             howmany += 1", "-        if (len(self.onlyuse) > 0):", "+        if (len(self.onlyuse) == 0):", "             howmany += 1", "         if self.interactive:", "             howmany += 1"]]], "occurrence": 6, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_Eq", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "54": {"result-type": "normal", "op-name": "replace_Eq_with_NotEq", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 84, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --drives or --only-use must be specified for ignoredisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) != 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Eq_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "74": {"result-type": "normal", "op-name": "replace_Gt_with_NotEq", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotEq", "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -42,7 +42,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (len(self.ignoredisk) > 0):", "             retval += ('ignoredisk --drives=%s\\n' % ','.join(self.ignoredisk))", "-        elif (len(self.onlyuse) > 0):", "+        elif (len(self.onlyuse) != 0):", "             retval += ('ignoredisk --only-use=%s\\n' % ','.join(self.onlyuse))", "         return retval", " "]]], "occurrence": 2, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_NotEq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "59": {"result-type": "normal", "op-name": "replace_Eq_with_IsNot", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 38, in runTest\n    self.assert_parse_error(\"ignoredisk\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) is not 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Eq_with_IsNot", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "97": {"result-type": "normal", "op-name": "replace_Gt_with_Eq", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithEq", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'ignoredisk --drives=sda\\n'\n+ ignoredisk --drives=sda\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -40,7 +40,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (len(self.ignoredisk) > 0):", "+        if (len(self.ignoredisk) == 0):", "             retval += ('ignoredisk --drives=%s\\n' % ','.join(self.ignoredisk))", "         elif (len(self.onlyuse) > 0):", "             retval += ('ignoredisk --only-use=%s\\n' % ','.join(self.onlyuse))"]]], "occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_Eq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "46": {"result-type": "normal", "op-name": "replace_Gt_with_LtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLtE", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 54, in runTest\n    self.assert_parse(\"ignoredisk --only-use=sda\", \"ignoredisk --only-use=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 84, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --drives or --only-use must be specified for ignoredisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) <= 0) and (len(self.onlyuse) > 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 3, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_LtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "22": {"result-type": "normal", "op-name": "number_replacer", "result-data": [{"line_number": 122, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "occurrence": 14}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 73, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 54, in runTest\n    self.assert_parse(\"ignoredisk --only-use=sda\", \"ignoredisk --only-use=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 126, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --drives , --only-use , or --interactive must be specified for ignoredisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -79,7 +79,7 @@", "         if (len(self.ignoredisk) > 0):", "             howmany += 1", "         if (len(self.onlyuse) > 0):", "-            howmany += 1", "+            howmany += 2", "         if self.interactive:", "             howmany += 1", "         if (howmany != 1):"]]], "occurrence": 14, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "number_replacer", "14", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "108": {"result-type": "normal", "op-name": "replace_Gt_with_Lt", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLt", "occurrence": 5}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 73, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 126, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --drives , --only-use , or --interactive must be specified for ignoredisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -76,7 +76,7 @@", "     def parse(self, args):", "         retval = F8_IgnoreDisk.parse(self, args)", "         howmany = 0", "-        if (len(self.ignoredisk) > 0):", "+        if (len(self.ignoredisk) < 0):", "             howmany += 1", "         if (len(self.onlyuse) > 0):", "             howmany += 1"]]], "occurrence": 5, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_Lt", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "18": {"result-type": "normal", "op-name": "number_replacer", "result-data": [{"line_number": 118, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "occurrence": 10}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 73, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 126, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --drives , --only-use , or --interactive must be specified for ignoredisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -75,7 +75,7 @@", " ", "     def parse(self, args):", "         retval = F8_IgnoreDisk.parse(self, args)", "-        howmany = 0", "+        howmany = 1", "         if (len(self.ignoredisk) > 0):", "             howmany += 1", "         if (len(self.onlyuse) > 0):"]]], "occurrence": 10, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "number_replacer", "10", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "107": {"result-type": "normal", "op-name": "replace_Gt_with_Lt", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLt", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 67, in runTest\n    self.assert_parse_error(\"ignoredisk --drives=sda --only-use=sdb\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) < 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 4, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_Lt", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "20": {"result-type": "normal", "op-name": "number_replacer", "result-data": [{"line_number": 120, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "occurrence": 12}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 73, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 126, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --drives , --only-use , or --interactive must be specified for ignoredisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -77,7 +77,7 @@", "         retval = F8_IgnoreDisk.parse(self, args)", "         howmany = 0", "         if (len(self.ignoredisk) > 0):", "-            howmany += 1", "+            howmany += 2", "         if (len(self.onlyuse) > 0):", "             howmany += 1", "         if self.interactive:"]]], "occurrence": 12, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "number_replacer", "12", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "12": {"result-type": "normal", "op-name": "number_replacer", "result-data": [{"line_number": 74, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 54, in runTest\n    self.assert_parse(\"ignoredisk --only-use=sda\", \"ignoredisk --only-use=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'ignoredisk --only-use=sda\\n'\n+ ignoredisk --only-use=sda\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -42,7 +42,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (len(self.ignoredisk) > 0):", "             retval += ('ignoredisk --drives=%s\\n' % ','.join(self.ignoredisk))", "-        elif (len(self.onlyuse) > 0):", "+        elif (len(self.onlyuse) > 1):", "             retval += ('ignoredisk --only-use=%s\\n' % ','.join(self.onlyuse))", "         return retval", " "]]], "occurrence": 4, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "number_replacer", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "80": {"result-type": "normal", "op-name": "replace_Gt_with_NotIn", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotIn", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.ignoredisk\", line 39, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -16,7 +16,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (len(self.ignoredisk) > 0):", "+        if (len(self.ignoredisk) not in 0):", "             retval += ('ignoredisk --drives=%s\\n' % ','.join(self.ignoredisk))", "         return retval", " "]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "19": {"result-type": "normal", "op-name": "number_replacer", "result-data": [{"line_number": 119, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "occurrence": 11}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 73, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 126, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --drives , --only-use , or --interactive must be specified for ignoredisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -76,7 +76,7 @@", "     def parse(self, args):", "         retval = F8_IgnoreDisk.parse(self, args)", "         howmany = 0", "-        if (len(self.ignoredisk) > 0):", "+        if (len(self.ignoredisk) > 1):", "             howmany += 1", "         if (len(self.onlyuse) > 0):", "             howmany += 1"]]], "occurrence": 11, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "number_replacer", "11", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "27": {"result-type": "normal", "op-name": "replace_Eq_with_Is", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) is 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Eq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "91": {"result-type": "normal", "op-name": "replace_Eq_with_LtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) <= 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Eq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "51": {"result-type": "normal", "op-name": "boolean_replacer", "result-data": [{"line_number": 105, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 73, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 43, in runTest\n    self.assertEqual(cmd.__str__(), \"\")\nAssertionError: 'ignoredisk --interactive\\n' != ''\n- ignoredisk --interactive\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -65,7 +65,7 @@", " ", "     def __init__(self, writePriority=0, *args, **kwargs):", "         F8_IgnoreDisk.__init__(self, writePriority, *args, **kwargs)", "-        self.interactive = kwargs.get('interactive', False)", "+        self.interactive = kwargs.get('interactive', True)", " ", "     def __str__(self):", "         retval = F8_IgnoreDisk.__str__(self)"]]], "occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "boolean_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "32": {"result-type": "normal", "op-name": "replace_Gt_with_GtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithGtE", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 54, in runTest\n    self.assert_parse(\"ignoredisk --only-use=sda\", \"ignoredisk --only-use=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 84, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --drives or --only-use must be specified for ignoredisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) >= 0) and (len(self.onlyuse) > 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 3, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_GtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "30": {"result-type": "normal", "op-name": "replace_Gt_with_GtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithGtE", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 43, in runTest\n    self.assertEqual(cmd.__str__(), \"\")\nAssertionError: 'ignoredisk --drives=\\n' != ''\n- ignoredisk --drives=\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -40,7 +40,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (len(self.ignoredisk) > 0):", "+        if (len(self.ignoredisk) >= 0):", "             retval += ('ignoredisk --drives=%s\\n' % ','.join(self.ignoredisk))", "         elif (len(self.onlyuse) > 0):", "             retval += ('ignoredisk --only-use=%s\\n' % ','.join(self.onlyuse))"]]], "occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "16": {"result-type": "normal", "op-name": "number_replacer", "result-data": [{"line_number": 83, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "occurrence": 8}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 67, in runTest\n    self.assert_parse_error(\"ignoredisk --drives=sda --only-use=sdb\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 1))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 8, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "number_replacer", "8", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "92": {"result-type": "normal", "op-name": "replace_Eq_with_LtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) <= 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Eq_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "106": {"result-type": "normal", "op-name": "replace_Gt_with_Lt", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLt", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 67, in runTest\n    self.assert_parse_error(\"ignoredisk --drives=sda --only-use=sdb\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) < 0) and (len(self.onlyuse) > 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 3, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_Lt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "88": {"result-type": "normal", "op-name": "replace_Eq_with_Gt", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 38, in runTest\n    self.assert_parse_error(\"ignoredisk\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) > 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Eq_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "82": {"result-type": "normal", "op-name": "replace_Gt_with_NotIn", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotIn", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 43, in runTest\n    self.assertEqual(cmd.__str__(), \"\")\n  File \"pykickstart.commands.ignoredisk\", line 74, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -42,7 +42,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (len(self.ignoredisk) > 0):", "             retval += ('ignoredisk --drives=%s\\n' % ','.join(self.ignoredisk))", "-        elif (len(self.onlyuse) > 0):", "+        elif (len(self.onlyuse) not in 0):", "             retval += ('ignoredisk --only-use=%s\\n' % ','.join(self.onlyuse))", "         return retval", " "]]], "occurrence": 2, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_NotIn", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "66": {"result-type": "normal", "op-name": "replace_Gt_with_Is", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIs", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 54, in runTest\n    self.assert_parse(\"ignoredisk --only-use=sda\", \"ignoredisk --only-use=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 84, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --drives or --only-use must be specified for ignoredisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) is 0) and (len(self.onlyuse) > 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 3, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_Is", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "34": {"result-type": "normal", "op-name": "replace_Gt_with_GtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithGtE", "occurrence": 5}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 73, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 38, in runTest\n    self.assert_parse_error(\"ignoredisk\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -76,7 +76,7 @@", "     def parse(self, args):", "         retval = F8_IgnoreDisk.parse(self, args)", "         howmany = 0", "-        if (len(self.ignoredisk) > 0):", "+        if (len(self.ignoredisk) >= 0):", "             howmany += 1", "         if (len(self.onlyuse) > 0):", "             howmany += 1"]]], "occurrence": 5, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_GtE", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "62": {"result-type": "normal", "op-name": "replace_NotEq_with_In", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 73, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 125, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -82,7 +82,7 @@", "             howmany += 1", "         if self.interactive:", "             howmany += 1", "-        if (howmany != 1):", "+        if (howmany in 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives , --only-use , or --interactive must be specified for ignoredisk command.')))", "         if self.interactive:", "             self.ignoredisk = []"]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_NotEq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "71": {"result-type": "normal", "op-name": "replace_Eq_with_NotIn", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 38, in runTest\n    self.assert_parse_error(\"ignoredisk\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 83, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) not in 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Eq_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "31": {"result-type": "normal", "op-name": "replace_Gt_with_GtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithGtE", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 43, in runTest\n    self.assertEqual(cmd.__str__(), \"\")\nAssertionError: 'ignoredisk --only-use=\\n' != ''\n- ignoredisk --only-use=\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -42,7 +42,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (len(self.ignoredisk) > 0):", "             retval += ('ignoredisk --drives=%s\\n' % ','.join(self.ignoredisk))", "-        elif (len(self.onlyuse) > 0):", "+        elif (len(self.onlyuse) >= 0):", "             retval += ('ignoredisk --only-use=%s\\n' % ','.join(self.onlyuse))", "         return retval", " "]]], "occurrence": 2, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_GtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "38": {"result-type": "normal", "op-name": "replace_Gt_with_In", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIn", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 43, in runTest\n    self.assertEqual(cmd.__str__(), \"\")\n  File \"pykickstart.commands.ignoredisk\", line 74, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -42,7 +42,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (len(self.ignoredisk) > 0):", "             retval += ('ignoredisk --drives=%s\\n' % ','.join(self.ignoredisk))", "-        elif (len(self.onlyuse) > 0):", "+        elif (len(self.onlyuse) in 0):", "             retval += ('ignoredisk --only-use=%s\\n' % ','.join(self.onlyuse))", "         return retval", " "]]], "occurrence": 2, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_In", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "96": {"result-type": "normal", "op-name": "replace_Gt_with_Eq", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithEq", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'ignoredisk --drives=sda\\n'\n+ ignoredisk --drives=sda\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -16,7 +16,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (len(self.ignoredisk) > 0):", "+        if (len(self.ignoredisk) == 0):", "             retval += ('ignoredisk --drives=%s\\n' % ','.join(self.ignoredisk))", "         return retval", " "]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "98": {"result-type": "normal", "op-name": "replace_Gt_with_Eq", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithEq", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 43, in runTest\n    self.assertEqual(cmd.__str__(), \"\")\nAssertionError: 'ignoredisk --only-use=\\n' != ''\n- ignoredisk --only-use=\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -42,7 +42,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (len(self.ignoredisk) > 0):", "             retval += ('ignoredisk --drives=%s\\n' % ','.join(self.ignoredisk))", "-        elif (len(self.onlyuse) > 0):", "+        elif (len(self.onlyuse) == 0):", "             retval += ('ignoredisk --only-use=%s\\n' % ','.join(self.onlyuse))", "         return retval", " "]]], "occurrence": 2, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_Eq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "94": {"result-type": "normal", "op-name": "replace_NotEq_with_Eq", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 73, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 126, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --drives , --only-use , or --interactive must be specified for ignoredisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -82,7 +82,7 @@", "             howmany += 1", "         if self.interactive:", "             howmany += 1", "-        if (howmany != 1):", "+        if (howmany == 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives , --only-use , or --interactive must be specified for ignoredisk command.')))", "         if self.interactive:", "             self.ignoredisk = []"]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_NotEq_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "100": {"result-type": "normal", "op-name": "replace_Gt_with_Eq", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithEq", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 84, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --drives or --only-use must be specified for ignoredisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) == 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 4, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_Eq", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "81": {"result-type": "normal", "op-name": "replace_Gt_with_NotIn", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotIn", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.ignoredisk\", line 72, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -40,7 +40,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (len(self.ignoredisk) > 0):", "+        if (len(self.ignoredisk) not in 0):", "             retval += ('ignoredisk --drives=%s\\n' % ','.join(self.ignoredisk))", "         elif (len(self.onlyuse) > 0):", "             retval += ('ignoredisk --only-use=%s\\n' % ','.join(self.onlyuse))"]]], "occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "84": {"result-type": "normal", "op-name": "replace_Gt_with_NotIn", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotIn", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 83, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) not in 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 4, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_NotIn", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "69": {"result-type": "normal", "op-name": "replace_Gt_with_Is", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIs", "occurrence": 6}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 73, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 126, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --drives , --only-use , or --interactive must be specified for ignoredisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -78,7 +78,7 @@", "         howmany = 0", "         if (len(self.ignoredisk) > 0):", "             howmany += 1", "-        if (len(self.onlyuse) > 0):", "+        if (len(self.onlyuse) is 0):", "             howmany += 1", "         if self.interactive:", "             howmany += 1"]]], "occurrence": 6, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_Is", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "93": {"result-type": "normal", "op-name": "replace_NotEq_with_NotIn", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 73, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 125, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -82,7 +82,7 @@", "             howmany += 1", "         if self.interactive:", "             howmany += 1", "-        if (howmany != 1):", "+        if (howmany not in 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives , --only-use , or --interactive must be specified for ignoredisk command.')))", "         if self.interactive:", "             self.ignoredisk = []"]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_NotEq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "15": {"result-type": "normal", "op-name": "number_replacer", "result-data": [{"line_number": 83, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "occurrence": 7}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 67, in runTest\n    self.assert_parse_error(\"ignoredisk --drives=sda --only-use=sdb\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 1) and (len(self.onlyuse) > 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 7, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "number_replacer", "7", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "85": {"result-type": "normal", "op-name": "replace_Gt_with_NotIn", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotIn", "occurrence": 5}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 73, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 119, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -76,7 +76,7 @@", "     def parse(self, args):", "         retval = F8_IgnoreDisk.parse(self, args)", "         howmany = 0", "-        if (len(self.ignoredisk) > 0):", "+        if (len(self.ignoredisk) not in 0):", "             howmany += 1", "         if (len(self.onlyuse) > 0):", "             howmany += 1"]]], "occurrence": 5, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_NotIn", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "43": {"result-type": "normal", "op-name": "replace_Gt_with_LtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLtE", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'ignoredisk --drives=sda\\n'\n+ ignoredisk --drives=sda\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -16,7 +16,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (len(self.ignoredisk) > 0):", "+        if (len(self.ignoredisk) <= 0):", "             retval += ('ignoredisk --drives=%s\\n' % ','.join(self.ignoredisk))", "         return retval", " "]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "9": {"result-type": "normal", "op-name": "number_replacer", "result-data": [{"line_number": 39, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'ignoredisk --drives=sda\\n'\n+ ignoredisk --drives=sda\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -16,7 +16,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (len(self.ignoredisk) > 0):", "+        if (len(self.ignoredisk) > 1):", "             retval += ('ignoredisk --drives=%s\\n' % ','.join(self.ignoredisk))", "         return retval", " "]]], "occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "number_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "65": {"result-type": "normal", "op-name": "replace_Gt_with_Is", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIs", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 43, in runTest\n    self.assertEqual(cmd.__str__(), \"\")\nAssertionError: 'ignoredisk --only-use=\\n' != ''\n- ignoredisk --only-use=\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -42,7 +42,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (len(self.ignoredisk) > 0):", "             retval += ('ignoredisk --drives=%s\\n' % ','.join(self.ignoredisk))", "-        elif (len(self.onlyuse) > 0):", "+        elif (len(self.onlyuse) is 0):", "             retval += ('ignoredisk --only-use=%s\\n' % ','.join(self.onlyuse))", "         return retval", " "]]], "occurrence": 2, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_Is", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "13": {"result-type": "normal", "op-name": "number_replacer", "result-data": [{"line_number": 83, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "occurrence": 5}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 84, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --drives or --only-use must be specified for ignoredisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) == 1) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 5, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "number_replacer", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "10": {"result-type": "normal", "op-name": "number_replacer", "result-data": [{"line_number": 64, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -34,7 +34,7 @@", "     removedKeywords = FC3_IgnoreDisk.removedKeywords", "     removedAttrs = FC3_IgnoreDisk.removedAttrs", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         FC3_IgnoreDisk.__init__(self, writePriority, *args, **kwargs)", "         self.onlyuse = kwargs.get('onlyuse', [])", " "]]], "occurrence": 2, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "number_replacer", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "17": {"result-type": "normal", "op-name": "number_replacer", "result-data": [{"line_number": 103, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "occurrence": 9}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -63,7 +63,7 @@", "     removedKeywords = F8_IgnoreDisk.removedKeywords", "     removedAttrs = F8_IgnoreDisk.removedAttrs", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         F8_IgnoreDisk.__init__(self, writePriority, *args, **kwargs)", "         self.interactive = kwargs.get('interactive', False)", " "]]], "occurrence": 9, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "number_replacer", "9", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "2": {"result-type": "normal", "op-name": "replace_Gt_with_IsNot", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIsNot", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -40,7 +40,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (len(self.ignoredisk) > 0):", "+        if (len(self.ignoredisk) is not 0):", "             retval += ('ignoredisk --drives=%s\\n' % ','.join(self.ignoredisk))", "         elif (len(self.onlyuse) > 0):", "             retval += ('ignoredisk --only-use=%s\\n' % ','.join(self.onlyuse))"]]], "occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_IsNot", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "5": {"result-type": "normal", "op-name": "replace_Gt_with_IsNot", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIsNot", "occurrence": 4}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) is not 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 4, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_IsNot", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "29": {"result-type": "normal", "op-name": "replace_Gt_with_GtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithGtE", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 43, in runTest\n    self.assertEqual(cmd.__str__(), \"\")\nAssertionError: 'ignoredisk --drives=\\n' != ''\n- ignoredisk --drives=\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -16,7 +16,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (len(self.ignoredisk) > 0):", "+        if (len(self.ignoredisk) >= 0):", "             retval += ('ignoredisk --drives=%s\\n' % ','.join(self.ignoredisk))", "         return retval", " "]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "1": {"result-type": "normal", "op-name": "replace_Gt_with_IsNot", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIsNot", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -16,7 +16,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (len(self.ignoredisk) > 0):", "+        if (len(self.ignoredisk) is not 0):", "             retval += ('ignoredisk --drives=%s\\n' % ','.join(self.ignoredisk))", "         return retval", " "]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "41": {"result-type": "normal", "op-name": "replace_Gt_with_In", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIn", "occurrence": 5}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 73, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 119, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -76,7 +76,7 @@", "     def parse(self, args):", "         retval = F8_IgnoreDisk.parse(self, args)", "         howmany = 0", "-        if (len(self.ignoredisk) > 0):", "+        if (len(self.ignoredisk) in 0):", "             howmany += 1", "         if (len(self.onlyuse) > 0):", "             howmany += 1"]]], "occurrence": 5, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_In", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "87": {"result-type": "normal", "op-name": "replace_Eq_with_Gt", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 84, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --drives or --only-use must be specified for ignoredisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) > 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Eq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "47": {"result-type": "normal", "op-name": "replace_Gt_with_LtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLtE", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 84, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --drives or --only-use must be specified for ignoredisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) <= 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 4, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_LtE", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "50": {"result-type": "normal", "op-name": "boolean_replacer", "result-data": [{"line_number": 50, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 38, in runTest\n    self.assert_parse_error(\"ignoredisk\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -22,7 +22,7 @@", " ", "     def _getParser(self):", "         op = KSOptionParser(prog='ignoredisk', description=\"\\n            Controls anaconda's access to disks attached to the system. By\\n            default, all disks will be available for partitioning. Only one of\\n            the following three options may be used.\", version=FC3)", "-        op.add_argument('--drives', dest='ignoredisk', type=commaSplit, required=True, version=FC3, help='\\n                        Specifies those disks that anaconda should not touch\\n                        when partitioning, formatting, and clearing.')", "+        op.add_argument('--drives', dest='ignoredisk', type=commaSplit, required=False, version=FC3, help='\\n                        Specifies those disks that anaconda should not touch\\n                        when partitioning, formatting, and clearing.')", "         return op", " ", "     def parse(self, args):"]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "boolean_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "37": {"result-type": "normal", "op-name": "replace_Gt_with_In", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIn", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.ignoredisk\", line 72, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -40,7 +40,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (len(self.ignoredisk) > 0):", "+        if (len(self.ignoredisk) in 0):", "             retval += ('ignoredisk --drives=%s\\n' % ','.join(self.ignoredisk))", "         elif (len(self.onlyuse) > 0):", "             retval += ('ignoredisk --only-use=%s\\n' % ','.join(self.onlyuse))"]]], "occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "40": {"result-type": "normal", "op-name": "replace_Gt_with_In", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIn", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 83, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) in 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 4, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_In", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "90": {"result-type": "normal", "op-name": "replace_Eq_with_GtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 54, in runTest\n    self.assert_parse(\"ignoredisk --only-use=sda\", \"ignoredisk --only-use=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 84, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --drives or --only-use must be specified for ignoredisk command.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) >= 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Eq_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "7": {"result-type": "normal", "op-name": "replace_Gt_with_IsNot", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIsNot", "occurrence": 6}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -78,7 +78,7 @@", "         howmany = 0", "         if (len(self.ignoredisk) > 0):", "             howmany += 1", "-        if (len(self.onlyuse) > 0):", "+        if (len(self.onlyuse) is not 0):", "             howmany += 1", "         if self.interactive:", "             howmany += 1"]]], "occurrence": 6, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_IsNot", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "6": {"result-type": "normal", "op-name": "replace_Gt_with_IsNot", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIsNot", "occurrence": 5}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -76,7 +76,7 @@", "     def parse(self, args):", "         retval = F8_IgnoreDisk.parse(self, args)", "         howmany = 0", "-        if (len(self.ignoredisk) > 0):", "+        if (len(self.ignoredisk) is not 0):", "             howmany += 1", "         if (len(self.onlyuse) > 0):", "             howmany += 1"]]], "occurrence": 5, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_IsNot", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "26": {"result-type": "normal", "op-name": "replace_Eq_with_In", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 38, in runTest\n    self.assert_parse_error(\"ignoredisk\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 83, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) in 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Eq_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "73": {"result-type": "normal", "op-name": "replace_Gt_with_NotEq", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotEq", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -40,7 +40,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (len(self.ignoredisk) > 0):", "+        if (len(self.ignoredisk) != 0):", "             retval += ('ignoredisk --drives=%s\\n' % ','.join(self.ignoredisk))", "         elif (len(self.onlyuse) > 0):", "             retval += ('ignoredisk --only-use=%s\\n' % ','.join(self.onlyuse))"]]], "occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "39": {"result-type": "normal", "op-name": "replace_Gt_with_In", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIn", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 83, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) in 0) and (len(self.onlyuse) > 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 3, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_In", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "44": {"result-type": "normal", "op-name": "replace_Gt_with_LtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLtE", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'ignoredisk --drives=sda\\n'\n+ ignoredisk --drives=sda\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -40,7 +40,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (len(self.ignoredisk) > 0):", "+        if (len(self.ignoredisk) <= 0):", "             retval += ('ignoredisk --drives=%s\\n' % ','.join(self.ignoredisk))", "         elif (len(self.onlyuse) > 0):", "             retval += ('ignoredisk --only-use=%s\\n' % ','.join(self.onlyuse))"]]], "occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "83": {"result-type": "normal", "op-name": "replace_Gt_with_NotIn", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotIn", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 49, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/ignoredisk.py\", line 29, in runTest\n    self.assert_parse(\"ignoredisk --drives=sda\", \"ignoredisk --drives=sda\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.ignoredisk\", line 83, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -49,7 +49,7 @@", "     def parse(self, args):", "         retval = FC3_IgnoreDisk.parse(self, args)", "         if (not isinstance(self, RHEL6_IgnoreDisk)):", "-            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) > 0) and (len(self.onlyuse) > 0))):", "+            if (((len(self.ignoredisk) == 0) and (len(self.onlyuse) == 0)) or ((len(self.ignoredisk) not in 0) and (len(self.onlyuse) > 0))):", "                 raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --drives or --only-use must be specified for ignoredisk command.')))", "         return retval", " "]]], "occurrence": 3, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_NotIn", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}, "72": {"result-type": "normal", "op-name": "replace_Gt_with_NotEq", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotEq", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/ignoredisk.py", "@@ -16,7 +16,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (len(self.ignoredisk) > 0):", "+        if (len(self.ignoredisk) != 0):", "             retval += ('ignoredisk --drives=%s\\n' % ','.join(self.ignoredisk))", "         return retval", " "]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.ignoredisk", "replace_Gt_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "module-name": "pykickstart.commands.ignoredisk"}}, "work-parameters": {"1": {"test-args": ["-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/ignoredisk.py"], "test-runner": "nose", "timeout": 23.343600000000002}}, "_default": {}}