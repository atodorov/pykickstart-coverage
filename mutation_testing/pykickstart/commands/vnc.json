{"work-parameters": {"1": {"test-runner": "nose", "test-args": ["-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "timeout": 10.44822}}, "_default": {}, "work-items": {"33": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_Gt_with_In", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIn", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 33, in runTest\n    self.assert_parse(\"vnc --connect=HOSTNAME\", \"vnc --host=HOSTNAME\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.vnc\", line 128, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -72,7 +72,7 @@", "         if getattr(retval, '_connect', None):", "             cargs = retval._connect.split(':')", "             retval.host = cargs[0]", "-            if (len(cargs) > 1):", "+            if (len(cargs) in 1):", "                 retval.port = cargs[1]", "             del retval._connect", "         return retval"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_Gt_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 0}, "39": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_Gt", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -19,7 +19,7 @@", "         if (not self.enabled):", "             return retval", "         retval += 'vnc'", "-        if (self.connect != ''):", "+        if (self.connect > ''):", "             retval += (' --connect=%s' % self.connect)", "         if (self.password != ''):", "             retval += (' --password=%s' % self.password)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 0}, "14": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_Eq", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 8, in runTest\n    obj = self.assert_parse(\"vnc\", \"vnc\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'vnc --password=\\n' != 'vnc\\n'\n- vnc --password=\n+ vnc\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -21,7 +21,7 @@", "         retval += 'vnc'", "         if (self.connect != ''):", "             retval += (' --connect=%s' % self.connect)", "-        if (self.password != ''):", "+        if (self.password == ''):", "             retval += (' --password=%s' % self.password)", "         return (retval + '\\n')", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_Eq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 1}, "44": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_Gt_with_NotIn", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 33, in runTest\n    self.assert_parse(\"vnc --connect=HOSTNAME\", \"vnc --host=HOSTNAME\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.vnc\", line 128, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -72,7 +72,7 @@", "         if getattr(retval, '_connect', None):", "             cargs = retval._connect.split(':')", "             retval.host = cargs[0]", "-            if (len(cargs) > 1):", "+            if (len(cargs) not in 1):", "                 retval.port = cargs[1]", "             del retval._connect", "         return retval"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_Gt_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 0}, "28": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_Lt", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 13, in runTest\n    self.assert_parse(\"vnc --connect=HOSTNAME\", \"vnc --connect=HOSTNAME\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'vnc\\n' != 'vnc --connect=HOSTNAME\\n'\n- vnc\n+ vnc --connect=HOSTNAME\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -19,7 +19,7 @@", "         if (not self.enabled):", "             return retval", "         retval += 'vnc'", "-        if (self.connect != ''):", "+        if (self.connect < ''):", "             retval += (' --connect=%s' % self.connect)", "         if (self.password != ''):", "             retval += (' --password=%s' % self.password)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 0}, "1": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_In", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 8, in runTest\n    obj = self.assert_parse(\"vnc\", \"vnc\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'vnc --connect=\\n' != 'vnc\\n'\n- vnc --connect=\n+ vnc\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -19,7 +19,7 @@", "         if (not self.enabled):", "             return retval", "         retval += 'vnc'", "-        if (self.connect != ''):", "+        if (self.connect in ''):", "             retval += (' --connect=%s' % self.connect)", "         if (self.password != ''):", "             retval += (' --password=%s' % self.password)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 0}, "49": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_LtE", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 47, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 27, in runTest\n    self.assert_parse(\"vnc\", \"vnc\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'vnc --password=\\n' != 'vnc\\n'\n- vnc --password=\n+ vnc\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -56,7 +56,7 @@", "             retval += (' --host=%s' % self.host)", "             if (self.port != ''):", "                 retval += (' --port=%s' % self.port)", "-        if (self.password != ''):", "+        if (self.password <= ''):", "             retval += (' --password=%s' % self.password)", "         return (retval + '\\n')", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_LtE", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 4}, "53": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_NotIn", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -21,7 +21,7 @@", "         retval += 'vnc'", "         if (self.connect != ''):", "             retval += (' --connect=%s' % self.connect)", "-        if (self.password != ''):", "+        if (self.password not in ''):", "             retval += (' --password=%s' % self.password)", "         return (retval + '\\n')", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 1}, "43": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_Gt", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -56,7 +56,7 @@", "             retval += (' --host=%s' % self.host)", "             if (self.port != ''):", "                 retval += (' --port=%s' % self.port)", "-        if (self.password != ''):", "+        if (self.password > ''):", "             retval += (' --password=%s' % self.password)", "         return (retval + '\\n')", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_Gt", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 4}, "19": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_Is", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 8, in runTest\n    obj = self.assert_parse(\"vnc\", \"vnc\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'vnc --password=\\n' != 'vnc\\n'\n- vnc --password=\n+ vnc\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -21,7 +21,7 @@", "         retval += 'vnc'", "         if (self.connect != ''):", "             retval += (' --connect=%s' % self.connect)", "-        if (self.password != ''):", "+        if (self.password is ''):", "             retval += (' --password=%s' % self.password)", "         return (retval + '\\n')", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 1}, "42": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_Gt", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -54,7 +54,7 @@", "         retval += 'vnc'", "         if (self.host != ''):", "             retval += (' --host=%s' % self.host)", "-            if (self.port != ''):", "+            if (self.port > ''):", "                 retval += (' --port=%s' % self.port)", "         if (self.password != ''):", "             retval += (' --password=%s' % self.password)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_Gt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 3}, "48": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_LtE", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 47, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 28, in runTest\n    self.assert_parse(\"vnc --host=HOSTNAME\", \"vnc --host=HOSTNAME\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'vnc --host=HOSTNAME --port=\\n' != 'vnc --host=HOSTNAME\\n'\n- vnc --host=HOSTNAME --port=\n?                    --------\n+ vnc --host=HOSTNAME\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -54,7 +54,7 @@", "         retval += 'vnc'", "         if (self.host != ''):", "             retval += (' --host=%s' % self.host)", "-            if (self.port != ''):", "+            if (self.port <= ''):", "                 retval += (' --port=%s' % self.port)", "         if (self.password != ''):", "             retval += (' --password=%s' % self.password)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_LtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 3}, "56": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_NotIn", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -56,7 +56,7 @@", "             retval += (' --host=%s' % self.host)", "             if (self.port != ''):", "                 retval += (' --port=%s' % self.port)", "-        if (self.password != ''):", "+        if (self.password not in ''):", "             retval += (' --password=%s' % self.password)", "         return (retval + '\\n')", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_NotIn", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 4}, "20": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_Is", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 47, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 27, in runTest\n    self.assert_parse(\"vnc\", \"vnc\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'vnc --host=\\n' != 'vnc\\n'\n- vnc --host=\n+ vnc\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -52,7 +52,7 @@", "         if (not self.enabled):", "             return retval", "         retval += 'vnc'", "-        if (self.host != ''):", "+        if (self.host is ''):", "             retval += (' --host=%s' % self.host)", "             if (self.port != ''):", "                 retval += (' --port=%s' % self.port)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_Is", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 2}, "46": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_LtE", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 8, in runTest\n    obj = self.assert_parse(\"vnc\", \"vnc\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'vnc --password=\\n' != 'vnc\\n'\n- vnc --password=\n+ vnc\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -21,7 +21,7 @@", "         retval += 'vnc'", "         if (self.connect != ''):", "             retval += (' --connect=%s' % self.connect)", "-        if (self.password != ''):", "+        if (self.password <= ''):", "             retval += (' --password=%s' % self.password)", "         return (retval + '\\n')", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 1}, "24": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "boolean_replacer", "result-data": [{"operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 32, "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -10,7 +10,7 @@", "     def __init__(self, writePriority=0, *args, **kwargs):", "         KickstartCommand.__init__(self, writePriority, *args, **kwargs)", "         self.op = self._getParser()", "-        self.enabled = kwargs.get('enabled', False)", "+        self.enabled = kwargs.get('enabled', True)", "         self.password = kwargs.get('password', '')", "         self.connect = kwargs.get('connect', '')", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "boolean_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 0}, "50": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_Gt_with_Eq", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithEq", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 33, in runTest\n    self.assert_parse(\"vnc --connect=HOSTNAME\", \"vnc --host=HOSTNAME\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.vnc\", line 129, in parse\nIndexError: list index out of range\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -72,7 +72,7 @@", "         if getattr(retval, '_connect', None):", "             cargs = retval._connect.split(':')", "             retval.host = cargs[0]", "-            if (len(cargs) > 1):", "+            if (len(cargs) == 1):", "                 retval.port = cargs[1]", "             del retval._connect", "         return retval"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_Gt_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 0}, "4": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_In", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 47, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 28, in runTest\n    self.assert_parse(\"vnc --host=HOSTNAME\", \"vnc --host=HOSTNAME\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'vnc --host=HOSTNAME --port=\\n' != 'vnc --host=HOSTNAME\\n'\n- vnc --host=HOSTNAME --port=\n?                    --------\n+ vnc --host=HOSTNAME\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -54,7 +54,7 @@", "         retval += 'vnc'", "         if (self.host != ''):", "             retval += (' --host=%s' % self.host)", "-            if (self.port != ''):", "+            if (self.port in ''):", "                 retval += (' --port=%s' % self.port)", "         if (self.password != ''):", "             retval += (' --password=%s' % self.password)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_In", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 3}, "2": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_In", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 8, in runTest\n    obj = self.assert_parse(\"vnc\", \"vnc\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'vnc --password=\\n' != 'vnc\\n'\n- vnc --password=\n+ vnc\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -21,7 +21,7 @@", "         retval += 'vnc'", "         if (self.connect != ''):", "             retval += (' --connect=%s' % self.connect)", "-        if (self.password != ''):", "+        if (self.password in ''):", "             retval += (' --password=%s' % self.password)", "         return (retval + '\\n')", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 1}, "25": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "boolean_replacer", "result-data": [{"operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 70, "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 47, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 27, in runTest\n    self.assert_parse(\"vnc\", \"vnc\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'vnc\\n'\n+ vnc\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -32,7 +32,7 @@", "         return op", " ", "     def parse(self, args):", "-        self.enabled = True", "+        self.enabled = False", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "         return self"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "boolean_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 1}, "38": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "number_replacer", "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 129, "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 34, in runTest\n    self.assert_parse(\"vnc --connect=HOSTNAME:PORT\", \"vnc --host=HOSTNAME --port=PORT\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.vnc\", line 129, in parse\nIndexError: list index out of range\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -73,7 +73,7 @@", "             cargs = retval._connect.split(':')", "             retval.host = cargs[0]", "             if (len(cargs) > 1):", "-                retval.port = cargs[1]", "+                retval.port = cargs[2]", "             del retval._connect", "         return retval", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "number_replacer", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 4}, "34": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "number_replacer", "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 28, "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -7,7 +7,7 @@", "     removedKeywords = KickstartCommand.removedKeywords", "     removedAttrs = KickstartCommand.removedAttrs", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         KickstartCommand.__init__(self, writePriority, *args, **kwargs)", "         self.op = self._getParser()", "         self.enabled = kwargs.get('enabled', False)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "number_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 0}, "52": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_NotIn", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -19,7 +19,7 @@", "         if (not self.enabled):", "             return retval", "         retval += 'vnc'", "-        if (self.connect != ''):", "+        if (self.connect not in ''):", "             retval += (' --connect=%s' % self.connect)", "         if (self.password != ''):", "             retval += (' --password=%s' % self.password)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 0}, "13": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_Eq", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 8, in runTest\n    obj = self.assert_parse(\"vnc\", \"vnc\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'vnc --connect=\\n' != 'vnc\\n'\n- vnc --connect=\n+ vnc\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -19,7 +19,7 @@", "         if (not self.enabled):", "             return retval", "         retval += 'vnc'", "-        if (self.connect != ''):", "+        if (self.connect == ''):", "             retval += (' --connect=%s' % self.connect)", "         if (self.password != ''):", "             retval += (' --password=%s' % self.password)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 0}, "9": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_GtE", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 47, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 27, in runTest\n    self.assert_parse(\"vnc\", \"vnc\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'vnc --host=\\n' != 'vnc\\n'\n- vnc --host=\n+ vnc\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -52,7 +52,7 @@", "         if (not self.enabled):", "             return retval", "         retval += 'vnc'", "-        if (self.host != ''):", "+        if (self.host >= ''):", "             retval += (' --host=%s' % self.host)", "             if (self.port != ''):", "                 retval += (' --port=%s' % self.port)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_GtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 2}, "22": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_Is", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 47, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 27, in runTest\n    self.assert_parse(\"vnc\", \"vnc\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'vnc --password=\\n' != 'vnc\\n'\n- vnc --password=\n+ vnc\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -56,7 +56,7 @@", "             retval += (' --host=%s' % self.host)", "             if (self.port != ''):", "                 retval += (' --port=%s' % self.port)", "-        if (self.password != ''):", "+        if (self.password is ''):", "             retval += (' --password=%s' % self.password)", "         return (retval + '\\n')", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_Is", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 4}, "32": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_Lt", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 47, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 30, in runTest\n    self.assert_parse(\"vnc --password=PASSWORD\", \"vnc --password=PASSWORD\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'vnc\\n' != 'vnc --password=PASSWORD\\n'\n- vnc\n+ vnc --password=PASSWORD\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -56,7 +56,7 @@", "             retval += (' --host=%s' % self.host)", "             if (self.port != ''):", "                 retval += (' --port=%s' % self.port)", "-        if (self.password != ''):", "+        if (self.password < ''):", "             retval += (' --password=%s' % self.password)", "         return (retval + '\\n')", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_Lt", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 4}, "23": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_Gt_with_IsNot", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIsNot", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -72,7 +72,7 @@", "         if getattr(retval, '_connect', None):", "             cargs = retval._connect.split(':')", "             retval.host = cargs[0]", "-            if (len(cargs) > 1):", "+            if (len(cargs) is not 1):", "                 retval.port = cargs[1]", "             del retval._connect", "         return retval"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_Gt_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 0}, "8": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_GtE", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 8, in runTest\n    obj = self.assert_parse(\"vnc\", \"vnc\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'vnc --password=\\n' != 'vnc\\n'\n- vnc --password=\n+ vnc\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -21,7 +21,7 @@", "         retval += 'vnc'", "         if (self.connect != ''):", "             retval += (' --connect=%s' % self.connect)", "-        if (self.password != ''):", "+        if (self.password >= ''):", "             retval += (' --password=%s' % self.password)", "         return (retval + '\\n')", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 1}, "41": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_Gt", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -52,7 +52,7 @@", "         if (not self.enabled):", "             return retval", "         retval += 'vnc'", "-        if (self.host != ''):", "+        if (self.host > ''):", "             retval += (' --host=%s' % self.host)", "             if (self.port != ''):", "                 retval += (' --port=%s' % self.port)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_Gt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 2}, "15": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_Eq", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 47, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 27, in runTest\n    self.assert_parse(\"vnc\", \"vnc\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'vnc --host=\\n' != 'vnc\\n'\n- vnc --host=\n+ vnc\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -52,7 +52,7 @@", "         if (not self.enabled):", "             return retval", "         retval += 'vnc'", "-        if (self.host != ''):", "+        if (self.host == ''):", "             retval += (' --host=%s' % self.host)", "             if (self.port != ''):", "                 retval += (' --port=%s' % self.port)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_Eq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 2}, "18": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_Is", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 8, in runTest\n    obj = self.assert_parse(\"vnc\", \"vnc\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'vnc --connect=\\n' != 'vnc\\n'\n- vnc --connect=\n+ vnc\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -19,7 +19,7 @@", "         if (not self.enabled):", "             return retval", "         retval += 'vnc'", "-        if (self.connect != ''):", "+        if (self.connect is ''):", "             retval += (' --connect=%s' % self.connect)", "         if (self.password != ''):", "             retval += (' --password=%s' % self.password)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 0}, "11": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_GtE", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 47, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 27, in runTest\n    self.assert_parse(\"vnc\", \"vnc\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'vnc --password=\\n' != 'vnc\\n'\n- vnc --password=\n+ vnc\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -56,7 +56,7 @@", "             retval += (' --host=%s' % self.host)", "             if (self.port != ''):", "                 retval += (' --port=%s' % self.port)", "-        if (self.password != ''):", "+        if (self.password >= ''):", "             retval += (' --password=%s' % self.password)", "         return (retval + '\\n')", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_GtE", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 4}, "55": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_NotIn", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -54,7 +54,7 @@", "         retval += 'vnc'", "         if (self.host != ''):", "             retval += (' --host=%s' % self.host)", "-            if (self.port != ''):", "+            if (self.port not in ''):", "                 retval += (' --port=%s' % self.port)", "         if (self.password != ''):", "             retval += (' --password=%s' % self.password)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_NotIn", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 3}, "3": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_In", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 47, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 27, in runTest\n    self.assert_parse(\"vnc\", \"vnc\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'vnc --host=\\n' != 'vnc\\n'\n- vnc --host=\n+ vnc\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -52,7 +52,7 @@", "         if (not self.enabled):", "             return retval", "         retval += 'vnc'", "-        if (self.host != ''):", "+        if (self.host in ''):", "             retval += (' --host=%s' % self.host)", "             if (self.port != ''):", "                 retval += (' --port=%s' % self.port)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_In", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 2}, "40": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_Gt", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -21,7 +21,7 @@", "         retval += 'vnc'", "         if (self.connect != ''):", "             retval += (' --connect=%s' % self.connect)", "-        if (self.password != ''):", "+        if (self.password > ''):", "             retval += (' --password=%s' % self.password)", "         return (retval + '\\n')", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 1}, "45": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_LtE", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 8, in runTest\n    obj = self.assert_parse(\"vnc\", \"vnc\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'vnc --connect=\\n' != 'vnc\\n'\n- vnc --connect=\n+ vnc\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -19,7 +19,7 @@", "         if (not self.enabled):", "             return retval", "         retval += 'vnc'", "-        if (self.connect != ''):", "+        if (self.connect <= ''):", "             retval += (' --connect=%s' % self.connect)", "         if (self.password != ''):", "             retval += (' --password=%s' % self.password)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 0}, "36": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "number_replacer", "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 126, "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 33, in runTest\n    self.assert_parse(\"vnc --connect=HOSTNAME\", \"vnc --host=HOSTNAME\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.vnc\", line 126, in parse\nIndexError: list index out of range\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -71,7 +71,7 @@", "         retval = FC3_Vnc.parse(self, args)", "         if getattr(retval, '_connect', None):", "             cargs = retval._connect.split(':')", "-            retval.host = cargs[0]", "+            retval.host = cargs[1]", "             if (len(cargs) > 1):", "                 retval.port = cargs[1]", "             del retval._connect"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "number_replacer", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 2}, "12": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_Gt_with_LtE", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLtE", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 33, in runTest\n    self.assert_parse(\"vnc --connect=HOSTNAME\", \"vnc --host=HOSTNAME\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.vnc\", line 129, in parse\nIndexError: list index out of range\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -72,7 +72,7 @@", "         if getattr(retval, '_connect', None):", "             cargs = retval._connect.split(':')", "             retval.host = cargs[0]", "-            if (len(cargs) > 1):", "+            if (len(cargs) <= 1):", "                 retval.port = cargs[1]", "             del retval._connect", "         return retval"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_Gt_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 0}, "27": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_Gt_with_GtE", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithGtE", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 33, in runTest\n    self.assert_parse(\"vnc --connect=HOSTNAME\", \"vnc --host=HOSTNAME\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.vnc\", line 129, in parse\nIndexError: list index out of range\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -72,7 +72,7 @@", "         if getattr(retval, '_connect', None):", "             cargs = retval._connect.split(':')", "             retval.host = cargs[0]", "-            if (len(cargs) > 1):", "+            if (len(cargs) >= 1):", "                 retval.port = cargs[1]", "             del retval._connect", "         return retval"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_Gt_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 0}, "51": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_Gt_with_Is", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIs", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 33, in runTest\n    self.assert_parse(\"vnc --connect=HOSTNAME\", \"vnc --host=HOSTNAME\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.vnc\", line 129, in parse\nIndexError: list index out of range\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -72,7 +72,7 @@", "         if getattr(retval, '_connect', None):", "             cargs = retval._connect.split(':')", "             retval.host = cargs[0]", "-            if (len(cargs) > 1):", "+            if (len(cargs) is 1):", "                 retval.port = cargs[1]", "             del retval._connect", "         return retval"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_Gt_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 0}, "29": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_Lt", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 15, in runTest\n    self.assert_parse(\"vnc --password=PASSWORD\", \"vnc --password=PASSWORD\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'vnc\\n' != 'vnc --password=PASSWORD\\n'\n- vnc\n+ vnc --password=PASSWORD\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -21,7 +21,7 @@", "         retval += 'vnc'", "         if (self.connect != ''):", "             retval += (' --connect=%s' % self.connect)", "-        if (self.password != ''):", "+        if (self.password < ''):", "             retval += (' --password=%s' % self.password)", "         return (retval + '\\n')", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 1}, "17": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_Eq", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 47, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 27, in runTest\n    self.assert_parse(\"vnc\", \"vnc\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'vnc --password=\\n' != 'vnc\\n'\n- vnc --password=\n+ vnc\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -56,7 +56,7 @@", "             retval += (' --host=%s' % self.host)", "             if (self.port != ''):", "                 retval += (' --port=%s' % self.port)", "-        if (self.password != ''):", "+        if (self.password == ''):", "             retval += (' --password=%s' % self.password)", "         return (retval + '\\n')", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_Eq", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 4}, "35": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "number_replacer", "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 79, "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -41,7 +41,7 @@", "     removedKeywords = (FC3_Vnc.removedKeywords + ['connect'])", "     removedAttrs = (FC3_Vnc.removedAttrs + ['connect'])", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         FC3_Vnc.__init__(self, writePriority, *args, **kwargs)", "         self.deleteRemovedAttrs()", "         self.host = kwargs.get('host', '')"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "number_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 1}, "10": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_GtE", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 47, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 28, in runTest\n    self.assert_parse(\"vnc --host=HOSTNAME\", \"vnc --host=HOSTNAME\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'vnc --host=HOSTNAME --port=\\n' != 'vnc --host=HOSTNAME\\n'\n- vnc --host=HOSTNAME --port=\n?                    --------\n+ vnc --host=HOSTNAME\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -54,7 +54,7 @@", "         retval += 'vnc'", "         if (self.host != ''):", "             retval += (' --host=%s' % self.host)", "-            if (self.port != ''):", "+            if (self.port >= ''):", "                 retval += (' --port=%s' % self.port)", "         if (self.password != ''):", "             retval += (' --password=%s' % self.password)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_GtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 3}, "26": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_Gt_with_Lt", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLt", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 34, in runTest\n    self.assert_parse(\"vnc --connect=HOSTNAME:PORT\", \"vnc --host=HOSTNAME --port=PORT\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'vnc --host=HOSTNAME\\n' != 'vnc --host=HOSTNAME --port=PORT\\n'\n- vnc --host=HOSTNAME\n+ vnc --host=HOSTNAME --port=PORT\n?                    ++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -72,7 +72,7 @@", "         if getattr(retval, '_connect', None):", "             cargs = retval._connect.split(':')", "             retval.host = cargs[0]", "-            if (len(cargs) > 1):", "+            if (len(cargs) < 1):", "                 retval.port = cargs[1]", "             del retval._connect", "         return retval"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_Gt_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 0}, "37": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "number_replacer", "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 128, "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 34, in runTest\n    self.assert_parse(\"vnc --connect=HOSTNAME:PORT\", \"vnc --host=HOSTNAME --port=PORT\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'vnc --host=HOSTNAME\\n' != 'vnc --host=HOSTNAME --port=PORT\\n'\n- vnc --host=HOSTNAME\n+ vnc --host=HOSTNAME --port=PORT\n?                    ++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -72,7 +72,7 @@", "         if getattr(retval, '_connect', None):", "             cargs = retval._connect.split(':')", "             retval.host = cargs[0]", "-            if (len(cargs) > 1):", "+            if (len(cargs) > 2):", "                 retval.port = cargs[1]", "             del retval._connect", "         return retval"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "number_replacer", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 3}, "54": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_NotIn", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -52,7 +52,7 @@", "         if (not self.enabled):", "             return retval", "         retval += 'vnc'", "-        if (self.host != ''):", "+        if (self.host not in ''):", "             retval += (' --host=%s' % self.host)", "             if (self.port != ''):", "                 retval += (' --port=%s' % self.port)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_NotIn", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 2}, "30": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_Lt", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 47, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 28, in runTest\n    self.assert_parse(\"vnc --host=HOSTNAME\", \"vnc --host=HOSTNAME\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'vnc\\n' != 'vnc --host=HOSTNAME\\n'\n- vnc\n+ vnc --host=HOSTNAME\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -52,7 +52,7 @@", "         if (not self.enabled):", "             return retval", "         retval += 'vnc'", "-        if (self.host != ''):", "+        if (self.host < ''):", "             retval += (' --host=%s' % self.host)", "             if (self.port != ''):", "                 retval += (' --port=%s' % self.port)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_Lt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 2}, "6": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_Gt_with_NotEq", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -72,7 +72,7 @@", "         if getattr(retval, '_connect', None):", "             cargs = retval._connect.split(':')", "             retval.host = cargs[0]", "-            if (len(cargs) > 1):", "+            if (len(cargs) != 1):", "                 retval.port = cargs[1]", "             del retval._connect", "         return retval"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_Gt_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 0}, "21": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_Is", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 47, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 28, in runTest\n    self.assert_parse(\"vnc --host=HOSTNAME\", \"vnc --host=HOSTNAME\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'vnc --host=HOSTNAME --port=\\n' != 'vnc --host=HOSTNAME\\n'\n- vnc --host=HOSTNAME --port=\n?                    --------\n+ vnc --host=HOSTNAME\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -54,7 +54,7 @@", "         retval += 'vnc'", "         if (self.host != ''):", "             retval += (' --host=%s' % self.host)", "-            if (self.port != ''):", "+            if (self.port is ''):", "                 retval += (' --port=%s' % self.port)", "         if (self.password != ''):", "             retval += (' --password=%s' % self.password)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_Is", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 3}, "7": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_GtE", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 8, in runTest\n    obj = self.assert_parse(\"vnc\", \"vnc\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'vnc --connect=\\n' != 'vnc\\n'\n- vnc --connect=\n+ vnc\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -19,7 +19,7 @@", "         if (not self.enabled):", "             return retval", "         retval += 'vnc'", "-        if (self.connect != ''):", "+        if (self.connect >= ''):", "             retval += (' --connect=%s' % self.connect)", "         if (self.password != ''):", "             retval += (' --password=%s' % self.password)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 0}, "47": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_LtE", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 47, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 27, in runTest\n    self.assert_parse(\"vnc\", \"vnc\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'vnc --host=\\n' != 'vnc\\n'\n- vnc --host=\n+ vnc\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -52,7 +52,7 @@", "         if (not self.enabled):", "             return retval", "         retval += 'vnc'", "-        if (self.host != ''):", "+        if (self.host <= ''):", "             retval += (' --host=%s' % self.host)", "             if (self.port != ''):", "                 retval += (' --port=%s' % self.port)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_LtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 2}, "16": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_Eq", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 47, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 28, in runTest\n    self.assert_parse(\"vnc --host=HOSTNAME\", \"vnc --host=HOSTNAME\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'vnc --host=HOSTNAME --port=\\n' != 'vnc --host=HOSTNAME\\n'\n- vnc --host=HOSTNAME --port=\n?                    --------\n+ vnc --host=HOSTNAME\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -54,7 +54,7 @@", "         retval += 'vnc'", "         if (self.host != ''):", "             retval += (' --host=%s' % self.host)", "-            if (self.port != ''):", "+            if (self.port == ''):", "                 retval += (' --port=%s' % self.port)", "         if (self.password != ''):", "             retval += (' --password=%s' % self.password)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_Eq", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 3}, "5": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_In", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 47, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 27, in runTest\n    self.assert_parse(\"vnc\", \"vnc\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'vnc --password=\\n' != 'vnc\\n'\n- vnc --password=\n+ vnc\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -56,7 +56,7 @@", "             retval += (' --host=%s' % self.host)", "             if (self.port != ''):", "                 retval += (' --port=%s' % self.port)", "-        if (self.password != ''):", "+        if (self.password in ''):", "             retval += (' --password=%s' % self.password)", "         return (retval + '\\n')", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_In", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 4}, "31": {"result-type": "normal", "module-name": "pykickstart.commands.vnc", "op-name": "replace_NotEq_with_Lt", "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/vnc.py\", line 34, in runTest\n    self.assert_parse(\"vnc --connect=HOSTNAME:PORT\", \"vnc --host=HOSTNAME --port=PORT\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'vnc --host=HOSTNAME\\n' != 'vnc --host=HOSTNAME --port=PORT\\n'\n- vnc --host=HOSTNAME\n+ vnc --host=HOSTNAME --port=PORT\n?                    ++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/vnc.py", "@@ -54,7 +54,7 @@", "         retval += 'vnc'", "         if (self.host != ''):", "             retval += (' --host=%s' % self.host)", "-            if (self.port != ''):", "+            if (self.port < ''):", "                 retval += (' --port=%s' % self.port)", "         if (self.password != ''):", "             retval += (' --password=%s' % self.password)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.vnc", "replace_NotEq_with_Lt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/vnc.py"], "occurrence": 3}}}