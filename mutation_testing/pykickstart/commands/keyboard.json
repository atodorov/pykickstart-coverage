{"work-items": {"5": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_NotEq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 0, "op-name": "replace_NotEq_with_Lt", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 28, in runTest\n    self.assert_parse(\"keyboard us\", \"keyboard us\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'keyboard us\\n'\n+ keyboard us\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -17,7 +17,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.keyboard != ''):", "+        if (self.keyboard < ''):", "             retval += ('# System keyboard\\nkeyboard %s\\n' % self.keyboard)", "         return retval", " "]]]}, "58": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "number_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 1, "op-name": "number_replacer", "result-data": [{"line_number": 55, "occurrence": 1, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 28, in runTest\n    self.assert_parse(\"keyboard us\", \"keyboard us\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 56, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nKickstart command keyboard requires one argument\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -28,7 +28,7 @@", " ", "     def parse(self, args):", "         (_ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(_ns.kbd) != 1):", "+        if (len(_ns.kbd) != 2):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'keyboard')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'keyboard', 'options': extra}"]]]}, "65": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "number_replacer", "8", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 8, "op-name": "number_replacer", "result-data": [{"line_number": 103, "occurrence": 8, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 63, in runTest\n    \"keyboard --vckeymap=us --xlayouts='cz' --switch='grp:alt_shift_toggle','grp:switch'\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: \"keyb[19 chars]--xlayouts='cz' --switch='grp:alt_shift_toggle'\\n\" != \"keyb[19 chars]--xlayouts='cz' --switch='grp:alt_shift_toggle','grp:switch'\\n\"\n- keyboard --vckeymap=us --xlayouts='cz' --switch='grp:alt_shift_toggle'\n+ keyboard --vckeymap=us --xlayouts='cz' --switch='grp:alt_shift_toggle','grp:switch'\n?                                                                       +++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -70,7 +70,7 @@", "             retval += (' --xlayouts=%s' % layouts_str)", "         if self.switch_options:", "             switch_str = (\"'%s'\" % self.switch_options[0])", "-            for opt in self.switch_options[1:]:", "+            for opt in self.switch_options[2:]:", "                 switch_str += (\",'%s'\" % opt)", "             retval += (' --switch=%s' % switch_str)", "         return retval"]]]}, "15": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 0, "op-name": "replace_Gt_with_Is", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 28, in runTest\n    self.assert_parse(\"keyboard us\", \"keyboard us\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 59, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nUnexpected arguments to keyboard command: []\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -30,7 +30,7 @@", "         (_ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(_ns.kbd) != 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'keyboard')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) is 0):", "             mapping = {'command': 'keyboard', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         self.keyboard = _ns.kbd[0]"]]]}, "20": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 1, "op-name": "replace_Gt_with_LtE", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 46, in runTest\n    \"keyboard 'us'\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 164, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nA single argument is expected for the keyboard command\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -87,7 +87,7 @@", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (len(ns.kbd) > 1):", "+        if (len(ns.kbd) <= 1):", "             message = (_('A single argument is expected for the %s command') % 'keyboard')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "         elif (len(extra) > 0):"]]]}, "6": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_NotEq_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 1, "op-name": "replace_NotEq_with_Lt", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 32, in runTest\n    self.assert_parse_error(\"keyboard us uk\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -28,7 +28,7 @@", " ", "     def parse(self, args):", "         (_ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(_ns.kbd) != 1):", "+        if (len(_ns.kbd) < 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'keyboard')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'keyboard', 'options': extra}"]]]}, "55": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_NotEq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 0, "op-name": "replace_NotEq_with_LtE", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 28, in runTest\n    self.assert_parse(\"keyboard us\", \"keyboard us\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'keyboard us\\n'\n+ keyboard us\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -17,7 +17,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.keyboard != ''):", "+        if (self.keyboard <= ''):", "             retval += ('# System keyboard\\nkeyboard %s\\n' % self.keyboard)", "         return retval", " "]]]}, "2": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 1, "op-name": "replace_Gt_with_NotIn", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 46, in runTest\n    \"keyboard 'us'\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 162, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -87,7 +87,7 @@", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (len(ns.kbd) > 1):", "+        if (len(ns.kbd) not in 1):", "             message = (_('A single argument is expected for the %s command') % 'keyboard')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "         elif (len(extra) > 0):"]]]}, "37": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_NotEq_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 0, "op-name": "replace_NotEq_with_Eq", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 28, in runTest\n    self.assert_parse(\"keyboard us\", \"keyboard us\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'keyboard us\\n'\n+ keyboard us\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -17,7 +17,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.keyboard != ''):", "+        if (self.keyboard == ''):", "             retval += ('# System keyboard\\nkeyboard %s\\n' % self.keyboard)", "         return retval", " "]]]}, "53": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_Lt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 2, "op-name": "replace_Gt_with_Lt", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 70, in runTest\n    self.assert_parse_error(\"keyboard --foo us\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -90,7 +90,7 @@", "         if (len(ns.kbd) > 1):", "             message = (_('A single argument is expected for the %s command') % 'keyboard')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "-        elif (len(extra) > 0):", "+        elif (len(extra) < 0):", "             mapping = {'command': 'keyboard', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         elif ((len(ns.kbd) == 0) and (not self.vc_keymap) and (not self.x_layouts)):"]]]}, "8": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_NotEq_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 1, "op-name": "replace_NotEq_with_NotIn", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 28, in runTest\n    self.assert_parse(\"keyboard us\", \"keyboard us\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 55, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -28,7 +28,7 @@", " ", "     def parse(self, args):", "         (_ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(_ns.kbd) != 1):", "+        if (len(_ns.kbd) not in 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'keyboard')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'keyboard', 'options': extra}"]]]}, "59": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "number_replacer", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 2, "op-name": "number_replacer", "result-data": [{"line_number": 57, "occurrence": 2, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 33, in runTest\n    self.assert_parse_error(\"keyboard --foo us\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -30,7 +30,7 @@", "         (_ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(_ns.kbd) != 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'keyboard')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) > 1):", "             mapping = {'command': 'keyboard', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         self.keyboard = _ns.kbd[0]"]]]}, "1": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 0, "op-name": "replace_Gt_with_NotIn", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 28, in runTest\n    self.assert_parse(\"keyboard us\", \"keyboard us\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 57, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -30,7 +30,7 @@", "         (_ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(_ns.kbd) != 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'keyboard')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) not in 0):", "             mapping = {'command': 'keyboard', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         self.keyboard = _ns.kbd[0]"]]]}, "70": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "number_replacer", "13", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 13, "op-name": "number_replacer", "result-data": [{"line_number": 174, "occurrence": 13, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 46, in runTest\n    \"keyboard 'us'\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 174, in parse\nIndexError: list index out of range\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -97,7 +97,7 @@", "             message = _('One of --xlayouts, --vckeymap options with value(s) or argument is expected for the keyboard command')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "         if (len(ns.kbd) > 0):", "-            self._keyboard = ns.kbd[0]", "+            self._keyboard = ns.kbd[1]", "         return self", " ", "     @property"]]]}, "48": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_NotEq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 0, "op-name": "replace_NotEq_with_GtE", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 39, in runTest\n    self.assertEqual(cmd.__str__(), \"\")\nAssertionError: '# System keyboard\\nkeyboard \\n' != ''\n- # System keyboard\n- keyboard \n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -17,7 +17,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.keyboard != ''):", "+        if (self.keyboard >= ''):", "             retval += ('# System keyboard\\nkeyboard %s\\n' % self.keyboard)", "         return retval", " "]]]}, "34": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Eq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 0, "op-name": "replace_Eq_with_GtE", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 46, in runTest\n    \"keyboard 'us'\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 171, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --xlayouts, --vckeymap options with value(s) or argument is expected for the keyboard command\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -93,7 +93,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'keyboard', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        elif ((len(ns.kbd) == 0) and (not self.vc_keymap) and (not self.x_layouts)):", "+        elif ((len(ns.kbd) >= 0) and (not self.vc_keymap) and (not self.x_layouts)):", "             message = _('One of --xlayouts, --vckeymap options with value(s) or argument is expected for the keyboard command')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "         if (len(ns.kbd) > 0):"]]]}, "60": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "number_replacer", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 3, "op-name": "number_replacer", "result-data": [{"line_number": 61, "occurrence": 3, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 28, in runTest\n    self.assert_parse(\"keyboard us\", \"keyboard us\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 61, in parse\nIndexError: list index out of range\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -33,7 +33,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'keyboard', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        self.keyboard = _ns.kbd[0]", "+        self.keyboard = _ns.kbd[1]", "         return self", " ", " class F18_Keyboard(FC3_Keyboard):"]]]}, "39": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 0, "op-name": "replace_Gt_with_GtE", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 28, in runTest\n    self.assert_parse(\"keyboard us\", \"keyboard us\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 59, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nUnexpected arguments to keyboard command: []\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -30,7 +30,7 @@", "         (_ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(_ns.kbd) != 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'keyboard')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) >= 0):", "             mapping = {'command': 'keyboard', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         self.keyboard = _ns.kbd[0]"]]]}, "74": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_Eq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 2, "op-name": "replace_Gt_with_Eq", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 46, in runTest\n    \"keyboard 'us'\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 167, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nUnexpected arguments to keyboard command: []\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -90,7 +90,7 @@", "         if (len(ns.kbd) > 1):", "             message = (_('A single argument is expected for the %s command') % 'keyboard')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "-        elif (len(extra) > 0):", "+        elif (len(extra) == 0):", "             mapping = {'command': 'keyboard', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         elif ((len(ns.kbd) == 0) and (not self.vc_keymap) and (not self.x_layouts)):"]]]}, "23": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Eq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 0, "op-name": "replace_Eq_with_Gt", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 46, in runTest\n    \"keyboard 'us'\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 171, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --xlayouts, --vckeymap options with value(s) or argument is expected for the keyboard command\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -93,7 +93,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'keyboard', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        elif ((len(ns.kbd) == 0) and (not self.vc_keymap) and (not self.x_layouts)):", "+        elif ((len(ns.kbd) > 0) and (not self.vc_keymap) and (not self.x_layouts)):", "             message = _('One of --xlayouts, --vckeymap options with value(s) or argument is expected for the keyboard command')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "         if (len(ns.kbd) > 0):"]]]}, "49": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_NotEq_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 1, "op-name": "replace_NotEq_with_GtE", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 28, in runTest\n    self.assert_parse(\"keyboard us\", \"keyboard us\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 56, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nKickstart command keyboard requires one argument\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -28,7 +28,7 @@", " ", "     def parse(self, args):", "         (_ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(_ns.kbd) != 1):", "+        if (len(_ns.kbd) >= 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'keyboard')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'keyboard', 'options': extra}"]]]}, "63": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "number_replacer", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 6, "op-name": "number_replacer", "result-data": [{"line_number": 97, "occurrence": 6, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 55, in runTest\n    \"keyboard --xlayouts='cz','cz (qwerty)'\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: \"keyboard --xlayouts='cz'\\n\" != \"keyboard --xlayouts='cz','cz (qwerty)'\\n\"\n- keyboard --xlayouts='cz'\n+ keyboard --xlayouts='cz','cz (qwerty)'\n?                         ++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -65,7 +65,7 @@", "             retval += (' --vckeymap=%s' % self.vc_keymap)", "         if self.x_layouts:", "             layouts_str = (\"'%s'\" % self.x_layouts[0])", "-            for layout in self.x_layouts[1:]:", "+            for layout in self.x_layouts[2:]:", "                 layouts_str += (\",'%s'\" % layout)", "             retval += (' --xlayouts=%s' % layouts_str)", "         if self.switch_options:"]]]}, "17": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_Is", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 2, "op-name": "replace_Gt_with_Is", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 46, in runTest\n    \"keyboard 'us'\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 167, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nUnexpected arguments to keyboard command: []\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -90,7 +90,7 @@", "         if (len(ns.kbd) > 1):", "             message = (_('A single argument is expected for the %s command') % 'keyboard')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "-        elif (len(extra) > 0):", "+        elif (len(extra) is 0):", "             mapping = {'command': 'keyboard', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         elif ((len(ns.kbd) == 0) and (not self.vc_keymap) and (not self.x_layouts)):"]]]}, "32": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_NotEq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 2, "op-name": "replace_Gt_with_NotEq", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotEq"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -90,7 +90,7 @@", "         if (len(ns.kbd) > 1):", "             message = (_('A single argument is expected for the %s command') % 'keyboard')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "-        elif (len(extra) > 0):", "+        elif (len(extra) != 0):", "             mapping = {'command': 'keyboard', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         elif ((len(ns.kbd) == 0) and (not self.vc_keymap) and (not self.x_layouts)):"]]]}, "67": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "number_replacer", "10", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 10, "op-name": "number_replacer", "result-data": [{"line_number": 165, "occurrence": 10, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 70, in runTest\n    self.assert_parse_error(\"keyboard --foo us\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -90,7 +90,7 @@", "         if (len(ns.kbd) > 1):", "             message = (_('A single argument is expected for the %s command') % 'keyboard')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "-        elif (len(extra) > 0):", "+        elif (len(extra) > 1):", "             mapping = {'command': 'keyboard', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         elif ((len(ns.kbd) == 0) and (not self.vc_keymap) and (not self.x_layouts)):"]]]}, "64": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "number_replacer", "7", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 7, "op-name": "number_replacer", "result-data": [{"line_number": 102, "occurrence": 7, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 61, in runTest\n    \"keyboard --vckeymap=us --xlayouts='cz' --switch='grp:alt_shift_toggle'\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.keyboard\", line 85, in __str__\n  File \"pykickstart.commands.keyboard\", line 102, in _getArgsAsStr\nIndexError: list index out of range\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -69,7 +69,7 @@", "                 layouts_str += (\",'%s'\" % layout)", "             retval += (' --xlayouts=%s' % layouts_str)", "         if self.switch_options:", "-            switch_str = (\"'%s'\" % self.switch_options[0])", "+            switch_str = (\"'%s'\" % self.switch_options[1])", "             for opt in self.switch_options[1:]:", "                 switch_str += (\",'%s'\" % opt)", "             retval += (' --switch=%s' % switch_str)"]]]}, "18": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_Is", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 3, "op-name": "replace_Gt_with_Is", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 46, in runTest\n    \"keyboard 'us'\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != \"keyboard 'us'\\n\"\n+ keyboard 'us'\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -96,7 +96,7 @@", "         elif ((len(ns.kbd) == 0) and (not self.vc_keymap) and (not self.x_layouts)):", "             message = _('One of --xlayouts, --vckeymap options with value(s) or argument is expected for the keyboard command')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "-        if (len(ns.kbd) > 0):", "+        if (len(ns.kbd) is 0):", "             self._keyboard = ns.kbd[0]", "         return self", " "]]]}, "7": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_NotEq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 0, "op-name": "replace_NotEq_with_NotIn", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -17,7 +17,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.keyboard != ''):", "+        if (self.keyboard not in ''):", "             retval += ('# System keyboard\\nkeyboard %s\\n' % self.keyboard)", "         return retval", " "]]]}, "21": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_LtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 2, "op-name": "replace_Gt_with_LtE", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 46, in runTest\n    \"keyboard 'us'\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 167, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nUnexpected arguments to keyboard command: []\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -90,7 +90,7 @@", "         if (len(ns.kbd) > 1):", "             message = (_('A single argument is expected for the %s command') % 'keyboard')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "-        elif (len(extra) > 0):", "+        elif (len(extra) <= 0):", "             mapping = {'command': 'keyboard', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         elif ((len(ns.kbd) == 0) and (not self.vc_keymap) and (not self.x_layouts)):"]]]}, "69": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "number_replacer", "12", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 12, "op-name": "number_replacer", "result-data": [{"line_number": 173, "occurrence": 12, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 46, in runTest\n    \"keyboard 'us'\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != \"keyboard 'us'\\n\"\n+ keyboard 'us'\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -96,7 +96,7 @@", "         elif ((len(ns.kbd) == 0) and (not self.vc_keymap) and (not self.x_layouts)):", "             message = _('One of --xlayouts, --vckeymap options with value(s) or argument is expected for the keyboard command')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "-        if (len(ns.kbd) > 0):", "+        if (len(ns.kbd) > 1):", "             self._keyboard = ns.kbd[0]", "         return self", " "]]]}, "25": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 1, "op-name": "replace_Gt_with_In", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 46, in runTest\n    \"keyboard 'us'\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 162, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -87,7 +87,7 @@", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (len(ns.kbd) > 1):", "+        if (len(ns.kbd) in 1):", "             message = (_('A single argument is expected for the %s command') % 'keyboard')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "         elif (len(extra) > 0):"]]]}, "54": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_Lt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 3, "op-name": "replace_Gt_with_Lt", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 46, in runTest\n    \"keyboard 'us'\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != \"keyboard 'us'\\n\"\n+ keyboard 'us'\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -96,7 +96,7 @@", "         elif ((len(ns.kbd) == 0) and (not self.vc_keymap) and (not self.x_layouts)):", "             message = _('One of --xlayouts, --vckeymap options with value(s) or argument is expected for the keyboard command')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "-        if (len(ns.kbd) > 0):", "+        if (len(ns.kbd) < 0):", "             self._keyboard = ns.kbd[0]", "         return self", " "]]]}, "3": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_NotIn", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 2, "op-name": "replace_Gt_with_NotIn", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 46, in runTest\n    \"keyboard 'us'\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 165, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -90,7 +90,7 @@", "         if (len(ns.kbd) > 1):", "             message = (_('A single argument is expected for the %s command') % 'keyboard')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "-        elif (len(extra) > 0):", "+        elif (len(extra) not in 0):", "             mapping = {'command': 'keyboard', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         elif ((len(ns.kbd) == 0) and (not self.vc_keymap) and (not self.x_layouts)):"]]]}, "47": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Eq_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 0, "op-name": "replace_Eq_with_NotEq", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 46, in runTest\n    \"keyboard 'us'\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 171, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --xlayouts, --vckeymap options with value(s) or argument is expected for the keyboard command\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -93,7 +93,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'keyboard', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        elif ((len(ns.kbd) == 0) and (not self.vc_keymap) and (not self.x_layouts)):", "+        elif ((len(ns.kbd) != 0) and (not self.vc_keymap) and (not self.x_layouts)):", "             message = _('One of --xlayouts, --vckeymap options with value(s) or argument is expected for the keyboard command')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "         if (len(ns.kbd) > 0):"]]]}, "28": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_NotEq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 0, "op-name": "replace_NotEq_with_In", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 28, in runTest\n    self.assert_parse(\"keyboard us\", \"keyboard us\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'keyboard us\\n'\n+ keyboard us\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -17,7 +17,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.keyboard != ''):", "+        if (self.keyboard in ''):", "             retval += ('# System keyboard\\nkeyboard %s\\n' % self.keyboard)", "         return retval", " "]]]}, "62": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "number_replacer", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 5, "op-name": "number_replacer", "result-data": [{"line_number": 96, "occurrence": 5, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 53, in runTest\n    \"keyboard --xlayouts='cz (qwerty)'\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.keyboard\", line 85, in __str__\n  File \"pykickstart.commands.keyboard\", line 96, in _getArgsAsStr\nIndexError: list index out of range\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -64,7 +64,7 @@", "         if self.vc_keymap:", "             retval += (' --vckeymap=%s' % self.vc_keymap)", "         if self.x_layouts:", "-            layouts_str = (\"'%s'\" % self.x_layouts[0])", "+            layouts_str = (\"'%s'\" % self.x_layouts[1])", "             for layout in self.x_layouts[1:]:", "                 layouts_str += (\",'%s'\" % layout)", "             retval += (' --xlayouts=%s' % layouts_str)"]]]}, "73": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_Eq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 1, "op-name": "replace_Gt_with_Eq", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 46, in runTest\n    \"keyboard 'us'\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 164, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nA single argument is expected for the keyboard command\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -87,7 +87,7 @@", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (len(ns.kbd) > 1):", "+        if (len(ns.kbd) == 1):", "             message = (_('A single argument is expected for the %s command') % 'keyboard')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "         elif (len(extra) > 0):"]]]}, "19": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 0, "op-name": "replace_Gt_with_LtE", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 28, in runTest\n    self.assert_parse(\"keyboard us\", \"keyboard us\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 59, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nUnexpected arguments to keyboard command: []\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -30,7 +30,7 @@", "         (_ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(_ns.kbd) != 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'keyboard')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) <= 0):", "             mapping = {'command': 'keyboard', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         self.keyboard = _ns.kbd[0]"]]]}, "56": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_NotEq_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 1, "op-name": "replace_NotEq_with_LtE", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 28, in runTest\n    self.assert_parse(\"keyboard us\", \"keyboard us\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 56, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nKickstart command keyboard requires one argument\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -28,7 +28,7 @@", " ", "     def parse(self, args):", "         (_ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(_ns.kbd) != 1):", "+        if (len(_ns.kbd) <= 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'keyboard')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'keyboard', 'options': extra}"]]]}, "11": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_IsNot", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 1, "op-name": "replace_Gt_with_IsNot", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIsNot"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 48, in runTest\n    \"keyboard --vckeymap=us\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 164, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nA single argument is expected for the keyboard command\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -87,7 +87,7 @@", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (len(ns.kbd) > 1):", "+        if (len(ns.kbd) is not 1):", "             message = (_('A single argument is expected for the %s command') % 'keyboard')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "         elif (len(extra) > 0):"]]]}, "29": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_NotEq_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 1, "op-name": "replace_NotEq_with_In", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 28, in runTest\n    self.assert_parse(\"keyboard us\", \"keyboard us\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 55, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -28,7 +28,7 @@", " ", "     def parse(self, args):", "         (_ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(_ns.kbd) != 1):", "+        if (len(_ns.kbd) in 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'keyboard')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'keyboard', 'options': extra}"]]]}, "35": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_NotEq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 0, "op-name": "replace_NotEq_with_Gt", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -17,7 +17,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.keyboard != ''):", "+        if (self.keyboard > ''):", "             retval += ('# System keyboard\\nkeyboard %s\\n' % self.keyboard)", "         return retval", " "]]]}, "68": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "number_replacer", "11", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 11, "op-name": "number_replacer", "result-data": [{"line_number": 168, "occurrence": 11, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 46, in runTest\n    \"keyboard 'us'\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 171, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --xlayouts, --vckeymap options with value(s) or argument is expected for the keyboard command\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -93,7 +93,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'keyboard', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        elif ((len(ns.kbd) == 0) and (not self.vc_keymap) and (not self.x_layouts)):", "+        elif ((len(ns.kbd) == 1) and (not self.vc_keymap) and (not self.x_layouts)):", "             message = _('One of --xlayouts, --vckeymap options with value(s) or argument is expected for the keyboard command')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "         if (len(ns.kbd) > 0):"]]]}, "9": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Eq_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 0, "op-name": "replace_Eq_with_IsNot", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 46, in runTest\n    \"keyboard 'us'\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 171, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --xlayouts, --vckeymap options with value(s) or argument is expected for the keyboard command\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -93,7 +93,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'keyboard', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        elif ((len(ns.kbd) == 0) and (not self.vc_keymap) and (not self.x_layouts)):", "+        elif ((len(ns.kbd) is not 0) and (not self.vc_keymap) and (not self.x_layouts)):", "             message = _('One of --xlayouts, --vckeymap options with value(s) or argument is expected for the keyboard command')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "         if (len(ns.kbd) > 0):"]]]}, "45": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_NotEq_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 1, "op-name": "replace_NotEq_with_Is", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 28, in runTest\n    self.assert_parse(\"keyboard us\", \"keyboard us\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 56, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nKickstart command keyboard requires one argument\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -28,7 +28,7 @@", " ", "     def parse(self, args):", "         (_ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(_ns.kbd) != 1):", "+        if (len(_ns.kbd) is 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'keyboard')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'keyboard', 'options': extra}"]]]}, "41": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_GtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 2, "op-name": "replace_Gt_with_GtE", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 46, in runTest\n    \"keyboard 'us'\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 167, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nUnexpected arguments to keyboard command: []\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -90,7 +90,7 @@", "         if (len(ns.kbd) > 1):", "             message = (_('A single argument is expected for the %s command') % 'keyboard')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "-        elif (len(extra) > 0):", "+        elif (len(extra) >= 0):", "             mapping = {'command': 'keyboard', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         elif ((len(ns.kbd) == 0) and (not self.vc_keymap) and (not self.x_layouts)):"]]]}, "13": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_IsNot", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 3, "op-name": "replace_Gt_with_IsNot", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIsNot"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -96,7 +96,7 @@", "         elif ((len(ns.kbd) == 0) and (not self.vc_keymap) and (not self.x_layouts)):", "             message = _('One of --xlayouts, --vckeymap options with value(s) or argument is expected for the keyboard command')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "-        if (len(ns.kbd) > 0):", "+        if (len(ns.kbd) is not 0):", "             self._keyboard = ns.kbd[0]", "         return self", " "]]]}, "42": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_GtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 3, "op-name": "replace_Gt_with_GtE", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 48, in runTest\n    \"keyboard --vckeymap=us\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 174, in parse\nIndexError: list index out of range\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -96,7 +96,7 @@", "         elif ((len(ns.kbd) == 0) and (not self.vc_keymap) and (not self.x_layouts)):", "             message = _('One of --xlayouts, --vckeymap options with value(s) or argument is expected for the keyboard command')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "-        if (len(ns.kbd) > 0):", "+        if (len(ns.kbd) >= 0):", "             self._keyboard = ns.kbd[0]", "         return self", " "]]]}, "4": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_NotIn", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 3, "op-name": "replace_Gt_with_NotIn", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 46, in runTest\n    \"keyboard 'us'\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 173, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -96,7 +96,7 @@", "         elif ((len(ns.kbd) == 0) and (not self.vc_keymap) and (not self.x_layouts)):", "             message = _('One of --xlayouts, --vckeymap options with value(s) or argument is expected for the keyboard command')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "-        if (len(ns.kbd) > 0):", "+        if (len(ns.kbd) not in 0):", "             self._keyboard = ns.kbd[0]", "         return self", " "]]]}, "12": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_IsNot", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 2, "op-name": "replace_Gt_with_IsNot", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIsNot"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -90,7 +90,7 @@", "         if (len(ns.kbd) > 1):", "             message = (_('A single argument is expected for the %s command') % 'keyboard')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "-        elif (len(extra) > 0):", "+        elif (len(extra) is not 0):", "             mapping = {'command': 'keyboard', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         elif ((len(ns.kbd) == 0) and (not self.vc_keymap) and (not self.x_layouts)):"]]]}, "50": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Eq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 0, "op-name": "replace_Eq_with_In", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 46, in runTest\n    \"keyboard 'us'\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 168, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -93,7 +93,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'keyboard', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        elif ((len(ns.kbd) == 0) and (not self.vc_keymap) and (not self.x_layouts)):", "+        elif ((len(ns.kbd) in 0) and (not self.vc_keymap) and (not self.x_layouts)):", "             message = _('One of --xlayouts, --vckeymap options with value(s) or argument is expected for the keyboard command')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "         if (len(ns.kbd) > 0):"]]]}, "51": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 0, "op-name": "replace_Gt_with_Lt", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 33, in runTest\n    self.assert_parse_error(\"keyboard --foo us\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -30,7 +30,7 @@", "         (_ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(_ns.kbd) != 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'keyboard')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) < 0):", "             mapping = {'command': 'keyboard', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         self.keyboard = _ns.kbd[0]"]]]}, "10": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 0, "op-name": "replace_Gt_with_IsNot", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIsNot"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -30,7 +30,7 @@", "         (_ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(_ns.kbd) != 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'keyboard')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) is not 0):", "             mapping = {'command': 'keyboard', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         self.keyboard = _ns.kbd[0]"]]]}, "52": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 1, "op-name": "replace_Gt_with_Lt", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 48, in runTest\n    \"keyboard --vckeymap=us\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 164, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nA single argument is expected for the keyboard command\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -87,7 +87,7 @@", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (len(ns.kbd) > 1):", "+        if (len(ns.kbd) < 1):", "             message = (_('A single argument is expected for the %s command') % 'keyboard')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "         elif (len(extra) > 0):"]]]}, "30": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 0, "op-name": "replace_Gt_with_NotEq", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotEq"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -30,7 +30,7 @@", "         (_ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(_ns.kbd) != 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'keyboard')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) != 0):", "             mapping = {'command': 'keyboard', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         self.keyboard = _ns.kbd[0]"]]]}, "76": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Eq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 0, "op-name": "replace_Eq_with_LtE", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -93,7 +93,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'keyboard', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        elif ((len(ns.kbd) == 0) and (not self.vc_keymap) and (not self.x_layouts)):", "+        elif ((len(ns.kbd) <= 0) and (not self.vc_keymap) and (not self.x_layouts)):", "             message = _('One of --xlayouts, --vckeymap options with value(s) or argument is expected for the keyboard command')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "         if (len(ns.kbd) > 0):"]]]}, "72": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 0, "op-name": "replace_Gt_with_Eq", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 28, in runTest\n    self.assert_parse(\"keyboard us\", \"keyboard us\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 59, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nUnexpected arguments to keyboard command: []\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -30,7 +30,7 @@", "         (_ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(_ns.kbd) != 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'keyboard')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) == 0):", "             mapping = {'command': 'keyboard', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         self.keyboard = _ns.kbd[0]"]]]}, "33": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_NotEq", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 3, "op-name": "replace_Gt_with_NotEq", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotEq"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -96,7 +96,7 @@", "         elif ((len(ns.kbd) == 0) and (not self.vc_keymap) and (not self.x_layouts)):", "             message = _('One of --xlayouts, --vckeymap options with value(s) or argument is expected for the keyboard command')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "-        if (len(ns.kbd) > 0):", "+        if (len(ns.kbd) != 0):", "             self._keyboard = ns.kbd[0]", "         return self", " "]]]}, "44": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_NotEq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 0, "op-name": "replace_NotEq_with_Is", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 28, in runTest\n    self.assert_parse(\"keyboard us\", \"keyboard us\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'keyboard us\\n'\n+ keyboard us\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -17,7 +17,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.keyboard != ''):", "+        if (self.keyboard is ''):", "             retval += ('# System keyboard\\nkeyboard %s\\n' % self.keyboard)", "         return retval", " "]]]}, "26": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_In", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 2, "op-name": "replace_Gt_with_In", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 46, in runTest\n    \"keyboard 'us'\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 165, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -90,7 +90,7 @@", "         if (len(ns.kbd) > 1):", "             message = (_('A single argument is expected for the %s command') % 'keyboard')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "-        elif (len(extra) > 0):", "+        elif (len(extra) in 0):", "             mapping = {'command': 'keyboard', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         elif ((len(ns.kbd) == 0) and (not self.vc_keymap) and (not self.x_layouts)):"]]]}, "31": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 1, "op-name": "replace_Gt_with_NotEq", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 48, in runTest\n    \"keyboard --vckeymap=us\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 164, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nA single argument is expected for the keyboard command\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -87,7 +87,7 @@", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (len(ns.kbd) > 1):", "+        if (len(ns.kbd) != 1):", "             message = (_('A single argument is expected for the %s command') % 'keyboard')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "         elif (len(extra) > 0):"]]]}, "57": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "number_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 0, "op-name": "number_replacer", "result-data": [{"line_number": 33, "occurrence": 0, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -10,7 +10,7 @@", "     removedKeywords = KickstartCommand.removedKeywords", "     removedAttrs = KickstartCommand.removedAttrs", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         KickstartCommand.__init__(self, writePriority, *args, **kwargs)", "         self.op = self._getParser()", "         self.keyboard = kwargs.get('keyboard', '')"]]]}, "43": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Eq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 0, "op-name": "replace_Eq_with_NotIn", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 46, in runTest\n    \"keyboard 'us'\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 168, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -93,7 +93,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'keyboard', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        elif ((len(ns.kbd) == 0) and (not self.vc_keymap) and (not self.x_layouts)):", "+        elif ((len(ns.kbd) not in 0) and (not self.vc_keymap) and (not self.x_layouts)):", "             message = _('One of --xlayouts, --vckeymap options with value(s) or argument is expected for the keyboard command')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "         if (len(ns.kbd) > 0):"]]]}, "40": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 1, "op-name": "replace_Gt_with_GtE", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 46, in runTest\n    \"keyboard 'us'\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 164, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nA single argument is expected for the keyboard command\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -87,7 +87,7 @@", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (len(ns.kbd) > 1):", "+        if (len(ns.kbd) >= 1):", "             message = (_('A single argument is expected for the %s command') % 'keyboard')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "         elif (len(extra) > 0):"]]]}, "75": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_Eq", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 3, "op-name": "replace_Gt_with_Eq", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 46, in runTest\n    \"keyboard 'us'\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != \"keyboard 'us'\\n\"\n+ keyboard 'us'\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -96,7 +96,7 @@", "         elif ((len(ns.kbd) == 0) and (not self.vc_keymap) and (not self.x_layouts)):", "             message = _('One of --xlayouts, --vckeymap options with value(s) or argument is expected for the keyboard command')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "-        if (len(ns.kbd) > 0):", "+        if (len(ns.kbd) == 0):", "             self._keyboard = ns.kbd[0]", "         return self", " "]]]}, "14": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Eq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 0, "op-name": "replace_Eq_with_Is", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -93,7 +93,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'keyboard', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        elif ((len(ns.kbd) == 0) and (not self.vc_keymap) and (not self.x_layouts)):", "+        elif ((len(ns.kbd) is 0) and (not self.vc_keymap) and (not self.x_layouts)):", "             message = _('One of --xlayouts, --vckeymap options with value(s) or argument is expected for the keyboard command')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "         if (len(ns.kbd) > 0):"]]]}, "66": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "number_replacer", "9", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 9, "op-name": "number_replacer", "result-data": [{"line_number": 162, "occurrence": 9, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 67, in runTest\n    self.assert_parse_error(\"keyboard cz sk\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -87,7 +87,7 @@", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (len(ns.kbd) > 1):", "+        if (len(ns.kbd) > 2):", "             message = (_('A single argument is expected for the %s command') % 'keyboard')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "         elif (len(extra) > 0):"]]]}, "22": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_LtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 3, "op-name": "replace_Gt_with_LtE", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 46, in runTest\n    \"keyboard 'us'\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != \"keyboard 'us'\\n\"\n+ keyboard 'us'\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -96,7 +96,7 @@", "         elif ((len(ns.kbd) == 0) and (not self.vc_keymap) and (not self.x_layouts)):", "             message = _('One of --xlayouts, --vckeymap options with value(s) or argument is expected for the keyboard command')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "-        if (len(ns.kbd) > 0):", "+        if (len(ns.kbd) <= 0):", "             self._keyboard = ns.kbd[0]", "         return self", " "]]]}, "71": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "number_replacer", "14", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 14, "op-name": "number_replacer", "result-data": [{"line_number": 183, "occurrence": 14, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 78, in runTest\n    self.assertEqual(obj.keyboard, \"us\")\nAssertionError: 'cz' != 'us'\n- cz\n+ us\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -103,7 +103,7 @@", "     @property", "     def keyboard(self):", "         if self.x_layouts:", "-            return (self._keyboard or self.vc_keymap or self.x_layouts[0])", "+            return (self._keyboard or self.vc_keymap or self.x_layouts[1])", "         else:", "             return (self._keyboard or self.vc_keymap or '')", " "]]]}, "46": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Eq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 0, "op-name": "replace_Eq_with_Lt", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 66, in runTest\n    self.assert_parse_error(\"keyboard\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -93,7 +93,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'keyboard', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        elif ((len(ns.kbd) == 0) and (not self.vc_keymap) and (not self.x_layouts)):", "+        elif ((len(ns.kbd) < 0) and (not self.vc_keymap) and (not self.x_layouts)):", "             message = _('One of --xlayouts, --vckeymap options with value(s) or argument is expected for the keyboard command')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "         if (len(ns.kbd) > 0):"]]]}, "38": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_NotEq_with_Eq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 1, "op-name": "replace_NotEq_with_Eq", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 28, in runTest\n    self.assert_parse(\"keyboard us\", \"keyboard us\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 56, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nKickstart command keyboard requires one argument\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -28,7 +28,7 @@", " ", "     def parse(self, args):", "         (_ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(_ns.kbd) != 1):", "+        if (len(_ns.kbd) == 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'keyboard')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'keyboard', 'options': extra}"]]]}, "27": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_In", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 3, "op-name": "replace_Gt_with_In", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 46, in runTest\n    \"keyboard 'us'\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 173, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -96,7 +96,7 @@", "         elif ((len(ns.kbd) == 0) and (not self.vc_keymap) and (not self.x_layouts)):", "             message = _('One of --xlayouts, --vckeymap options with value(s) or argument is expected for the keyboard command')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "-        if (len(ns.kbd) > 0):", "+        if (len(ns.kbd) in 0):", "             self._keyboard = ns.kbd[0]", "         return self", " "]]]}, "61": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "number_replacer", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 4, "op-name": "number_replacer", "result-data": [{"line_number": 65, "occurrence": 4, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -38,7 +38,7 @@", " ", " class F18_Keyboard(FC3_Keyboard):", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         KickstartCommand.__init__(self, writePriority, *args, **kwargs)", "         self.op = self._getParser()", "         self._keyboard = kwargs.get('_keyboard', '')"]]]}, "24": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 0, "op-name": "replace_Gt_with_In", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 28, in runTest\n    self.assert_parse(\"keyboard us\", \"keyboard us\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 57, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -30,7 +30,7 @@", "         (_ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(_ns.kbd) != 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'keyboard')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) in 0):", "             mapping = {'command': 'keyboard', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         self.keyboard = _ns.kbd[0]"]]]}, "16": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_Gt_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 1, "op-name": "replace_Gt_with_Is", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 46, in runTest\n    \"keyboard 'us'\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 164, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nA single argument is expected for the keyboard command\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -87,7 +87,7 @@", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (len(ns.kbd) > 1):", "+        if (len(ns.kbd) is 1):", "             message = (_('A single argument is expected for the %s command') % 'keyboard')", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=message))", "         elif (len(extra) > 0):"]]]}, "36": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.keyboard", "replace_NotEq_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "module-name": "pykickstart.commands.keyboard", "occurrence": 1, "op-name": "replace_NotEq_with_Gt", "result-data": [{"line_number": "<UNKNOWN>", "occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/keyboard.py\", line 31, in runTest\n    self.assert_parse_error(\"keyboard\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\n  File \"pykickstart.commands.keyboard\", line 61, in parse\nIndexError: list index out of range\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/keyboard.py", "@@ -28,7 +28,7 @@", " ", "     def parse(self, args):", "         (_ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(_ns.kbd) != 1):", "+        if (len(_ns.kbd) > 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'keyboard')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'keyboard', 'options': extra}"]]]}}, "_default": {}, "work-parameters": {"1": {"test-args": ["-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/keyboard.py"], "test-runner": "nose", "timeout": 9.429689999999999}}}