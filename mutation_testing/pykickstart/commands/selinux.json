{"_default": {}, "work-items": {"16": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Is_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/selinux.py\", line 10, in runTest\n    self.assert_parse(\"selinux --permissive\", \"selinux --permissive\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.selinux\", line 38, in __str__\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -15,7 +15,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if ((not retval) and (self.selinux is None)):", "+        if ((not retval) and (self.selinux not in None)):", "             return ''", "         retval += '# SELinux configuration\\n'", "         if (self.selinux == SELINUX_DISABLED):"]]], "occurrence": 0, "op-name": "replace_Is_with_NotIn", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "7": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Eq_with_Is", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -22,7 +22,7 @@", "             retval += 'selinux --disabled\\n'", "         elif (self.selinux == SELINUX_ENFORCING):", "             retval += 'selinux --enforcing\\n'", "-        elif (self.selinux == SELINUX_PERMISSIVE):", "+        elif (self.selinux is SELINUX_PERMISSIVE):", "             retval += 'selinux --permissive\\n'", "         return retval", " "]]], "occurrence": 2, "op-name": "replace_Eq_with_Is", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "14": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Eq_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/selinux.py\", line 10, in runTest\n    self.assert_parse(\"selinux --permissive\", \"selinux --permissive\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'selinux --enforcing\\n' != 'selinux --permissive\\n'\n- selinux --enforcing\n+ selinux --permissive\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -20,7 +20,7 @@", "         retval += '# SELinux configuration\\n'", "         if (self.selinux == SELINUX_DISABLED):", "             retval += 'selinux --disabled\\n'", "-        elif (self.selinux == SELINUX_ENFORCING):", "+        elif (self.selinux > SELINUX_ENFORCING):", "             retval += 'selinux --enforcing\\n'", "         elif (self.selinux == SELINUX_PERMISSIVE):", "             retval += 'selinux --permissive\\n'"]]], "occurrence": 1, "op-name": "replace_Eq_with_Gt", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "3": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Eq_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -20,7 +20,7 @@", "         retval += '# SELinux configuration\\n'", "         if (self.selinux == SELINUX_DISABLED):", "             retval += 'selinux --disabled\\n'", "-        elif (self.selinux == SELINUX_ENFORCING):", "+        elif (self.selinux <= SELINUX_ENFORCING):", "             retval += 'selinux --enforcing\\n'", "         elif (self.selinux == SELINUX_PERMISSIVE):", "             retval += 'selinux --permissive\\n'"]]], "occurrence": 1, "op-name": "replace_Eq_with_LtE", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "2": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Eq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -18,7 +18,7 @@", "         if ((not retval) and (self.selinux is None)):", "             return ''", "         retval += '# SELinux configuration\\n'", "-        if (self.selinux == SELINUX_DISABLED):", "+        if (self.selinux <= SELINUX_DISABLED):", "             retval += 'selinux --disabled\\n'", "         elif (self.selinux == SELINUX_ENFORCING):", "             retval += 'selinux --enforcing\\n'"]]], "occurrence": 0, "op-name": "replace_Eq_with_LtE", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "19": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Eq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/selinux.py\", line 10, in runTest\n    self.assert_parse(\"selinux --permissive\", \"selinux --permissive\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.selinux\", line 43, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -18,7 +18,7 @@", "         if ((not retval) and (self.selinux is None)):", "             return ''", "         retval += '# SELinux configuration\\n'", "-        if (self.selinux == SELINUX_DISABLED):", "+        if (self.selinux not in SELINUX_DISABLED):", "             retval += 'selinux --disabled\\n'", "         elif (self.selinux == SELINUX_ENFORCING):", "             retval += 'selinux --enforcing\\n'"]]], "occurrence": 0, "op-name": "replace_Eq_with_NotIn", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "20": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Eq_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/selinux.py\", line 10, in runTest\n    self.assert_parse(\"selinux --permissive\", \"selinux --permissive\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.selinux\", line 45, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -20,7 +20,7 @@", "         retval += '# SELinux configuration\\n'", "         if (self.selinux == SELINUX_DISABLED):", "             retval += 'selinux --disabled\\n'", "-        elif (self.selinux == SELINUX_ENFORCING):", "+        elif (self.selinux not in SELINUX_ENFORCING):", "             retval += 'selinux --enforcing\\n'", "         elif (self.selinux == SELINUX_PERMISSIVE):", "             retval += 'selinux --permissive\\n'"]]], "occurrence": 1, "op-name": "replace_Eq_with_NotIn", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "31": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Eq_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/selinux.py\", line 10, in runTest\n    self.assert_parse(\"selinux --permissive\", \"selinux --permissive\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'selinux --disabled\\n' != 'selinux --permissive\\n'\n- selinux --disabled\n+ selinux --permissive\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -18,7 +18,7 @@", "         if ((not retval) and (self.selinux is None)):", "             return ''", "         retval += '# SELinux configuration\\n'", "-        if (self.selinux == SELINUX_DISABLED):", "+        if (self.selinux != SELINUX_DISABLED):", "             retval += 'selinux --disabled\\n'", "         elif (self.selinux == SELINUX_ENFORCING):", "             retval += 'selinux --enforcing\\n'"]]], "occurrence": 0, "op-name": "replace_Eq_with_NotEq", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "22": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "number_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 29, "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -8,7 +8,7 @@", "     removedKeywords = KickstartCommand.removedKeywords", "     removedAttrs = KickstartCommand.removedAttrs", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         KickstartCommand.__init__(self, writePriority, *args, **kwargs)", "         self.op = self._getParser()", "         self.selinux = kwargs.get('selinux', None)"]]], "occurrence": 0, "op-name": "number_replacer", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "29": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Eq_with_Lt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/selinux.py\", line 10, in runTest\n    self.assert_parse(\"selinux --permissive\", \"selinux --permissive\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'selinux --permissive\\n'\n+ selinux --permissive\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -22,7 +22,7 @@", "             retval += 'selinux --disabled\\n'", "         elif (self.selinux == SELINUX_ENFORCING):", "             retval += 'selinux --enforcing\\n'", "-        elif (self.selinux == SELINUX_PERMISSIVE):", "+        elif (self.selinux < SELINUX_PERMISSIVE):", "             retval += 'selinux --permissive\\n'", "         return retval", " "]]], "occurrence": 2, "op-name": "replace_Eq_with_Lt", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "5": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Eq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -18,7 +18,7 @@", "         if ((not retval) and (self.selinux is None)):", "             return ''", "         retval += '# SELinux configuration\\n'", "-        if (self.selinux == SELINUX_DISABLED):", "+        if (self.selinux is SELINUX_DISABLED):", "             retval += 'selinux --disabled\\n'", "         elif (self.selinux == SELINUX_ENFORCING):", "             retval += 'selinux --enforcing\\n'"]]], "occurrence": 0, "op-name": "replace_Eq_with_Is", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "12": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Is_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithLtE", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/selinux.py\", line 10, in runTest\n    self.assert_parse(\"selinux --permissive\", \"selinux --permissive\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.selinux\", line 38, in __str__\nTypeError: unorderable types: int() <= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -15,7 +15,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if ((not retval) and (self.selinux is None)):", "+        if ((not retval) and (self.selinux <= None)):", "             return ''", "         retval += '# SELinux configuration\\n'", "         if (self.selinux == SELINUX_DISABLED):"]]], "occurrence": 0, "op-name": "replace_Is_with_LtE", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "17": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Is_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithEq", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -15,7 +15,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if ((not retval) and (self.selinux is None)):", "+        if ((not retval) and (self.selinux == None)):", "             return ''", "         retval += '# SELinux configuration\\n'", "         if (self.selinux == SELINUX_DISABLED):"]]], "occurrence": 0, "op-name": "replace_Is_with_Eq", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "6": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Eq_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -20,7 +20,7 @@", "         retval += '# SELinux configuration\\n'", "         if (self.selinux == SELINUX_DISABLED):", "             retval += 'selinux --disabled\\n'", "-        elif (self.selinux == SELINUX_ENFORCING):", "+        elif (self.selinux is SELINUX_ENFORCING):", "             retval += 'selinux --enforcing\\n'", "         elif (self.selinux == SELINUX_PERMISSIVE):", "             retval += 'selinux --permissive\\n'"]]], "occurrence": 1, "op-name": "replace_Eq_with_Is", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "15": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Eq_with_Gt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/selinux.py\", line 10, in runTest\n    self.assert_parse(\"selinux --permissive\", \"selinux --permissive\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'selinux --permissive\\n'\n+ selinux --permissive\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -22,7 +22,7 @@", "             retval += 'selinux --disabled\\n'", "         elif (self.selinux == SELINUX_ENFORCING):", "             retval += 'selinux --enforcing\\n'", "-        elif (self.selinux == SELINUX_PERMISSIVE):", "+        elif (self.selinux > SELINUX_PERMISSIVE):", "             retval += 'selinux --permissive\\n'", "         return retval", " "]]], "occurrence": 2, "op-name": "replace_Eq_with_Gt", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "35": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Eq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/selinux.py\", line 10, in runTest\n    self.assert_parse(\"selinux --permissive\", \"selinux --permissive\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.selinux\", line 43, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -18,7 +18,7 @@", "         if ((not retval) and (self.selinux is None)):", "             return ''", "         retval += '# SELinux configuration\\n'", "-        if (self.selinux == SELINUX_DISABLED):", "+        if (self.selinux in SELINUX_DISABLED):", "             retval += 'selinux --disabled\\n'", "         elif (self.selinux == SELINUX_ENFORCING):", "             retval += 'selinux --enforcing\\n'"]]], "occurrence": 0, "op-name": "replace_Eq_with_In", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "33": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Eq_with_NotEq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/selinux.py\", line 10, in runTest\n    self.assert_parse(\"selinux --permissive\", \"selinux --permissive\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'selinux --permissive\\n'\n+ selinux --permissive\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -22,7 +22,7 @@", "             retval += 'selinux --disabled\\n'", "         elif (self.selinux == SELINUX_ENFORCING):", "             retval += 'selinux --enforcing\\n'", "-        elif (self.selinux == SELINUX_PERMISSIVE):", "+        elif (self.selinux != SELINUX_PERMISSIVE):", "             retval += 'selinux --permissive\\n'", "         return retval", " "]]], "occurrence": 2, "op-name": "replace_Eq_with_NotEq", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "30": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Is_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithIsNot", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/selinux.py\", line 10, in runTest\n    self.assert_parse(\"selinux --permissive\", \"selinux --permissive\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'selinux --permissive\\n'\n+ selinux --permissive\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -15,7 +15,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if ((not retval) and (self.selinux is None)):", "+        if ((not retval) and (self.selinux is not None)):", "             return ''", "         retval += '# SELinux configuration\\n'", "         if (self.selinux == SELINUX_DISABLED):"]]], "occurrence": 0, "op-name": "replace_Is_with_IsNot", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "25": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Eq_with_GtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/selinux.py\", line 21, in runTest\n    self.assertEqual(cmd.__str__(), \"# SELinux configuration\\n\")\nAssertionError: '# SELinux configuration\\nselinux --permissive\\n' != '# SELinux configuration\\n'\n  # SELinux configuration\n- selinux --permissive\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -22,7 +22,7 @@", "             retval += 'selinux --disabled\\n'", "         elif (self.selinux == SELINUX_ENFORCING):", "             retval += 'selinux --enforcing\\n'", "-        elif (self.selinux == SELINUX_PERMISSIVE):", "+        elif (self.selinux >= SELINUX_PERMISSIVE):", "             retval += 'selinux --permissive\\n'", "         return retval", " "]]], "occurrence": 2, "op-name": "replace_Eq_with_GtE", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "11": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Eq_with_IsNot", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/selinux.py\", line 10, in runTest\n    self.assert_parse(\"selinux --permissive\", \"selinux --permissive\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'selinux --permissive\\n'\n+ selinux --permissive\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -22,7 +22,7 @@", "             retval += 'selinux --disabled\\n'", "         elif (self.selinux == SELINUX_ENFORCING):", "             retval += 'selinux --enforcing\\n'", "-        elif (self.selinux == SELINUX_PERMISSIVE):", "+        elif (self.selinux is not SELINUX_PERMISSIVE):", "             retval += 'selinux --permissive\\n'", "         return retval", " "]]], "occurrence": 2, "op-name": "replace_Eq_with_IsNot", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "28": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Eq_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/selinux.py\", line 11, in runTest\n    self.assert_parse(\"selinux --enforcing\", \"selinux --enforcing\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'selinux --enforcing\\n'\n+ selinux --enforcing\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -20,7 +20,7 @@", "         retval += '# SELinux configuration\\n'", "         if (self.selinux == SELINUX_DISABLED):", "             retval += 'selinux --disabled\\n'", "-        elif (self.selinux == SELINUX_ENFORCING):", "+        elif (self.selinux < SELINUX_ENFORCING):", "             retval += 'selinux --enforcing\\n'", "         elif (self.selinux == SELINUX_PERMISSIVE):", "             retval += 'selinux --permissive\\n'"]]], "occurrence": 1, "op-name": "replace_Eq_with_Lt", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "27": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Eq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/selinux.py\", line 12, in runTest\n    self.assert_parse(\"selinux --disabled\", \"selinux --disabled\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'selinux --disabled\\n'\n+ selinux --disabled\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -18,7 +18,7 @@", "         if ((not retval) and (self.selinux is None)):", "             return ''", "         retval += '# SELinux configuration\\n'", "-        if (self.selinux == SELINUX_DISABLED):", "+        if (self.selinux < SELINUX_DISABLED):", "             retval += 'selinux --disabled\\n'", "         elif (self.selinux == SELINUX_ENFORCING):", "             retval += 'selinux --enforcing\\n'"]]], "occurrence": 0, "op-name": "replace_Eq_with_Lt", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "21": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Eq_with_NotIn", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/selinux.py\", line 10, in runTest\n    self.assert_parse(\"selinux --permissive\", \"selinux --permissive\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.selinux\", line 47, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -22,7 +22,7 @@", "             retval += 'selinux --disabled\\n'", "         elif (self.selinux == SELINUX_ENFORCING):", "             retval += 'selinux --enforcing\\n'", "-        elif (self.selinux == SELINUX_PERMISSIVE):", "+        elif (self.selinux not in SELINUX_PERMISSIVE):", "             retval += 'selinux --permissive\\n'", "         return retval", " "]]], "occurrence": 2, "op-name": "replace_Eq_with_NotIn", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "34": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Is_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithGt", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/selinux.py\", line 10, in runTest\n    self.assert_parse(\"selinux --permissive\", \"selinux --permissive\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.selinux\", line 38, in __str__\nTypeError: unorderable types: int() > NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -15,7 +15,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if ((not retval) and (self.selinux is None)):", "+        if ((not retval) and (self.selinux > None)):", "             return ''", "         retval += '# SELinux configuration\\n'", "         if (self.selinux == SELINUX_DISABLED):"]]], "occurrence": 0, "op-name": "replace_Is_with_Gt", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "18": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Is_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithIn", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/selinux.py\", line 10, in runTest\n    self.assert_parse(\"selinux --permissive\", \"selinux --permissive\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.selinux\", line 38, in __str__\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -15,7 +15,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if ((not retval) and (self.selinux is None)):", "+        if ((not retval) and (self.selinux in None)):", "             return ''", "         retval += '# SELinux configuration\\n'", "         if (self.selinux == SELINUX_DISABLED):"]]], "occurrence": 0, "op-name": "replace_Is_with_In", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "1": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Is_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/selinux.py\", line 10, in runTest\n    self.assert_parse(\"selinux --permissive\", \"selinux --permissive\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'selinux --permissive\\n'\n+ selinux --permissive\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -15,7 +15,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if ((not retval) and (self.selinux is None)):", "+        if ((not retval) and (self.selinux != None)):", "             return ''", "         retval += '# SELinux configuration\\n'", "         if (self.selinux == SELINUX_DISABLED):"]]], "occurrence": 0, "op-name": "replace_Is_with_NotEq", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "37": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Eq_with_In", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/selinux.py\", line 10, in runTest\n    self.assert_parse(\"selinux --permissive\", \"selinux --permissive\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.selinux\", line 47, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -22,7 +22,7 @@", "             retval += 'selinux --disabled\\n'", "         elif (self.selinux == SELINUX_ENFORCING):", "             retval += 'selinux --enforcing\\n'", "-        elif (self.selinux == SELINUX_PERMISSIVE):", "+        elif (self.selinux in SELINUX_PERMISSIVE):", "             retval += 'selinux --permissive\\n'", "         return retval", " "]]], "occurrence": 2, "op-name": "replace_Eq_with_In", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "10": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Eq_with_IsNot", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/selinux.py\", line 10, in runTest\n    self.assert_parse(\"selinux --permissive\", \"selinux --permissive\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'selinux --enforcing\\n' != 'selinux --permissive\\n'\n- selinux --enforcing\n+ selinux --permissive\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -20,7 +20,7 @@", "         retval += '# SELinux configuration\\n'", "         if (self.selinux == SELINUX_DISABLED):", "             retval += 'selinux --disabled\\n'", "-        elif (self.selinux == SELINUX_ENFORCING):", "+        elif (self.selinux is not SELINUX_ENFORCING):", "             retval += 'selinux --enforcing\\n'", "         elif (self.selinux == SELINUX_PERMISSIVE):", "             retval += 'selinux --permissive\\n'"]]], "occurrence": 1, "op-name": "replace_Eq_with_IsNot", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "4": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Eq_with_LtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -22,7 +22,7 @@", "             retval += 'selinux --disabled\\n'", "         elif (self.selinux == SELINUX_ENFORCING):", "             retval += 'selinux --enforcing\\n'", "-        elif (self.selinux == SELINUX_PERMISSIVE):", "+        elif (self.selinux <= SELINUX_PERMISSIVE):", "             retval += 'selinux --permissive\\n'", "         return retval", " "]]], "occurrence": 2, "op-name": "replace_Eq_with_LtE", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "24": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Eq_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/selinux.py\", line 10, in runTest\n    self.assert_parse(\"selinux --permissive\", \"selinux --permissive\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'selinux --enforcing\\n' != 'selinux --permissive\\n'\n- selinux --enforcing\n+ selinux --permissive\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -20,7 +20,7 @@", "         retval += '# SELinux configuration\\n'", "         if (self.selinux == SELINUX_DISABLED):", "             retval += 'selinux --disabled\\n'", "-        elif (self.selinux == SELINUX_ENFORCING):", "+        elif (self.selinux >= SELINUX_ENFORCING):", "             retval += 'selinux --enforcing\\n'", "         elif (self.selinux == SELINUX_PERMISSIVE):", "             retval += 'selinux --permissive\\n'"]]], "occurrence": 1, "op-name": "replace_Eq_with_GtE", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "9": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Eq_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/selinux.py\", line 10, in runTest\n    self.assert_parse(\"selinux --permissive\", \"selinux --permissive\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'selinux --disabled\\n' != 'selinux --permissive\\n'\n- selinux --disabled\n+ selinux --permissive\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -18,7 +18,7 @@", "         if ((not retval) and (self.selinux is None)):", "             return ''", "         retval += '# SELinux configuration\\n'", "-        if (self.selinux == SELINUX_DISABLED):", "+        if (self.selinux is not SELINUX_DISABLED):", "             retval += 'selinux --disabled\\n'", "         elif (self.selinux == SELINUX_ENFORCING):", "             retval += 'selinux --enforcing\\n'"]]], "occurrence": 0, "op-name": "replace_Eq_with_IsNot", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "36": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Eq_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/selinux.py\", line 10, in runTest\n    self.assert_parse(\"selinux --permissive\", \"selinux --permissive\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.selinux\", line 45, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -20,7 +20,7 @@", "         retval += '# SELinux configuration\\n'", "         if (self.selinux == SELINUX_DISABLED):", "             retval += 'selinux --disabled\\n'", "-        elif (self.selinux == SELINUX_ENFORCING):", "+        elif (self.selinux in SELINUX_ENFORCING):", "             retval += 'selinux --enforcing\\n'", "         elif (self.selinux == SELINUX_PERMISSIVE):", "             retval += 'selinux --permissive\\n'"]]], "occurrence": 1, "op-name": "replace_Eq_with_In", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "26": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Is_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithGtE", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/selinux.py\", line 10, in runTest\n    self.assert_parse(\"selinux --permissive\", \"selinux --permissive\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.selinux\", line 38, in __str__\nTypeError: unorderable types: int() >= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -15,7 +15,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if ((not retval) and (self.selinux is None)):", "+        if ((not retval) and (self.selinux >= None)):", "             return ''", "         retval += '# SELinux configuration\\n'", "         if (self.selinux == SELINUX_DISABLED):"]]], "occurrence": 0, "op-name": "replace_Is_with_GtE", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "13": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Eq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/selinux.py\", line 10, in runTest\n    self.assert_parse(\"selinux --permissive\", \"selinux --permissive\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'selinux --disabled\\n' != 'selinux --permissive\\n'\n- selinux --disabled\n+ selinux --permissive\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -18,7 +18,7 @@", "         if ((not retval) and (self.selinux is None)):", "             return ''", "         retval += '# SELinux configuration\\n'", "-        if (self.selinux == SELINUX_DISABLED):", "+        if (self.selinux > SELINUX_DISABLED):", "             retval += 'selinux --disabled\\n'", "         elif (self.selinux == SELINUX_ENFORCING):", "             retval += 'selinux --enforcing\\n'"]]], "occurrence": 0, "op-name": "replace_Eq_with_Gt", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "8": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Is_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithLt", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/selinux.py\", line 10, in runTest\n    self.assert_parse(\"selinux --permissive\", \"selinux --permissive\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.selinux\", line 38, in __str__\nTypeError: unorderable types: int() < NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -15,7 +15,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if ((not retval) and (self.selinux is None)):", "+        if ((not retval) and (self.selinux < None)):", "             return ''", "         retval += '# SELinux configuration\\n'", "         if (self.selinux == SELINUX_DISABLED):"]]], "occurrence": 0, "op-name": "replace_Is_with_Lt", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "32": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Eq_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/selinux.py\", line 10, in runTest\n    self.assert_parse(\"selinux --permissive\", \"selinux --permissive\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'selinux --enforcing\\n' != 'selinux --permissive\\n'\n- selinux --enforcing\n+ selinux --permissive\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -20,7 +20,7 @@", "         retval += '# SELinux configuration\\n'", "         if (self.selinux == SELINUX_DISABLED):", "             retval += 'selinux --disabled\\n'", "-        elif (self.selinux == SELINUX_ENFORCING):", "+        elif (self.selinux != SELINUX_ENFORCING):", "             retval += 'selinux --enforcing\\n'", "         elif (self.selinux == SELINUX_PERMISSIVE):", "             retval += 'selinux --permissive\\n'"]]], "occurrence": 1, "op-name": "replace_Eq_with_NotEq", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}, "23": {"command": ["cosmic-ray", "worker", "pykickstart.commands.selinux", "replace_Eq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/selinux.py\", line 10, in runTest\n    self.assert_parse(\"selinux --permissive\", \"selinux --permissive\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'selinux --disabled\\n' != 'selinux --permissive\\n'\n- selinux --disabled\n+ selinux --permissive\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/selinux.py", "@@ -18,7 +18,7 @@", "         if ((not retval) and (self.selinux is None)):", "             return ''", "         retval += '# SELinux configuration\\n'", "-        if (self.selinux == SELINUX_DISABLED):", "+        if (self.selinux >= SELINUX_DISABLED):", "             retval += 'selinux --disabled\\n'", "         elif (self.selinux == SELINUX_ENFORCING):", "             retval += 'selinux --enforcing\\n'"]]], "occurrence": 0, "op-name": "replace_Eq_with_GtE", "result-type": "normal", "module-name": "pykickstart.commands.selinux"}}, "work-parameters": {"1": {"test-runner": "nose", "timeout": 5.06951, "test-args": ["-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/selinux.py"]}}}