{"work-parameters": {"1": {"test-runner": "nose", "timeout": 10.605150000000002, "test-args": ["-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}}, "_default": {}, "work-items": {"24": {"result-type": "normal", "op-name": "replace_Eq_with_IsNot", "module-name": "pykickstart.commands.firstboot", "occurrence": 1, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firstboot.py\", line 29, in runTest\n    self.assert_parse(\"firstboot --enable\", \"firstboot --enable\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'firstboot --enable\\n'\n+ firstboot --enable\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -19,7 +19,7 @@", "             return retval", "         if (self.firstboot == FIRSTBOOT_SKIP):", "             retval += 'firstboot --disable\\n'", "-        elif (self.firstboot == FIRSTBOOT_DEFAULT):", "+        elif (self.firstboot is not FIRSTBOOT_DEFAULT):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --enable\\n'", "         elif (self.firstboot == FIRSTBOOT_RECONFIG):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --reconfig\\n'"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Eq_with_IsNot", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "25": {"result-type": "normal", "op-name": "replace_Eq_with_IsNot", "module-name": "pykickstart.commands.firstboot", "occurrence": 2, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firstboot.py\", line 33, in runTest\n    self.assert_parse(\"firstboot --reconfig\", \"firstboot --reconfig\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'firstboot --reconfig\\n'\n+ firstboot --reconfig\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -21,7 +21,7 @@", "             retval += 'firstboot --disable\\n'", "         elif (self.firstboot == FIRSTBOOT_DEFAULT):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --enable\\n'", "-        elif (self.firstboot == FIRSTBOOT_RECONFIG):", "+        elif (self.firstboot is not FIRSTBOOT_RECONFIG):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --reconfig\\n'", "         return retval", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Eq_with_IsNot", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "27": {"result-type": "normal", "op-name": "replace_Eq_with_NotIn", "module-name": "pykickstart.commands.firstboot", "occurrence": 1, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firstboot.py\", line 29, in runTest\n    self.assert_parse(\"firstboot --enable\", \"firstboot --enable\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firstboot\", line 43, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -19,7 +19,7 @@", "             return retval", "         if (self.firstboot == FIRSTBOOT_SKIP):", "             retval += 'firstboot --disable\\n'", "-        elif (self.firstboot == FIRSTBOOT_DEFAULT):", "+        elif (self.firstboot not in FIRSTBOOT_DEFAULT):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --enable\\n'", "         elif (self.firstboot == FIRSTBOOT_RECONFIG):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --reconfig\\n'"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Eq_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "4": {"result-type": "normal", "op-name": "replace_Is_with_Lt", "module-name": "pykickstart.commands.firstboot", "occurrence": 0, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithLt", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firstboot.py\", line 29, in runTest\n    self.assert_parse(\"firstboot --enable\", \"firstboot --enable\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firstboot\", line 38, in __str__\nTypeError: unorderable types: int() < NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -15,7 +15,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.firstboot is None):", "+        if (self.firstboot < None):", "             return retval", "         if (self.firstboot == FIRSTBOOT_SKIP):", "             retval += 'firstboot --disable\\n'"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Is_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "28": {"result-type": "normal", "op-name": "replace_Eq_with_NotIn", "module-name": "pykickstart.commands.firstboot", "occurrence": 2, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firstboot.py\", line 33, in runTest\n    self.assert_parse(\"firstboot --reconfig\", \"firstboot --reconfig\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firstboot\", line 45, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -21,7 +21,7 @@", "             retval += 'firstboot --disable\\n'", "         elif (self.firstboot == FIRSTBOOT_DEFAULT):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --enable\\n'", "-        elif (self.firstboot == FIRSTBOOT_RECONFIG):", "+        elif (self.firstboot not in FIRSTBOOT_RECONFIG):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --reconfig\\n'", "         return retval", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Eq_with_NotIn", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "10": {"result-type": "normal", "op-name": "replace_Is_with_Gt", "module-name": "pykickstart.commands.firstboot", "occurrence": 0, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithGt", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firstboot.py\", line 29, in runTest\n    self.assert_parse(\"firstboot --enable\", \"firstboot --enable\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firstboot\", line 38, in __str__\nTypeError: unorderable types: int() > NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -15,7 +15,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.firstboot is None):", "+        if (self.firstboot > None):", "             return retval", "         if (self.firstboot == FIRSTBOOT_SKIP):", "             retval += 'firstboot --disable\\n'"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Is_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "11": {"result-type": "normal", "op-name": "replace_Eq_with_In", "module-name": "pykickstart.commands.firstboot", "occurrence": 0, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firstboot.py\", line 29, in runTest\n    self.assert_parse(\"firstboot --enable\", \"firstboot --enable\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firstboot\", line 41, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -17,7 +17,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (self.firstboot is None):", "             return retval", "-        if (self.firstboot == FIRSTBOOT_SKIP):", "+        if (self.firstboot in FIRSTBOOT_SKIP):", "             retval += 'firstboot --disable\\n'", "         elif (self.firstboot == FIRSTBOOT_DEFAULT):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --enable\\n'"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Eq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "37": {"result-type": "normal", "op-name": "replace_Eq_with_LtE", "module-name": "pykickstart.commands.firstboot", "occurrence": 2, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -21,7 +21,7 @@", "             retval += 'firstboot --disable\\n'", "         elif (self.firstboot == FIRSTBOOT_DEFAULT):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --enable\\n'", "-        elif (self.firstboot == FIRSTBOOT_RECONFIG):", "+        elif (self.firstboot <= FIRSTBOOT_RECONFIG):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --reconfig\\n'", "         return retval", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Eq_with_LtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "23": {"result-type": "normal", "op-name": "replace_Eq_with_IsNot", "module-name": "pykickstart.commands.firstboot", "occurrence": 0, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firstboot.py\", line 29, in runTest\n    self.assert_parse(\"firstboot --enable\", \"firstboot --enable\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firstboot --disable\\n' != 'firstboot --enable\\n'\n- firstboot --disable\n?             ^^^\n+ firstboot --enable\n?             ^^\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -17,7 +17,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (self.firstboot is None):", "             return retval", "-        if (self.firstboot == FIRSTBOOT_SKIP):", "+        if (self.firstboot is not FIRSTBOOT_SKIP):", "             retval += 'firstboot --disable\\n'", "         elif (self.firstboot == FIRSTBOOT_DEFAULT):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --enable\\n'"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Eq_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "22": {"result-type": "normal", "op-name": "replace_Eq_with_Is", "module-name": "pykickstart.commands.firstboot", "occurrence": 2, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -21,7 +21,7 @@", "             retval += 'firstboot --disable\\n'", "         elif (self.firstboot == FIRSTBOOT_DEFAULT):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --enable\\n'", "-        elif (self.firstboot == FIRSTBOOT_RECONFIG):", "+        elif (self.firstboot is FIRSTBOOT_RECONFIG):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --reconfig\\n'", "         return retval", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Eq_with_Is", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "8": {"result-type": "normal", "op-name": "replace_Eq_with_NotEq", "module-name": "pykickstart.commands.firstboot", "occurrence": 2, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firstboot.py\", line 33, in runTest\n    self.assert_parse(\"firstboot --reconfig\", \"firstboot --reconfig\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'firstboot --reconfig\\n'\n+ firstboot --reconfig\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -21,7 +21,7 @@", "             retval += 'firstboot --disable\\n'", "         elif (self.firstboot == FIRSTBOOT_DEFAULT):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --enable\\n'", "-        elif (self.firstboot == FIRSTBOOT_RECONFIG):", "+        elif (self.firstboot != FIRSTBOOT_RECONFIG):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --reconfig\\n'", "         return retval", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Eq_with_NotEq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "33": {"result-type": "normal", "op-name": "replace_Eq_with_Gt", "module-name": "pykickstart.commands.firstboot", "occurrence": 1, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firstboot.py\", line 29, in runTest\n    self.assert_parse(\"firstboot --enable\", \"firstboot --enable\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'firstboot --enable\\n'\n+ firstboot --enable\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -19,7 +19,7 @@", "             return retval", "         if (self.firstboot == FIRSTBOOT_SKIP):", "             retval += 'firstboot --disable\\n'", "-        elif (self.firstboot == FIRSTBOOT_DEFAULT):", "+        elif (self.firstboot > FIRSTBOOT_DEFAULT):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --enable\\n'", "         elif (self.firstboot == FIRSTBOOT_RECONFIG):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --reconfig\\n'"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Eq_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "32": {"result-type": "normal", "op-name": "replace_Eq_with_Gt", "module-name": "pykickstart.commands.firstboot", "occurrence": 0, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firstboot.py\", line 31, in runTest\n    self.assert_parse(\"firstboot --disable\", \"firstboot --disable\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'firstboot --disable\\n'\n+ firstboot --disable\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -17,7 +17,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (self.firstboot is None):", "             return retval", "-        if (self.firstboot == FIRSTBOOT_SKIP):", "+        if (self.firstboot > FIRSTBOOT_SKIP):", "             retval += 'firstboot --disable\\n'", "         elif (self.firstboot == FIRSTBOOT_DEFAULT):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --enable\\n'"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Eq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "3": {"result-type": "normal", "op-name": "replace_Eq_with_GtE", "module-name": "pykickstart.commands.firstboot", "occurrence": 2, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firstboot.py\", line 45, in runTest\n    self.assertEqual(cmd.__str__(), \"\")\nAssertionError: '# Run the Setup Agent on first boot\\nfirstboot --reconfig\\n' != ''\n- # Run the Setup Agent on first boot\n- firstboot --reconfig\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -21,7 +21,7 @@", "             retval += 'firstboot --disable\\n'", "         elif (self.firstboot == FIRSTBOOT_DEFAULT):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --enable\\n'", "-        elif (self.firstboot == FIRSTBOOT_RECONFIG):", "+        elif (self.firstboot >= FIRSTBOOT_RECONFIG):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --reconfig\\n'", "         return retval", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Eq_with_GtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "16": {"result-type": "normal", "op-name": "replace_Eq_with_Lt", "module-name": "pykickstart.commands.firstboot", "occurrence": 2, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firstboot.py\", line 33, in runTest\n    self.assert_parse(\"firstboot --reconfig\", \"firstboot --reconfig\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'firstboot --reconfig\\n'\n+ firstboot --reconfig\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -21,7 +21,7 @@", "             retval += 'firstboot --disable\\n'", "         elif (self.firstboot == FIRSTBOOT_DEFAULT):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --enable\\n'", "-        elif (self.firstboot == FIRSTBOOT_RECONFIG):", "+        elif (self.firstboot < FIRSTBOOT_RECONFIG):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --reconfig\\n'", "         return retval", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Eq_with_Lt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "14": {"result-type": "normal", "op-name": "replace_Eq_with_Lt", "module-name": "pykickstart.commands.firstboot", "occurrence": 0, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firstboot.py\", line 29, in runTest\n    self.assert_parse(\"firstboot --enable\", \"firstboot --enable\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firstboot --disable\\n' != 'firstboot --enable\\n'\n- firstboot --disable\n?             ^^^\n+ firstboot --enable\n?             ^^\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -17,7 +17,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (self.firstboot is None):", "             return retval", "-        if (self.firstboot == FIRSTBOOT_SKIP):", "+        if (self.firstboot < FIRSTBOOT_SKIP):", "             retval += 'firstboot --disable\\n'", "         elif (self.firstboot == FIRSTBOOT_DEFAULT):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --enable\\n'"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Eq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "21": {"result-type": "normal", "op-name": "replace_Eq_with_Is", "module-name": "pykickstart.commands.firstboot", "occurrence": 1, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -19,7 +19,7 @@", "             return retval", "         if (self.firstboot == FIRSTBOOT_SKIP):", "             retval += 'firstboot --disable\\n'", "-        elif (self.firstboot == FIRSTBOOT_DEFAULT):", "+        elif (self.firstboot is FIRSTBOOT_DEFAULT):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --enable\\n'", "         elif (self.firstboot == FIRSTBOOT_RECONFIG):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --reconfig\\n'"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Eq_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "36": {"result-type": "normal", "op-name": "replace_Eq_with_LtE", "module-name": "pykickstart.commands.firstboot", "occurrence": 1, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -19,7 +19,7 @@", "             return retval", "         if (self.firstboot == FIRSTBOOT_SKIP):", "             retval += 'firstboot --disable\\n'", "-        elif (self.firstboot == FIRSTBOOT_DEFAULT):", "+        elif (self.firstboot <= FIRSTBOOT_DEFAULT):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --enable\\n'", "         elif (self.firstboot == FIRSTBOOT_RECONFIG):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --reconfig\\n'"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Eq_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "26": {"result-type": "normal", "op-name": "replace_Eq_with_NotIn", "module-name": "pykickstart.commands.firstboot", "occurrence": 0, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firstboot.py\", line 29, in runTest\n    self.assert_parse(\"firstboot --enable\", \"firstboot --enable\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firstboot\", line 41, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -17,7 +17,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (self.firstboot is None):", "             return retval", "-        if (self.firstboot == FIRSTBOOT_SKIP):", "+        if (self.firstboot not in FIRSTBOOT_SKIP):", "             retval += 'firstboot --disable\\n'", "         elif (self.firstboot == FIRSTBOOT_DEFAULT):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --enable\\n'"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Eq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "2": {"result-type": "normal", "op-name": "replace_Eq_with_GtE", "module-name": "pykickstart.commands.firstboot", "occurrence": 1, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firstboot.py\", line 33, in runTest\n    self.assert_parse(\"firstboot --reconfig\", \"firstboot --reconfig\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firstboot --enable\\n' != 'firstboot --reconfig\\n'\n- firstboot --enable\n?               ^^^^\n+ firstboot --reconfig\n?             + ++ ^^^\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -19,7 +19,7 @@", "             return retval", "         if (self.firstboot == FIRSTBOOT_SKIP):", "             retval += 'firstboot --disable\\n'", "-        elif (self.firstboot == FIRSTBOOT_DEFAULT):", "+        elif (self.firstboot >= FIRSTBOOT_DEFAULT):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --enable\\n'", "         elif (self.firstboot == FIRSTBOOT_RECONFIG):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --reconfig\\n'"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Eq_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "12": {"result-type": "normal", "op-name": "replace_Eq_with_In", "module-name": "pykickstart.commands.firstboot", "occurrence": 1, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firstboot.py\", line 29, in runTest\n    self.assert_parse(\"firstboot --enable\", \"firstboot --enable\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firstboot\", line 43, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -19,7 +19,7 @@", "             return retval", "         if (self.firstboot == FIRSTBOOT_SKIP):", "             retval += 'firstboot --disable\\n'", "-        elif (self.firstboot == FIRSTBOOT_DEFAULT):", "+        elif (self.firstboot in FIRSTBOOT_DEFAULT):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --enable\\n'", "         elif (self.firstboot == FIRSTBOOT_RECONFIG):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --reconfig\\n'"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Eq_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "17": {"result-type": "normal", "op-name": "number_replacer", "module-name": "pykickstart.commands.firstboot", "occurrence": 0, "result-data": [{"line_number": 29, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -8,7 +8,7 @@", "     removedKeywords = KickstartCommand.removedKeywords", "     removedAttrs = KickstartCommand.removedAttrs", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         KickstartCommand.__init__(self, writePriority, *args, **kwargs)", "         self.op = self._getParser()", "         self.firstboot = kwargs.get('firstboot', None)"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "number_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "7": {"result-type": "normal", "op-name": "replace_Eq_with_NotEq", "module-name": "pykickstart.commands.firstboot", "occurrence": 1, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firstboot.py\", line 29, in runTest\n    self.assert_parse(\"firstboot --enable\", \"firstboot --enable\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'firstboot --enable\\n'\n+ firstboot --enable\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -19,7 +19,7 @@", "             return retval", "         if (self.firstboot == FIRSTBOOT_SKIP):", "             retval += 'firstboot --disable\\n'", "-        elif (self.firstboot == FIRSTBOOT_DEFAULT):", "+        elif (self.firstboot != FIRSTBOOT_DEFAULT):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --enable\\n'", "         elif (self.firstboot == FIRSTBOOT_RECONFIG):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --reconfig\\n'"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Eq_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "18": {"result-type": "normal", "op-name": "replace_Is_with_In", "module-name": "pykickstart.commands.firstboot", "occurrence": 0, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithIn", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firstboot.py\", line 29, in runTest\n    self.assert_parse(\"firstboot --enable\", \"firstboot --enable\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firstboot\", line 38, in __str__\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -15,7 +15,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.firstboot is None):", "+        if (self.firstboot in None):", "             return retval", "         if (self.firstboot == FIRSTBOOT_SKIP):", "             retval += 'firstboot --disable\\n'"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Is_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "5": {"result-type": "normal", "op-name": "replace_Is_with_NotIn", "module-name": "pykickstart.commands.firstboot", "occurrence": 0, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithNotIn", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firstboot.py\", line 29, in runTest\n    self.assert_parse(\"firstboot --enable\", \"firstboot --enable\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firstboot\", line 38, in __str__\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -15,7 +15,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.firstboot is None):", "+        if (self.firstboot not in None):", "             return retval", "         if (self.firstboot == FIRSTBOOT_SKIP):", "             retval += 'firstboot --disable\\n'"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Is_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "35": {"result-type": "normal", "op-name": "replace_Eq_with_LtE", "module-name": "pykickstart.commands.firstboot", "occurrence": 0, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firstboot.py\", line 29, in runTest\n    self.assert_parse(\"firstboot --enable\", \"firstboot --enable\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firstboot --disable\\n' != 'firstboot --enable\\n'\n- firstboot --disable\n?             ^^^\n+ firstboot --enable\n?             ^^\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -17,7 +17,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (self.firstboot is None):", "             return retval", "-        if (self.firstboot == FIRSTBOOT_SKIP):", "+        if (self.firstboot <= FIRSTBOOT_SKIP):", "             retval += 'firstboot --disable\\n'", "         elif (self.firstboot == FIRSTBOOT_DEFAULT):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --enable\\n'"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Eq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "20": {"result-type": "normal", "op-name": "replace_Eq_with_Is", "module-name": "pykickstart.commands.firstboot", "occurrence": 0, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -17,7 +17,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (self.firstboot is None):", "             return retval", "-        if (self.firstboot == FIRSTBOOT_SKIP):", "+        if (self.firstboot is FIRSTBOOT_SKIP):", "             retval += 'firstboot --disable\\n'", "         elif (self.firstboot == FIRSTBOOT_DEFAULT):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --enable\\n'"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Eq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "1": {"result-type": "normal", "op-name": "replace_Eq_with_GtE", "module-name": "pykickstart.commands.firstboot", "occurrence": 0, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firstboot.py\", line 33, in runTest\n    self.assert_parse(\"firstboot --reconfig\", \"firstboot --reconfig\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firstboot --disable\\n' != 'firstboot --reconfig\\n'\n- firstboot --disable\n+ firstboot --reconfig\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -17,7 +17,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (self.firstboot is None):", "             return retval", "-        if (self.firstboot == FIRSTBOOT_SKIP):", "+        if (self.firstboot >= FIRSTBOOT_SKIP):", "             retval += 'firstboot --disable\\n'", "         elif (self.firstboot == FIRSTBOOT_DEFAULT):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --enable\\n'"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Eq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "34": {"result-type": "normal", "op-name": "replace_Eq_with_Gt", "module-name": "pykickstart.commands.firstboot", "occurrence": 2, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firstboot.py\", line 33, in runTest\n    self.assert_parse(\"firstboot --reconfig\", \"firstboot --reconfig\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'firstboot --reconfig\\n'\n+ firstboot --reconfig\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -21,7 +21,7 @@", "             retval += 'firstboot --disable\\n'", "         elif (self.firstboot == FIRSTBOOT_DEFAULT):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --enable\\n'", "-        elif (self.firstboot == FIRSTBOOT_RECONFIG):", "+        elif (self.firstboot > FIRSTBOOT_RECONFIG):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --reconfig\\n'", "         return retval", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Eq_with_Gt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "6": {"result-type": "normal", "op-name": "replace_Eq_with_NotEq", "module-name": "pykickstart.commands.firstboot", "occurrence": 0, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firstboot.py\", line 29, in runTest\n    self.assert_parse(\"firstboot --enable\", \"firstboot --enable\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'firstboot --disable\\n' != 'firstboot --enable\\n'\n- firstboot --disable\n?             ^^^\n+ firstboot --enable\n?             ^^\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -17,7 +17,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (self.firstboot is None):", "             return retval", "-        if (self.firstboot == FIRSTBOOT_SKIP):", "+        if (self.firstboot != FIRSTBOOT_SKIP):", "             retval += 'firstboot --disable\\n'", "         elif (self.firstboot == FIRSTBOOT_DEFAULT):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --enable\\n'"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Eq_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "19": {"result-type": "normal", "op-name": "replace_Is_with_LtE", "module-name": "pykickstart.commands.firstboot", "occurrence": 0, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithLtE", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firstboot.py\", line 29, in runTest\n    self.assert_parse(\"firstboot --enable\", \"firstboot --enable\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firstboot\", line 38, in __str__\nTypeError: unorderable types: int() <= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -15,7 +15,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.firstboot is None):", "+        if (self.firstboot <= None):", "             return retval", "         if (self.firstboot == FIRSTBOOT_SKIP):", "             retval += 'firstboot --disable\\n'"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Is_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "15": {"result-type": "normal", "op-name": "replace_Eq_with_Lt", "module-name": "pykickstart.commands.firstboot", "occurrence": 1, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firstboot.py\", line 29, in runTest\n    self.assert_parse(\"firstboot --enable\", \"firstboot --enable\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'firstboot --enable\\n'\n+ firstboot --enable\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -19,7 +19,7 @@", "             return retval", "         if (self.firstboot == FIRSTBOOT_SKIP):", "             retval += 'firstboot --disable\\n'", "-        elif (self.firstboot == FIRSTBOOT_DEFAULT):", "+        elif (self.firstboot < FIRSTBOOT_DEFAULT):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --enable\\n'", "         elif (self.firstboot == FIRSTBOOT_RECONFIG):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --reconfig\\n'"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Eq_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "13": {"result-type": "normal", "op-name": "replace_Eq_with_In", "module-name": "pykickstart.commands.firstboot", "occurrence": 2, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firstboot.py\", line 33, in runTest\n    self.assert_parse(\"firstboot --reconfig\", \"firstboot --reconfig\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firstboot\", line 45, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -21,7 +21,7 @@", "             retval += 'firstboot --disable\\n'", "         elif (self.firstboot == FIRSTBOOT_DEFAULT):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --enable\\n'", "-        elif (self.firstboot == FIRSTBOOT_RECONFIG):", "+        elif (self.firstboot in FIRSTBOOT_RECONFIG):", "             retval += '# Run the Setup Agent on first boot\\nfirstboot --reconfig\\n'", "         return retval", " "]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Eq_with_In", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "29": {"result-type": "normal", "op-name": "replace_Is_with_NotEq", "module-name": "pykickstart.commands.firstboot", "occurrence": 0, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithNotEq", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firstboot.py\", line 29, in runTest\n    self.assert_parse(\"firstboot --enable\", \"firstboot --enable\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'firstboot --enable\\n'\n+ firstboot --enable\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -15,7 +15,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.firstboot is None):", "+        if (self.firstboot != None):", "             return retval", "         if (self.firstboot == FIRSTBOOT_SKIP):", "             retval += 'firstboot --disable\\n'"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Is_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "9": {"result-type": "normal", "op-name": "replace_Is_with_GtE", "module-name": "pykickstart.commands.firstboot", "occurrence": 0, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithGtE", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firstboot.py\", line 29, in runTest\n    self.assert_parse(\"firstboot --enable\", \"firstboot --enable\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.firstboot\", line 38, in __str__\nTypeError: unorderable types: int() >= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -15,7 +15,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.firstboot is None):", "+        if (self.firstboot >= None):", "             return retval", "         if (self.firstboot == FIRSTBOOT_SKIP):", "             retval += 'firstboot --disable\\n'"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Is_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "30": {"result-type": "normal", "op-name": "replace_Is_with_IsNot", "module-name": "pykickstart.commands.firstboot", "occurrence": 0, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithIsNot", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/firstboot.py\", line 29, in runTest\n    self.assert_parse(\"firstboot --enable\", \"firstboot --enable\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'firstboot --enable\\n'\n+ firstboot --enable\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -15,7 +15,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.firstboot is None):", "+        if (self.firstboot is not None):", "             return retval", "         if (self.firstboot == FIRSTBOOT_SKIP):", "             retval += 'firstboot --disable\\n'"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Is_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}, "31": {"result-type": "normal", "op-name": "replace_Is_with_Eq", "module-name": "pykickstart.commands.firstboot", "occurrence": 0, "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithEq", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/firstboot.py", "@@ -15,7 +15,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.firstboot is None):", "+        if (self.firstboot == None):", "             return retval", "         if (self.firstboot == FIRSTBOOT_SKIP):", "             retval += 'firstboot --disable\\n'"]]], "command": ["cosmic-ray", "worker", "pykickstart.commands.firstboot", "replace_Is_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/firstboot.py"]}}}