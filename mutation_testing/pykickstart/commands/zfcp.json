{"_default": {}, "work-items": {"6": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_NotIn", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -32,7 +32,7 @@", "             retval += (' --devnum=%s' % self.devnum)", "         if (self.wwpn != ''):", "             retval += (' --wwpn=%s' % self.wwpn)", "-        if (self.fcplun != ''):", "+        if (self.fcplun not in ''):", "             retval += (' --fcplun=%s' % self.fcplun)", "         if (hasattr(self, 'scsiid') and (self.scsiid != '')):", "             retval += (' --scsiid=%s' % self.scsiid)"]]], "result-type": "normal", "op-name": "replace_NotEq_with_NotIn", "module-name": "pykickstart.commands.zfcp", "occurrence": 2}, "105": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_Is", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 30, in runTest\n    \"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4\\n' != 'zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\\n'\n- zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4\n+ zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\n?                                               ++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -36,7 +36,7 @@", "             retval += (' --fcplun=%s' % self.fcplun)", "         if (hasattr(self, 'scsiid') and (self.scsiid != '')):", "             retval += (' --scsiid=%s' % self.scsiid)", "-        if (hasattr(self, 'scsilun') and (self.scsilun != '')):", "+        if (hasattr(self, 'scsilun') and (self.scsilun is '')):", "             retval += (' --scsilun=%s' % self.scsilun)", "         return (retval + '\\n')", " "]]], "result-type": "normal", "op-name": "replace_NotEq_with_Is", "module-name": "pykickstart.commands.zfcp", "occurrence": 4}, "97": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_IsNot", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "occurrence": 6}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 75, in runTest\n    zfcp --devnum=1 --wwpn=2 --fcplun=3\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -51,7 +51,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", "+        return ((self.devnum is not y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", " ", " class F14_ZFCPData(F12_ZFCPData):", "     pass"]]], "result-type": "normal", "op-name": "replace_Eq_with_IsNot", "module-name": "pykickstart.commands.zfcp", "occurrence": 6}, "42": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_LtE", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "occurrence": 4}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun <= y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_LtE", "module-name": "pykickstart.commands.zfcp", "occurrence": 4}, "60": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_Gt", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt", "occurrence": 4}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -36,7 +36,7 @@", "             retval += (' --fcplun=%s' % self.fcplun)", "         if (hasattr(self, 'scsiid') and (self.scsiid != '')):", "             retval += (' --scsiid=%s' % self.scsiid)", "-        if (hasattr(self, 'scsilun') and (self.scsilun != '')):", "+        if (hasattr(self, 'scsilun') and (self.scsilun > '')):", "             retval += (' --scsilun=%s' % self.scsilun)", "         return (retval + '\\n')", " "]]], "result-type": "normal", "op-name": "replace_NotEq_with_Gt", "module-name": "pykickstart.commands.zfcp", "occurrence": 4}, "40": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_LtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun <= y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_LtE", "module-name": "pykickstart.commands.zfcp", "occurrence": 2}, "76": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_GtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "occurrence": 3}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid >= y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_GtE", "module-name": "pykickstart.commands.zfcp", "occurrence": 3}, "3": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_In_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithGt", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nTypeError: unorderable types: F12_ZFCPData() > list()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 71, in runTest\n    zfcp --devnum=10 --wwpn=20 --fcplun=30\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \nzfcp --devnum=1 --wwpn=2 --fcplun=3\nzfcp --devnum=10 --wwpn=20 --fcplun=30: unorderable types: F12_ZFCPData() > list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -85,7 +85,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, zd)", "         zd.lineno = self.lineno", "-        if (zd in self.dataList()):", "+        if (zd > self.dataList()):", "             warnings.warn(_('A zfcp with this information has already been defined.'))", "         return zd", " "]]], "result-type": "normal", "op-name": "replace_In_with_Gt", "module-name": "pykickstart.commands.zfcp", "occurrence": 0}, "84": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_Gt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 38, in runTest\n    self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun > y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_Gt", "module-name": "pykickstart.commands.zfcp", "occurrence": 2}, "71": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_In_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithIs", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 75, in runTest\n    zfcp --devnum=1 --wwpn=2 --fcplun=3\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -85,7 +85,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, zd)", "         zd.lineno = self.lineno", "-        if (zd in self.dataList()):", "+        if (zd is self.dataList()):", "             warnings.warn(_('A zfcp with this information has already been defined.'))", "         return zd", " "]]], "result-type": "normal", "op-name": "replace_In_with_Is", "module-name": "pykickstart.commands.zfcp", "occurrence": 0}, "36": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_Is", "7", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "occurrence": 7}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -51,7 +51,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", "+        return ((self.devnum == y.devnum) and (self.wwpn is y.wwpn) and (self.fcplun == y.fcplun))", " ", " class F14_ZFCPData(F12_ZFCPData):", "     pass"]]], "result-type": "normal", "op-name": "replace_Eq_with_Is", "module-name": "pykickstart.commands.zfcp", "occurrence": 7}, "136": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_LtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 50, in runTest\n    \"zfcp --devnum=1 --wwpn=2 --fcplun=3\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'zfcp --devnum=1 --wwpn=2\\n' != 'zfcp --devnum=1 --wwpn=2 --fcplun=3\\n'\n- zfcp --devnum=1 --wwpn=2\n+ zfcp --devnum=1 --wwpn=2 --fcplun=3\n?                         +++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -32,7 +32,7 @@", "             retval += (' --devnum=%s' % self.devnum)", "         if (self.wwpn != ''):", "             retval += (' --wwpn=%s' % self.wwpn)", "-        if (self.fcplun != ''):", "+        if (self.fcplun <= ''):", "             retval += (' --fcplun=%s' % self.fcplun)", "         if (hasattr(self, 'scsiid') and (self.scsiid != '')):", "             retval += (' --scsiid=%s' % self.scsiid)"]]], "result-type": "normal", "op-name": "replace_NotEq_with_LtE", "module-name": "pykickstart.commands.zfcp", "occurrence": 2}, "32": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_Is", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "occurrence": 3}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid is y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_Is", "module-name": "pykickstart.commands.zfcp", "occurrence": 3}, "59": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_Gt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt", "occurrence": 3}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -34,7 +34,7 @@", "             retval += (' --wwpn=%s' % self.wwpn)", "         if (self.fcplun != ''):", "             retval += (' --fcplun=%s' % self.fcplun)", "-        if (hasattr(self, 'scsiid') and (self.scsiid != '')):", "+        if (hasattr(self, 'scsiid') and (self.scsiid > '')):", "             retval += (' --scsiid=%s' % self.scsiid)", "         if (hasattr(self, 'scsilun') and (self.scsilun != '')):", "             retval += (' --scsilun=%s' % self.scsilun)"]]], "result-type": "normal", "op-name": "replace_NotEq_with_Gt", "module-name": "pykickstart.commands.zfcp", "occurrence": 3}, "11": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 50, in runTest\n    \"zfcp --devnum=1 --wwpn=2 --fcplun=3\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'zfcp --wwpn=2 --fcplun=3\\n' != 'zfcp --devnum=1 --wwpn=2 --fcplun=3\\n'\n- zfcp --wwpn=2 --fcplun=3\n+ zfcp --devnum=1 --wwpn=2 --fcplun=3\n?     +++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -28,7 +28,7 @@", "     def __str__(self):", "         retval = BaseData.__str__(self)", "         retval += 'zfcp'", "-        if (self.devnum != ''):", "+        if (self.devnum < ''):", "             retval += (' --devnum=%s' % self.devnum)", "         if (self.wwpn != ''):", "             retval += (' --wwpn=%s' % self.wwpn)"]]], "result-type": "normal", "op-name": "replace_NotEq_with_Lt", "module-name": "pykickstart.commands.zfcp", "occurrence": 0}, "19": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "boolean_replacer", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": 105, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "occurrence": 3}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -74,7 +74,7 @@", "     def _getParser(self):", "         op = KSOptionParser(prog='zfcp', description='', version=FC3)", "         op.add_argument('--devnum', required=True, version=FC3, help='')", "-        op.add_argument('--fcplun', required=True, version=FC3, help='')", "+        op.add_argument('--fcplun', required=False, version=FC3, help='')", "         op.add_argument('--scsiid', required=True, version=FC3, help='')", "         op.add_argument('--scsilun', required=True, version=FC3, help='')", "         op.add_argument('--wwpn', required=True, version=FC3, help='')"]]], "result-type": "normal", "op-name": "boolean_replacer", "module-name": "pykickstart.commands.zfcp", "occurrence": 3}, "131": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_GtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE", "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -32,7 +32,7 @@", "             retval += (' --devnum=%s' % self.devnum)", "         if (self.wwpn != ''):", "             retval += (' --wwpn=%s' % self.wwpn)", "-        if (self.fcplun != ''):", "+        if (self.fcplun >= ''):", "             retval += (' --fcplun=%s' % self.fcplun)", "         if (hasattr(self, 'scsiid') and (self.scsiid != '')):", "             retval += (' --scsiid=%s' % self.scsiid)"]]], "result-type": "normal", "op-name": "replace_NotEq_with_GtE", "module-name": "pykickstart.commands.zfcp", "occurrence": 2}, "111": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum in y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_In", "module-name": "pykickstart.commands.zfcp", "occurrence": 0}, "87": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_Gt", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "occurrence": 5}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 58, in runTest\n    self.assertNotEqual(self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3\"), None)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 864, in assertNotEqual\n    if not first != second:\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\nTypeError: unorderable types: F12_ZFCPData() > NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -23,7 +23,7 @@", "         return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self > y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "result-type": "normal", "op-name": "replace_Eq_with_Gt", "module-name": "pykickstart.commands.zfcp", "occurrence": 5}, "34": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_Is", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "occurrence": 5}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -23,7 +23,7 @@", "         return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self is y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "result-type": "normal", "op-name": "replace_Eq_with_Is", "module-name": "pykickstart.commands.zfcp", "occurrence": 5}, "94": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_IsNot", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 38, in runTest\n    self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid is not y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_IsNot", "module-name": "pykickstart.commands.zfcp", "occurrence": 3}, "18": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "boolean_replacer", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": 104, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -73,7 +73,7 @@", " ", "     def _getParser(self):", "         op = KSOptionParser(prog='zfcp', description='', version=FC3)", "-        op.add_argument('--devnum', required=True, version=FC3, help='')", "+        op.add_argument('--devnum', required=False, version=FC3, help='')", "         op.add_argument('--fcplun', required=True, version=FC3, help='')", "         op.add_argument('--scsiid', required=True, version=FC3, help='')", "         op.add_argument('--scsilun', required=True, version=FC3, help='')"]]], "result-type": "normal", "op-name": "boolean_replacer", "module-name": "pykickstart.commands.zfcp", "occurrence": 2}, "31": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_Is", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun is y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_Is", "module-name": "pykickstart.commands.zfcp", "occurrence": 2}, "130": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -30,7 +30,7 @@", "         retval += 'zfcp'", "         if (self.devnum != ''):", "             retval += (' --devnum=%s' % self.devnum)", "-        if (self.wwpn != ''):", "+        if (self.wwpn >= ''):", "             retval += (' --wwpn=%s' % self.wwpn)", "         if (self.fcplun != ''):", "             retval += (' --fcplun=%s' % self.fcplun)"]]], "result-type": "normal", "op-name": "replace_NotEq_with_GtE", "module-name": "pykickstart.commands.zfcp", "occurrence": 1}, "48": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 38, in runTest\n    self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn < y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_Lt", "module-name": "pykickstart.commands.zfcp", "occurrence": 1}, "4": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -28,7 +28,7 @@", "     def __str__(self):", "         retval = BaseData.__str__(self)", "         retval += 'zfcp'", "-        if (self.devnum != ''):", "+        if (self.devnum not in ''):", "             retval += (' --devnum=%s' % self.devnum)", "         if (self.wwpn != ''):", "             retval += (' --wwpn=%s' % self.wwpn)"]]], "result-type": "normal", "op-name": "replace_NotEq_with_NotIn", "module-name": "pykickstart.commands.zfcp", "occurrence": 0}, "112": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn in y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_In", "module-name": "pykickstart.commands.zfcp", "occurrence": 1}, "7": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_NotIn", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "occurrence": 3}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -34,7 +34,7 @@", "             retval += (' --wwpn=%s' % self.wwpn)", "         if (self.fcplun != ''):", "             retval += (' --fcplun=%s' % self.fcplun)", "-        if (hasattr(self, 'scsiid') and (self.scsiid != '')):", "+        if (hasattr(self, 'scsiid') and (self.scsiid not in '')):", "             retval += (' --scsiid=%s' % self.scsiid)", "         if (hasattr(self, 'scsilun') and (self.scsilun != '')):", "             retval += (' --scsilun=%s' % self.scsilun)"]]], "result-type": "normal", "op-name": "replace_NotEq_with_NotIn", "module-name": "pykickstart.commands.zfcp", "occurrence": 3}, "98": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_IsNot", "7", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "occurrence": 7}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 75, in runTest\n    zfcp --devnum=1 --wwpn=2 --fcplun=3\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -51,7 +51,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", "+        return ((self.devnum == y.devnum) and (self.wwpn is not y.wwpn) and (self.fcplun == y.fcplun))", " ", " class F14_ZFCPData(F12_ZFCPData):", "     pass"]]], "result-type": "normal", "op-name": "replace_Eq_with_IsNot", "module-name": "pykickstart.commands.zfcp", "occurrence": 7}, "45": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_LtE", "7", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "occurrence": 7}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 60, in runTest\n    self.assertNotEqual(self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3\"), self.assert_parse(\"zfcp --devnum=1 --wwpn=20 --fcplun=3\"))\nAssertionError: <pykickstart.commands.zfcp.F12_ZFCPData object at 0x7ff4f995a198> == <pykickstart.commands.zfcp.F12_ZFCPData object at 0x7ff4f995a080>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -51,7 +51,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", "+        return ((self.devnum == y.devnum) and (self.wwpn <= y.wwpn) and (self.fcplun == y.fcplun))", " ", " class F14_ZFCPData(F12_ZFCPData):", "     pass"]]], "result-type": "normal", "op-name": "replace_Eq_with_LtE", "module-name": "pykickstart.commands.zfcp", "occurrence": 7}, "133": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_GtE", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE", "occurrence": 4}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -36,7 +36,7 @@", "             retval += (' --fcplun=%s' % self.fcplun)", "         if (hasattr(self, 'scsiid') and (self.scsiid != '')):", "             retval += (' --scsiid=%s' % self.scsiid)", "-        if (hasattr(self, 'scsilun') and (self.scsilun != '')):", "+        if (hasattr(self, 'scsilun') and (self.scsilun >= '')):", "             retval += (' --scsilun=%s' % self.scsilun)", "         return (retval + '\\n')", " "]]], "result-type": "normal", "op-name": "replace_NotEq_with_GtE", "module-name": "pykickstart.commands.zfcp", "occurrence": 4}, "117": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_In", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "occurrence": 6}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 59, in runTest\n    self.assertNotEqual(self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3\"), self.assert_parse(\"zfcp --devnum=10 --wwpn=2 --fcplun=3\"))\nAssertionError: <pykickstart.commands.zfcp.F12_ZFCPData object at 0x7f15271fb128> == <pykickstart.commands.zfcp.F12_ZFCPData object at 0x7f152725ec88>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -51,7 +51,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", "+        return ((self.devnum in y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", " ", " class F14_ZFCPData(F12_ZFCPData):", "     pass"]]], "result-type": "normal", "op-name": "replace_Eq_with_In", "module-name": "pykickstart.commands.zfcp", "occurrence": 6}, "28": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_In_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithLtE", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nTypeError: unorderable types: F12_ZFCPData() <= list()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 71, in runTest\n    zfcp --devnum=10 --wwpn=20 --fcplun=30\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \nzfcp --devnum=1 --wwpn=2 --fcplun=3\nzfcp --devnum=10 --wwpn=20 --fcplun=30: unorderable types: F12_ZFCPData() <= list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -85,7 +85,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, zd)", "         zd.lineno = self.lineno", "-        if (zd in self.dataList()):", "+        if (zd <= self.dataList()):", "             warnings.warn(_('A zfcp with this information has already been defined.'))", "         return zd", " "]]], "result-type": "normal", "op-name": "replace_In_with_LtE", "module-name": "pykickstart.commands.zfcp", "occurrence": 0}, "88": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_Gt", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "occurrence": 6}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 75, in runTest\n    zfcp --devnum=1 --wwpn=2 --fcplun=3\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -51,7 +51,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", "+        return ((self.devnum > y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", " ", " class F14_ZFCPData(F12_ZFCPData):", "     pass"]]], "result-type": "normal", "op-name": "replace_Eq_with_Gt", "module-name": "pykickstart.commands.zfcp", "occurrence": 6}, "68": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_NotEq", "7", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "occurrence": 7}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 75, in runTest\n    zfcp --devnum=1 --wwpn=2 --fcplun=3\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -51,7 +51,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", "+        return ((self.devnum == y.devnum) and (self.wwpn != y.wwpn) and (self.fcplun == y.fcplun))", " ", " class F14_ZFCPData(F12_ZFCPData):", "     pass"]]], "result-type": "normal", "op-name": "replace_Eq_with_NotEq", "module-name": "pykickstart.commands.zfcp", "occurrence": 7}, "102": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 50, in runTest\n    \"zfcp --devnum=1 --wwpn=2 --fcplun=3\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'zfcp --devnum=1 --fcplun=3\\n' != 'zfcp --devnum=1 --wwpn=2 --fcplun=3\\n'\n- zfcp --devnum=1 --fcplun=3\n+ zfcp --devnum=1 --wwpn=2 --fcplun=3\n?                +++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -30,7 +30,7 @@", "         retval += 'zfcp'", "         if (self.devnum != ''):", "             retval += (' --devnum=%s' % self.devnum)", "-        if (self.wwpn != ''):", "+        if (self.wwpn is ''):", "             retval += (' --wwpn=%s' % self.wwpn)", "         if (self.fcplun != ''):", "             retval += (' --fcplun=%s' % self.fcplun)"]]], "result-type": "normal", "op-name": "replace_NotEq_with_Is", "module-name": "pykickstart.commands.zfcp", "occurrence": 1}, "58": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_Gt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt", "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -32,7 +32,7 @@", "             retval += (' --devnum=%s' % self.devnum)", "         if (self.wwpn != ''):", "             retval += (' --wwpn=%s' % self.wwpn)", "-        if (self.fcplun != ''):", "+        if (self.fcplun > ''):", "             retval += (' --fcplun=%s' % self.fcplun)", "         if (hasattr(self, 'scsiid') and (self.scsiid != '')):", "             retval += (' --scsiid=%s' % self.scsiid)"]]], "result-type": "normal", "op-name": "replace_NotEq_with_Gt", "module-name": "pykickstart.commands.zfcp", "occurrence": 2}, "91": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 38, in runTest\n    self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum is not y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_IsNot", "module-name": "pykickstart.commands.zfcp", "occurrence": 0}, "16": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "boolean_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": 41, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -19,7 +19,7 @@", " ", "     def __eq__(self, y):", "         if (not y):", "-            return False", "+            return True", "         return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):"]]], "result-type": "normal", "op-name": "boolean_replacer", "module-name": "pykickstart.commands.zfcp", "occurrence": 0}, "14": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_Lt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 30, in runTest\n    \"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsilun=5\\n' != 'zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\\n'\n- zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsilun=5\n+ zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\n?                                    +++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -34,7 +34,7 @@", "             retval += (' --wwpn=%s' % self.wwpn)", "         if (self.fcplun != ''):", "             retval += (' --fcplun=%s' % self.fcplun)", "-        if (hasattr(self, 'scsiid') and (self.scsiid != '')):", "+        if (hasattr(self, 'scsiid') and (self.scsiid < '')):", "             retval += (' --scsiid=%s' % self.scsiid)", "         if (hasattr(self, 'scsilun') and (self.scsilun != '')):", "             retval += (' --scsilun=%s' % self.scsilun)"]]], "result-type": "normal", "op-name": "replace_NotEq_with_Lt", "module-name": "pykickstart.commands.zfcp", "occurrence": 3}, "73": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum >= y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_GtE", "module-name": "pykickstart.commands.zfcp", "occurrence": 0}, "54": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_Lt", "7", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "occurrence": 7}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 75, in runTest\n    zfcp --devnum=1 --wwpn=2 --fcplun=3\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -51,7 +51,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", "+        return ((self.devnum == y.devnum) and (self.wwpn < y.wwpn) and (self.fcplun == y.fcplun))", " ", " class F14_ZFCPData(F12_ZFCPData):", "     pass"]]], "result-type": "normal", "op-name": "replace_Eq_with_Lt", "module-name": "pykickstart.commands.zfcp", "occurrence": 7}, "30": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn is y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_Is", "module-name": "pykickstart.commands.zfcp", "occurrence": 1}, "103": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_Is", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 50, in runTest\n    \"zfcp --devnum=1 --wwpn=2 --fcplun=3\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'zfcp --devnum=1 --wwpn=2\\n' != 'zfcp --devnum=1 --wwpn=2 --fcplun=3\\n'\n- zfcp --devnum=1 --wwpn=2\n+ zfcp --devnum=1 --wwpn=2 --fcplun=3\n?                         +++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -32,7 +32,7 @@", "             retval += (' --devnum=%s' % self.devnum)", "         if (self.wwpn != ''):", "             retval += (' --wwpn=%s' % self.wwpn)", "-        if (self.fcplun != ''):", "+        if (self.fcplun is ''):", "             retval += (' --fcplun=%s' % self.fcplun)", "         if (hasattr(self, 'scsiid') and (self.scsiid != '')):", "             retval += (' --scsiid=%s' % self.scsiid)"]]], "result-type": "normal", "op-name": "replace_NotEq_with_Is", "module-name": "pykickstart.commands.zfcp", "occurrence": 2}, "121": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 38, in runTest\n    self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn not in y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_NotIn", "module-name": "pykickstart.commands.zfcp", "occurrence": 1}, "137": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_LtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 30, in runTest\n    \"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsilun=5\\n' != 'zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\\n'\n- zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsilun=5\n+ zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\n?                                    +++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -34,7 +34,7 @@", "             retval += (' --wwpn=%s' % self.wwpn)", "         if (self.fcplun != ''):", "             retval += (' --fcplun=%s' % self.fcplun)", "-        if (hasattr(self, 'scsiid') and (self.scsiid != '')):", "+        if (hasattr(self, 'scsiid') and (self.scsiid <= '')):", "             retval += (' --scsiid=%s' % self.scsiid)", "         if (hasattr(self, 'scsilun') and (self.scsilun != '')):", "             retval += (' --scsilun=%s' % self.scsilun)"]]], "result-type": "normal", "op-name": "replace_NotEq_with_LtE", "module-name": "pykickstart.commands.zfcp", "occurrence": 3}, "86": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_Gt", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 38, in runTest\n    self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun > y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_Gt", "module-name": "pykickstart.commands.zfcp", "occurrence": 4}, "13": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_Lt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 50, in runTest\n    \"zfcp --devnum=1 --wwpn=2 --fcplun=3\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'zfcp --devnum=1 --wwpn=2\\n' != 'zfcp --devnum=1 --wwpn=2 --fcplun=3\\n'\n- zfcp --devnum=1 --wwpn=2\n+ zfcp --devnum=1 --wwpn=2 --fcplun=3\n?                         +++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -32,7 +32,7 @@", "             retval += (' --devnum=%s' % self.devnum)", "         if (self.wwpn != ''):", "             retval += (' --wwpn=%s' % self.wwpn)", "-        if (self.fcplun != ''):", "+        if (self.fcplun < ''):", "             retval += (' --fcplun=%s' % self.fcplun)", "         if (hasattr(self, 'scsiid') and (self.scsiid != '')):", "             retval += (' --scsiid=%s' % self.scsiid)"]]], "result-type": "normal", "op-name": "replace_NotEq_with_Lt", "module-name": "pykickstart.commands.zfcp", "occurrence": 2}, "8": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_NotIn", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "occurrence": 4}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -36,7 +36,7 @@", "             retval += (' --fcplun=%s' % self.fcplun)", "         if (hasattr(self, 'scsiid') and (self.scsiid != '')):", "             retval += (' --scsiid=%s' % self.scsiid)", "-        if (hasattr(self, 'scsilun') and (self.scsilun != '')):", "+        if (hasattr(self, 'scsilun') and (self.scsilun not in '')):", "             retval += (' --scsilun=%s' % self.scsilun)", "         return (retval + '\\n')", " "]]], "result-type": "normal", "op-name": "replace_NotEq_with_NotIn", "module-name": "pykickstart.commands.zfcp", "occurrence": 4}, "63": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_NotEq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 38, in runTest\n    self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun != y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_NotEq", "module-name": "pykickstart.commands.zfcp", "occurrence": 2}, "120": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 38, in runTest\n    self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum not in y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_NotIn", "module-name": "pykickstart.commands.zfcp", "occurrence": 0}, "56": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -28,7 +28,7 @@", "     def __str__(self):", "         retval = BaseData.__str__(self)", "         retval += 'zfcp'", "-        if (self.devnum != ''):", "+        if (self.devnum > ''):", "             retval += (' --devnum=%s' % self.devnum)", "         if (self.wwpn != ''):", "             retval += (' --wwpn=%s' % self.wwpn)"]]], "result-type": "normal", "op-name": "replace_NotEq_with_Gt", "module-name": "pykickstart.commands.zfcp", "occurrence": 0}, "12": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 50, in runTest\n    \"zfcp --devnum=1 --wwpn=2 --fcplun=3\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'zfcp --devnum=1 --fcplun=3\\n' != 'zfcp --devnum=1 --wwpn=2 --fcplun=3\\n'\n- zfcp --devnum=1 --fcplun=3\n+ zfcp --devnum=1 --wwpn=2 --fcplun=3\n?                +++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -30,7 +30,7 @@", "         retval += 'zfcp'", "         if (self.devnum != ''):", "             retval += (' --devnum=%s' % self.devnum)", "-        if (self.wwpn != ''):", "+        if (self.wwpn < ''):", "             retval += (' --wwpn=%s' % self.wwpn)", "         if (self.fcplun != ''):", "             retval += (' --fcplun=%s' % self.fcplun)"]]], "result-type": "normal", "op-name": "replace_NotEq_with_Lt", "module-name": "pykickstart.commands.zfcp", "occurrence": 1}, "64": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_NotEq", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 38, in runTest\n    self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid != y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_NotEq", "module-name": "pykickstart.commands.zfcp", "occurrence": 3}, "93": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_IsNot", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 38, in runTest\n    self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun is not y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_IsNot", "module-name": "pykickstart.commands.zfcp", "occurrence": 2}, "20": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "boolean_replacer", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": 106, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 42, in runTest\n    self.assert_parse_error(\"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsilun=4\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -75,7 +75,7 @@", "         op = KSOptionParser(prog='zfcp', description='', version=FC3)", "         op.add_argument('--devnum', required=True, version=FC3, help='')", "         op.add_argument('--fcplun', required=True, version=FC3, help='')", "-        op.add_argument('--scsiid', required=True, version=FC3, help='')", "+        op.add_argument('--scsiid', required=False, version=FC3, help='')", "         op.add_argument('--scsilun', required=True, version=FC3, help='')", "         op.add_argument('--wwpn', required=True, version=FC3, help='')", "         return op"]]], "result-type": "normal", "op-name": "boolean_replacer", "module-name": "pykickstart.commands.zfcp", "occurrence": 4}, "62": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 38, in runTest\n    self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn != y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_NotEq", "module-name": "pykickstart.commands.zfcp", "occurrence": 1}, "79": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_GtE", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "occurrence": 6}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -51,7 +51,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", "+        return ((self.devnum >= y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", " ", " class F14_ZFCPData(F12_ZFCPData):", "     pass"]]], "result-type": "normal", "op-name": "replace_Eq_with_GtE", "module-name": "pykickstart.commands.zfcp", "occurrence": 6}, "24": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_Eq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 50, in runTest\n    \"zfcp --devnum=1 --wwpn=2 --fcplun=3\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'zfcp --devnum=1 --fcplun=3\\n' != 'zfcp --devnum=1 --wwpn=2 --fcplun=3\\n'\n- zfcp --devnum=1 --fcplun=3\n+ zfcp --devnum=1 --wwpn=2 --fcplun=3\n?                +++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -30,7 +30,7 @@", "         retval += 'zfcp'", "         if (self.devnum != ''):", "             retval += (' --devnum=%s' % self.devnum)", "-        if (self.wwpn != ''):", "+        if (self.wwpn == ''):", "             retval += (' --wwpn=%s' % self.wwpn)", "         if (self.fcplun != ''):", "             retval += (' --fcplun=%s' % self.fcplun)"]]], "result-type": "normal", "op-name": "replace_NotEq_with_Eq", "module-name": "pykickstart.commands.zfcp", "occurrence": 1}, "44": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_LtE", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "occurrence": 6}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 59, in runTest\n    self.assertNotEqual(self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3\"), self.assert_parse(\"zfcp --devnum=10 --wwpn=2 --fcplun=3\"))\nAssertionError: <pykickstart.commands.zfcp.F12_ZFCPData object at 0x7f960b45f358> == <pykickstart.commands.zfcp.F12_ZFCPData object at 0x7f960b43c320>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -51,7 +51,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", "+        return ((self.devnum <= y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", " ", " class F14_ZFCPData(F12_ZFCPData):", "     pass"]]], "result-type": "normal", "op-name": "replace_Eq_with_LtE", "module-name": "pykickstart.commands.zfcp", "occurrence": 6}, "85": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_Gt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 38, in runTest\n    self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid > y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_Gt", "module-name": "pykickstart.commands.zfcp", "occurrence": 3}, "47": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 38, in runTest\n    self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum < y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_Lt", "module-name": "pykickstart.commands.zfcp", "occurrence": 0}, "22": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "boolean_replacer", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": 108, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "occurrence": 6}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -77,7 +77,7 @@", "         op.add_argument('--fcplun', required=True, version=FC3, help='')", "         op.add_argument('--scsiid', required=True, version=FC3, help='')", "         op.add_argument('--scsilun', required=True, version=FC3, help='')", "-        op.add_argument('--wwpn', required=True, version=FC3, help='')", "+        op.add_argument('--wwpn', required=False, version=FC3, help='')", "         return op", " ", "     def parse(self, args):"]]], "result-type": "normal", "op-name": "boolean_replacer", "module-name": "pykickstart.commands.zfcp", "occurrence": 6}, "118": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_In", "7", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "occurrence": 7}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 60, in runTest\n    self.assertNotEqual(self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3\"), self.assert_parse(\"zfcp --devnum=1 --wwpn=20 --fcplun=3\"))\nAssertionError: <pykickstart.commands.zfcp.F12_ZFCPData object at 0x7f116cfc5400> == <pykickstart.commands.zfcp.F12_ZFCPData object at 0x7f116cfc5ba8>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -51,7 +51,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", "+        return ((self.devnum == y.devnum) and (self.wwpn in y.wwpn) and (self.fcplun == y.fcplun))", " ", " class F14_ZFCPData(F12_ZFCPData):", "     pass"]]], "result-type": "normal", "op-name": "replace_Eq_with_In", "module-name": "pykickstart.commands.zfcp", "occurrence": 7}, "2": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_In_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithNotIn", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nUserWarning: A zfcp with this information has already been defined.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 71, in runTest\n    zfcp --devnum=10 --wwpn=20 --fcplun=30\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \nzfcp --devnum=1 --wwpn=2 --fcplun=3\nzfcp --devnum=10 --wwpn=20 --fcplun=30: A zfcp with this information has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -85,7 +85,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, zd)", "         zd.lineno = self.lineno", "-        if (zd in self.dataList()):", "+        if (zd not in self.dataList()):", "             warnings.warn(_('A zfcp with this information has already been defined.'))", "         return zd", " "]]], "result-type": "normal", "op-name": "replace_In_with_NotIn", "module-name": "pykickstart.commands.zfcp", "occurrence": 0}, "119": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_In", "8", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "occurrence": 8}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 61, in runTest\n    self.assertNotEqual(self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3\"), self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=30\"))\nAssertionError: <pykickstart.commands.zfcp.F12_ZFCPData object at 0x7fc110e34ba8> == <pykickstart.commands.zfcp.F12_ZFCPData object at 0x7fc110dd47f0>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -51,7 +51,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun in y.fcplun))", " ", " class F14_ZFCPData(F12_ZFCPData):", "     pass"]]], "result-type": "normal", "op-name": "replace_Eq_with_In", "module-name": "pykickstart.commands.zfcp", "occurrence": 8}, "92": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_IsNot", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 38, in runTest\n    self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn is not y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_IsNot", "module-name": "pykickstart.commands.zfcp", "occurrence": 1}, "95": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_IsNot", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 38, in runTest\n    self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun is not y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_IsNot", "module-name": "pykickstart.commands.zfcp", "occurrence": 4}, "23": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 50, in runTest\n    \"zfcp --devnum=1 --wwpn=2 --fcplun=3\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'zfcp --wwpn=2 --fcplun=3\\n' != 'zfcp --devnum=1 --wwpn=2 --fcplun=3\\n'\n- zfcp --wwpn=2 --fcplun=3\n+ zfcp --devnum=1 --wwpn=2 --fcplun=3\n?     +++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -28,7 +28,7 @@", "     def __str__(self):", "         retval = BaseData.__str__(self)", "         retval += 'zfcp'", "-        if (self.devnum != ''):", "+        if (self.devnum == ''):", "             retval += (' --devnum=%s' % self.devnum)", "         if (self.wwpn != ''):", "             retval += (' --wwpn=%s' % self.wwpn)"]]], "result-type": "normal", "op-name": "replace_NotEq_with_Eq", "module-name": "pykickstart.commands.zfcp", "occurrence": 0}, "10": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_In_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithGtE", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nTypeError: unorderable types: F12_ZFCPData() >= list()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 71, in runTest\n    zfcp --devnum=10 --wwpn=20 --fcplun=30\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \nzfcp --devnum=1 --wwpn=2 --fcplun=3\nzfcp --devnum=10 --wwpn=20 --fcplun=30: unorderable types: F12_ZFCPData() >= list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -85,7 +85,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, zd)", "         zd.lineno = self.lineno", "-        if (zd in self.dataList()):", "+        if (zd >= self.dataList()):", "             warnings.warn(_('A zfcp with this information has already been defined.'))", "         return zd", " "]]], "result-type": "normal", "op-name": "replace_In_with_GtE", "module-name": "pykickstart.commands.zfcp", "occurrence": 0}, "82": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 38, in runTest\n    self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum > y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_Gt", "module-name": "pykickstart.commands.zfcp", "occurrence": 0}, "128": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_NotIn", "8", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "occurrence": 8}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 75, in runTest\n    zfcp --devnum=1 --wwpn=2 --fcplun=3\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -51,7 +51,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun not in y.fcplun))", " ", " class F14_ZFCPData(F12_ZFCPData):", "     pass"]]], "result-type": "normal", "op-name": "replace_Eq_with_NotIn", "module-name": "pykickstart.commands.zfcp", "occurrence": 8}, "61": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 38, in runTest\n    self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum != y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_NotEq", "module-name": "pykickstart.commands.zfcp", "occurrence": 0}, "132": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_GtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE", "occurrence": 3}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -34,7 +34,7 @@", "             retval += (' --wwpn=%s' % self.wwpn)", "         if (self.fcplun != ''):", "             retval += (' --fcplun=%s' % self.fcplun)", "-        if (hasattr(self, 'scsiid') and (self.scsiid != '')):", "+        if (hasattr(self, 'scsiid') and (self.scsiid >= '')):", "             retval += (' --scsiid=%s' % self.scsiid)", "         if (hasattr(self, 'scsilun') and (self.scsilun != '')):", "             retval += (' --scsilun=%s' % self.scsilun)"]]], "result-type": "normal", "op-name": "replace_NotEq_with_GtE", "module-name": "pykickstart.commands.zfcp", "occurrence": 3}, "134": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 50, in runTest\n    \"zfcp --devnum=1 --wwpn=2 --fcplun=3\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'zfcp --wwpn=2 --fcplun=3\\n' != 'zfcp --devnum=1 --wwpn=2 --fcplun=3\\n'\n- zfcp --wwpn=2 --fcplun=3\n+ zfcp --devnum=1 --wwpn=2 --fcplun=3\n?     +++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -28,7 +28,7 @@", "     def __str__(self):", "         retval = BaseData.__str__(self)", "         retval += 'zfcp'", "-        if (self.devnum != ''):", "+        if (self.devnum <= ''):", "             retval += (' --devnum=%s' % self.devnum)", "         if (self.wwpn != ''):", "             retval += (' --wwpn=%s' % self.wwpn)"]]], "result-type": "normal", "op-name": "replace_NotEq_with_LtE", "module-name": "pykickstart.commands.zfcp", "occurrence": 0}, "26": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_Eq", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 30, in runTest\n    \"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsilun=5\\n' != 'zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\\n'\n- zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsilun=5\n+ zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\n?                                    +++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -34,7 +34,7 @@", "             retval += (' --wwpn=%s' % self.wwpn)", "         if (self.fcplun != ''):", "             retval += (' --fcplun=%s' % self.fcplun)", "-        if (hasattr(self, 'scsiid') and (self.scsiid != '')):", "+        if (hasattr(self, 'scsiid') and (self.scsiid == '')):", "             retval += (' --scsiid=%s' % self.scsiid)", "         if (hasattr(self, 'scsilun') and (self.scsilun != '')):", "             retval += (' --scsilun=%s' % self.scsilun)"]]], "result-type": "normal", "op-name": "replace_NotEq_with_Eq", "module-name": "pykickstart.commands.zfcp", "occurrence": 3}, "77": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_GtE", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "occurrence": 4}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun >= y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_GtE", "module-name": "pykickstart.commands.zfcp", "occurrence": 4}, "101": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 50, in runTest\n    \"zfcp --devnum=1 --wwpn=2 --fcplun=3\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'zfcp --wwpn=2 --fcplun=3\\n' != 'zfcp --devnum=1 --wwpn=2 --fcplun=3\\n'\n- zfcp --wwpn=2 --fcplun=3\n+ zfcp --devnum=1 --wwpn=2 --fcplun=3\n?     +++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -28,7 +28,7 @@", "     def __str__(self):", "         retval = BaseData.__str__(self)", "         retval += 'zfcp'", "-        if (self.devnum != ''):", "+        if (self.devnum is ''):", "             retval += (' --devnum=%s' % self.devnum)", "         if (self.wwpn != ''):", "             retval += (' --wwpn=%s' % self.wwpn)"]]], "result-type": "normal", "op-name": "replace_NotEq_with_Is", "module-name": "pykickstart.commands.zfcp", "occurrence": 0}, "116": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_In", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "occurrence": 5}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 58, in runTest\n    self.assertNotEqual(self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3\"), None)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 864, in assertNotEqual\n    if not first != second:\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -23,7 +23,7 @@", "         return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self in y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "result-type": "normal", "op-name": "replace_Eq_with_In", "module-name": "pykickstart.commands.zfcp", "occurrence": 5}, "29": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum is y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_Is", "module-name": "pykickstart.commands.zfcp", "occurrence": 0}, "50": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_Lt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 38, in runTest\n    self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid < y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_Lt", "module-name": "pykickstart.commands.zfcp", "occurrence": 3}, "122": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_NotIn", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 38, in runTest\n    self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun not in y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_NotIn", "module-name": "pykickstart.commands.zfcp", "occurrence": 2}, "41": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_LtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "occurrence": 3}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid <= y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_LtE", "module-name": "pykickstart.commands.zfcp", "occurrence": 3}, "9": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_In_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithEq", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nAttributeError: 'list' object has no attribute 'devnum'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 71, in runTest\n    zfcp --devnum=10 --wwpn=20 --fcplun=30\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \nzfcp --devnum=1 --wwpn=2 --fcplun=3\nzfcp --devnum=10 --wwpn=20 --fcplun=30: 'list' object has no attribute 'devnum'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -85,7 +85,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, zd)", "         zd.lineno = self.lineno", "-        if (zd in self.dataList()):", "+        if (zd == self.dataList()):", "             warnings.warn(_('A zfcp with this information has already been defined.'))", "         return zd", " "]]], "result-type": "normal", "op-name": "replace_In_with_Eq", "module-name": "pykickstart.commands.zfcp", "occurrence": 0}, "80": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_GtE", "7", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "occurrence": 7}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -51,7 +51,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", "+        return ((self.devnum == y.devnum) and (self.wwpn >= y.wwpn) and (self.fcplun == y.fcplun))", " ", " class F14_ZFCPData(F12_ZFCPData):", "     pass"]]], "result-type": "normal", "op-name": "replace_Eq_with_GtE", "module-name": "pykickstart.commands.zfcp", "occurrence": 7}, "39": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn <= y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_LtE", "module-name": "pykickstart.commands.zfcp", "occurrence": 1}, "126": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_NotIn", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "occurrence": 6}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 75, in runTest\n    zfcp --devnum=1 --wwpn=2 --fcplun=3\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -51,7 +51,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", "+        return ((self.devnum not in y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", " ", " class F14_ZFCPData(F12_ZFCPData):", "     pass"]]], "result-type": "normal", "op-name": "replace_Eq_with_NotIn", "module-name": "pykickstart.commands.zfcp", "occurrence": 6}, "75": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_GtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun >= y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_GtE", "module-name": "pykickstart.commands.zfcp", "occurrence": 2}, "51": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_Lt", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 38, in runTest\n    self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun < y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_Lt", "module-name": "pykickstart.commands.zfcp", "occurrence": 4}, "43": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_LtE", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "occurrence": 5}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 58, in runTest\n    self.assertNotEqual(self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3\"), None)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 864, in assertNotEqual\n    if not first != second:\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\nTypeError: unorderable types: F12_ZFCPData() <= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -23,7 +23,7 @@", "         return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self <= y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "result-type": "normal", "op-name": "replace_Eq_with_LtE", "module-name": "pykickstart.commands.zfcp", "occurrence": 5}, "96": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_IsNot", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "occurrence": 5}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 58, in runTest\n    self.assertNotEqual(self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3\"), None)\nAssertionError: <pykickstart.commands.zfcp.F12_ZFCPData object at 0x7f9e7dc03898> == None\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -23,7 +23,7 @@", "         return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self is not y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "result-type": "normal", "op-name": "replace_Eq_with_IsNot", "module-name": "pykickstart.commands.zfcp", "occurrence": 5}, "135": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 50, in runTest\n    \"zfcp --devnum=1 --wwpn=2 --fcplun=3\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'zfcp --devnum=1 --fcplun=3\\n' != 'zfcp --devnum=1 --wwpn=2 --fcplun=3\\n'\n- zfcp --devnum=1 --fcplun=3\n+ zfcp --devnum=1 --wwpn=2 --fcplun=3\n?                +++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -30,7 +30,7 @@", "         retval += 'zfcp'", "         if (self.devnum != ''):", "             retval += (' --devnum=%s' % self.devnum)", "-        if (self.wwpn != ''):", "+        if (self.wwpn <= ''):", "             retval += (' --wwpn=%s' % self.wwpn)", "         if (self.fcplun != ''):", "             retval += (' --fcplun=%s' % self.fcplun)"]]], "result-type": "normal", "op-name": "replace_NotEq_with_LtE", "module-name": "pykickstart.commands.zfcp", "occurrence": 1}, "49": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_Lt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 38, in runTest\n    self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun < y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_Lt", "module-name": "pykickstart.commands.zfcp", "occurrence": 2}, "65": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_NotEq", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 38, in runTest\n    self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun != y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_NotEq", "module-name": "pykickstart.commands.zfcp", "occurrence": 4}, "33": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_Is", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "occurrence": 4}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun is y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_Is", "module-name": "pykickstart.commands.zfcp", "occurrence": 4}, "113": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_In", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun in y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_In", "module-name": "pykickstart.commands.zfcp", "occurrence": 2}, "127": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_NotIn", "7", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "occurrence": 7}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 75, in runTest\n    zfcp --devnum=1 --wwpn=2 --fcplun=3\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -51,7 +51,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", "+        return ((self.devnum == y.devnum) and (self.wwpn not in y.wwpn) and (self.fcplun == y.fcplun))", " ", " class F14_ZFCPData(F12_ZFCPData):", "     pass"]]], "result-type": "normal", "op-name": "replace_Eq_with_NotIn", "module-name": "pykickstart.commands.zfcp", "occurrence": 7}, "125": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_NotIn", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "occurrence": 5}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 58, in runTest\n    self.assertNotEqual(self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3\"), None)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 864, in assertNotEqual\n    if not first != second:\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -23,7 +23,7 @@", "         return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self not in y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "result-type": "normal", "op-name": "replace_Eq_with_NotIn", "module-name": "pykickstart.commands.zfcp", "occurrence": 5}, "1": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "number_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": 89, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -60,7 +60,7 @@", "     removedKeywords = KickstartCommand.removedKeywords", "     removedAttrs = KickstartCommand.removedAttrs", " ", "-    def __init__(self, writePriority=71, *args, **kwargs):", "+    def __init__(self, writePriority=72, *args, **kwargs):", "         KickstartCommand.__init__(self, writePriority, *args, **kwargs)", "         self.op = self._getParser()", "         self.zfcp = kwargs.get('zfcp', [])"]]], "result-type": "normal", "op-name": "number_replacer", "module-name": "pykickstart.commands.zfcp", "occurrence": 0}, "100": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_In_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithIsNot", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nUserWarning: A zfcp with this information has already been defined.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 71, in runTest\n    zfcp --devnum=10 --wwpn=20 --fcplun=30\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \nzfcp --devnum=1 --wwpn=2 --fcplun=3\nzfcp --devnum=10 --wwpn=20 --fcplun=30: A zfcp with this information has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -85,7 +85,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, zd)", "         zd.lineno = self.lineno", "-        if (zd in self.dataList()):", "+        if (zd is not self.dataList()):", "             warnings.warn(_('A zfcp with this information has already been defined.'))", "         return zd", " "]]], "result-type": "normal", "op-name": "replace_In_with_IsNot", "module-name": "pykickstart.commands.zfcp", "occurrence": 0}, "21": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "boolean_replacer", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": 107, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "occurrence": 5}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 41, in runTest\n    self.assert_parse_error(\"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -76,7 +76,7 @@", "         op.add_argument('--devnum', required=True, version=FC3, help='')", "         op.add_argument('--fcplun', required=True, version=FC3, help='')", "         op.add_argument('--scsiid', required=True, version=FC3, help='')", "-        op.add_argument('--scsilun', required=True, version=FC3, help='')", "+        op.add_argument('--scsilun', required=False, version=FC3, help='')", "         op.add_argument('--wwpn', required=True, version=FC3, help='')", "         return op", " "]]], "result-type": "normal", "op-name": "boolean_replacer", "module-name": "pykickstart.commands.zfcp", "occurrence": 5}, "46": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_LtE", "8", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "occurrence": 8}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 61, in runTest\n    self.assertNotEqual(self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3\"), self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=30\"))\nAssertionError: <pykickstart.commands.zfcp.F12_ZFCPData object at 0x7f532c804438> == <pykickstart.commands.zfcp.F12_ZFCPData object at 0x7f532c821b70>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -51,7 +51,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun <= y.fcplun))", " ", " class F14_ZFCPData(F12_ZFCPData):", "     pass"]]], "result-type": "normal", "op-name": "replace_Eq_with_LtE", "module-name": "pykickstart.commands.zfcp", "occurrence": 8}, "74": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn >= y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_GtE", "module-name": "pykickstart.commands.zfcp", "occurrence": 1}, "108": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_In", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 50, in runTest\n    \"zfcp --devnum=1 --wwpn=2 --fcplun=3\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'zfcp --devnum=1 --wwpn=2\\n' != 'zfcp --devnum=1 --wwpn=2 --fcplun=3\\n'\n- zfcp --devnum=1 --wwpn=2\n+ zfcp --devnum=1 --wwpn=2 --fcplun=3\n?                         +++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -32,7 +32,7 @@", "             retval += (' --devnum=%s' % self.devnum)", "         if (self.wwpn != ''):", "             retval += (' --wwpn=%s' % self.wwpn)", "-        if (self.fcplun != ''):", "+        if (self.fcplun in ''):", "             retval += (' --fcplun=%s' % self.fcplun)", "         if (hasattr(self, 'scsiid') and (self.scsiid != '')):", "             retval += (' --scsiid=%s' % self.scsiid)"]]], "result-type": "normal", "op-name": "replace_NotEq_with_In", "module-name": "pykickstart.commands.zfcp", "occurrence": 2}, "83": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 38, in runTest\n    self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn > y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_Gt", "module-name": "pykickstart.commands.zfcp", "occurrence": 1}, "124": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_NotIn", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 38, in runTest\n    self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun not in y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_NotIn", "module-name": "pykickstart.commands.zfcp", "occurrence": 4}, "123": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_NotIn", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 38, in runTest\n    self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid not in y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_NotIn", "module-name": "pykickstart.commands.zfcp", "occurrence": 3}, "17": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "boolean_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": 77, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 58, in runTest\n    self.assertNotEqual(self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3\"), None)\nAssertionError: <pykickstart.commands.zfcp.F12_ZFCPData object at 0x7f10e3d171d0> == None\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -50,7 +50,7 @@", " ", "     def __eq__(self, y):", "         if (not y):", "-            return False", "+            return True", "         return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", " ", " class F14_ZFCPData(F12_ZFCPData):"]]], "result-type": "normal", "op-name": "boolean_replacer", "module-name": "pykickstart.commands.zfcp", "occurrence": 1}, "104": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_Is", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 30, in runTest\n    \"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsilun=5\\n' != 'zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\\n'\n- zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsilun=5\n+ zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\n?                                    +++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -34,7 +34,7 @@", "             retval += (' --wwpn=%s' % self.wwpn)", "         if (self.fcplun != ''):", "             retval += (' --fcplun=%s' % self.fcplun)", "-        if (hasattr(self, 'scsiid') and (self.scsiid != '')):", "+        if (hasattr(self, 'scsiid') and (self.scsiid is '')):", "             retval += (' --scsiid=%s' % self.scsiid)", "         if (hasattr(self, 'scsilun') and (self.scsilun != '')):", "             retval += (' --scsilun=%s' % self.scsilun)"]]], "result-type": "normal", "op-name": "replace_NotEq_with_Is", "module-name": "pykickstart.commands.zfcp", "occurrence": 3}, "90": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_Gt", "8", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "occurrence": 8}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 75, in runTest\n    zfcp --devnum=1 --wwpn=2 --fcplun=3\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -51,7 +51,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun > y.fcplun))", " ", " class F14_ZFCPData(F12_ZFCPData):", "     pass"]]], "result-type": "normal", "op-name": "replace_Eq_with_Gt", "module-name": "pykickstart.commands.zfcp", "occurrence": 8}, "81": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_GtE", "8", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "occurrence": 8}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -51,7 +51,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun >= y.fcplun))", " ", " class F14_ZFCPData(F12_ZFCPData):", "     pass"]]], "result-type": "normal", "op-name": "replace_Eq_with_GtE", "module-name": "pykickstart.commands.zfcp", "occurrence": 8}, "110": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_In", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 30, in runTest\n    \"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4\\n' != 'zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\\n'\n- zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4\n+ zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\n?                                               ++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -36,7 +36,7 @@", "             retval += (' --fcplun=%s' % self.fcplun)", "         if (hasattr(self, 'scsiid') and (self.scsiid != '')):", "             retval += (' --scsiid=%s' % self.scsiid)", "-        if (hasattr(self, 'scsilun') and (self.scsilun != '')):", "+        if (hasattr(self, 'scsilun') and (self.scsilun in '')):", "             retval += (' --scsilun=%s' % self.scsilun)", "         return (retval + '\\n')", " "]]], "result-type": "normal", "op-name": "replace_NotEq_with_In", "module-name": "pykickstart.commands.zfcp", "occurrence": 4}, "25": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_Eq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 50, in runTest\n    \"zfcp --devnum=1 --wwpn=2 --fcplun=3\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'zfcp --devnum=1 --wwpn=2\\n' != 'zfcp --devnum=1 --wwpn=2 --fcplun=3\\n'\n- zfcp --devnum=1 --wwpn=2\n+ zfcp --devnum=1 --wwpn=2 --fcplun=3\n?                         +++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -32,7 +32,7 @@", "             retval += (' --devnum=%s' % self.devnum)", "         if (self.wwpn != ''):", "             retval += (' --wwpn=%s' % self.wwpn)", "-        if (self.fcplun != ''):", "+        if (self.fcplun == ''):", "             retval += (' --fcplun=%s' % self.fcplun)", "         if (hasattr(self, 'scsiid') and (self.scsiid != '')):", "             retval += (' --scsiid=%s' % self.scsiid)"]]], "result-type": "normal", "op-name": "replace_NotEq_with_Eq", "module-name": "pykickstart.commands.zfcp", "occurrence": 2}, "99": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_IsNot", "8", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "occurrence": 8}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 75, in runTest\n    zfcp --devnum=1 --wwpn=2 --fcplun=3\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -51,7 +51,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun is not y.fcplun))", " ", " class F14_ZFCPData(F12_ZFCPData):", "     pass"]]], "result-type": "normal", "op-name": "replace_Eq_with_IsNot", "module-name": "pykickstart.commands.zfcp", "occurrence": 8}, "15": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_Lt", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 30, in runTest\n    \"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4\\n' != 'zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\\n'\n- zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4\n+ zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\n?                                               ++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -36,7 +36,7 @@", "             retval += (' --fcplun=%s' % self.fcplun)", "         if (hasattr(self, 'scsiid') and (self.scsiid != '')):", "             retval += (' --scsiid=%s' % self.scsiid)", "-        if (hasattr(self, 'scsilun') and (self.scsilun != '')):", "+        if (hasattr(self, 'scsilun') and (self.scsilun < '')):", "             retval += (' --scsilun=%s' % self.scsilun)", "         return (retval + '\\n')", " "]]], "result-type": "normal", "op-name": "replace_NotEq_with_Lt", "module-name": "pykickstart.commands.zfcp", "occurrence": 4}, "38": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum <= y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_LtE", "module-name": "pykickstart.commands.zfcp", "occurrence": 0}, "70": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_In_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithLt", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nTypeError: unorderable types: F12_ZFCPData() < list()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 71, in runTest\n    zfcp --devnum=10 --wwpn=20 --fcplun=30\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \nzfcp --devnum=1 --wwpn=2 --fcplun=3\nzfcp --devnum=10 --wwpn=20 --fcplun=30: unorderable types: F12_ZFCPData() < list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -85,7 +85,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, zd)", "         zd.lineno = self.lineno", "-        if (zd in self.dataList()):", "+        if (zd < self.dataList()):", "             warnings.warn(_('A zfcp with this information has already been defined.'))", "         return zd", " "]]], "result-type": "normal", "op-name": "replace_In_with_Lt", "module-name": "pykickstart.commands.zfcp", "occurrence": 0}, "27": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_Eq", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 30, in runTest\n    \"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4\\n' != 'zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\\n'\n- zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4\n+ zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\n?                                               ++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -36,7 +36,7 @@", "             retval += (' --fcplun=%s' % self.fcplun)", "         if (hasattr(self, 'scsiid') and (self.scsiid != '')):", "             retval += (' --scsiid=%s' % self.scsiid)", "-        if (hasattr(self, 'scsilun') and (self.scsilun != '')):", "+        if (hasattr(self, 'scsilun') and (self.scsilun == '')):", "             retval += (' --scsilun=%s' % self.scsilun)", "         return (retval + '\\n')", " "]]], "result-type": "normal", "op-name": "replace_NotEq_with_Eq", "module-name": "pykickstart.commands.zfcp", "occurrence": 4}, "53": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_Lt", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "occurrence": 6}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 75, in runTest\n    zfcp --devnum=1 --wwpn=2 --fcplun=3\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -51,7 +51,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", "+        return ((self.devnum < y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", " ", " class F14_ZFCPData(F12_ZFCPData):", "     pass"]]], "result-type": "normal", "op-name": "replace_Eq_with_Lt", "module-name": "pykickstart.commands.zfcp", "occurrence": 6}, "66": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_NotEq", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "occurrence": 5}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 58, in runTest\n    self.assertNotEqual(self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3\"), None)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 864, in assertNotEqual\n    if not first != second:\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\nRecursionError: maximum recursion depth exceeded while calling a Python object\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -23,7 +23,7 @@", "         return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self != y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "result-type": "normal", "op-name": "replace_Eq_with_NotEq", "module-name": "pykickstart.commands.zfcp", "occurrence": 5}, "52": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_Lt", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "occurrence": 5}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 58, in runTest\n    self.assertNotEqual(self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3\"), None)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 864, in assertNotEqual\n    if not first != second:\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\nTypeError: unorderable types: F12_ZFCPData() < NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -23,7 +23,7 @@", "         return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self < y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "result-type": "normal", "op-name": "replace_Eq_with_Lt", "module-name": "pykickstart.commands.zfcp", "occurrence": 5}, "78": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_GtE", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "occurrence": 5}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 58, in runTest\n    self.assertNotEqual(self.assert_parse(\"zfcp --devnum=1 --wwpn=2 --fcplun=3\"), None)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 864, in assertNotEqual\n    if not first != second:\n  File \"pykickstart.commands.zfcp\", line 48, in __ne__\nTypeError: unorderable types: F12_ZFCPData() >= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -23,7 +23,7 @@", "         return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self >= y))", " ", "     def __str__(self):", "         retval = BaseData.__str__(self)"]]], "result-type": "normal", "op-name": "replace_Eq_with_GtE", "module-name": "pykickstart.commands.zfcp", "occurrence": 5}, "5": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -30,7 +30,7 @@", "         retval += 'zfcp'", "         if (self.devnum != ''):", "             retval += (' --devnum=%s' % self.devnum)", "-        if (self.wwpn != ''):", "+        if (self.wwpn not in ''):", "             retval += (' --wwpn=%s' % self.wwpn)", "         if (self.fcplun != ''):", "             retval += (' --fcplun=%s' % self.fcplun)"]]], "result-type": "normal", "op-name": "replace_NotEq_with_NotIn", "module-name": "pykickstart.commands.zfcp", "occurrence": 1}, "115": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_In", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "occurrence": 4}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun in y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_In", "module-name": "pykickstart.commands.zfcp", "occurrence": 4}, "72": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_In_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithNotEq", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nUserWarning: A zfcp with this information has already been defined.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 71, in runTest\n    zfcp --devnum=10 --wwpn=20 --fcplun=30\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \nzfcp --devnum=1 --wwpn=2 --fcplun=3\nzfcp --devnum=10 --wwpn=20 --fcplun=30: A zfcp with this information has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -85,7 +85,7 @@", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_obj(ns, zd)", "         zd.lineno = self.lineno", "-        if (zd in self.dataList()):", "+        if (zd != self.dataList()):", "             warnings.warn(_('A zfcp with this information has already been defined.'))", "         return zd", " "]]], "result-type": "normal", "op-name": "replace_In_with_NotEq", "module-name": "pykickstart.commands.zfcp", "occurrence": 0}, "106": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 50, in runTest\n    \"zfcp --devnum=1 --wwpn=2 --fcplun=3\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'zfcp --wwpn=2 --fcplun=3\\n' != 'zfcp --devnum=1 --wwpn=2 --fcplun=3\\n'\n- zfcp --wwpn=2 --fcplun=3\n+ zfcp --devnum=1 --wwpn=2 --fcplun=3\n?     +++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -28,7 +28,7 @@", "     def __str__(self):", "         retval = BaseData.__str__(self)", "         retval += 'zfcp'", "-        if (self.devnum != ''):", "+        if (self.devnum in ''):", "             retval += (' --devnum=%s' % self.devnum)", "         if (self.wwpn != ''):", "             retval += (' --wwpn=%s' % self.wwpn)"]]], "result-type": "normal", "op-name": "replace_NotEq_with_In", "module-name": "pykickstart.commands.zfcp", "occurrence": 0}, "69": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_NotEq", "8", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "occurrence": 8}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 75, in runTest\n    zfcp --devnum=1 --wwpn=2 --fcplun=3\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -51,7 +51,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun != y.fcplun))", " ", " class F14_ZFCPData(F12_ZFCPData):", "     pass"]]], "result-type": "normal", "op-name": "replace_Eq_with_NotEq", "module-name": "pykickstart.commands.zfcp", "occurrence": 8}, "89": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_Gt", "7", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "occurrence": 7}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 75, in runTest\n    zfcp --devnum=1 --wwpn=2 --fcplun=3\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -51,7 +51,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", "+        return ((self.devnum == y.devnum) and (self.wwpn > y.wwpn) and (self.fcplun == y.fcplun))", " ", " class F14_ZFCPData(F12_ZFCPData):", "     pass"]]], "result-type": "normal", "op-name": "replace_Eq_with_Gt", "module-name": "pykickstart.commands.zfcp", "occurrence": 7}, "57": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -30,7 +30,7 @@", "         retval += 'zfcp'", "         if (self.devnum != ''):", "             retval += (' --devnum=%s' % self.devnum)", "-        if (self.wwpn != ''):", "+        if (self.wwpn > ''):", "             retval += (' --wwpn=%s' % self.wwpn)", "         if (self.fcplun != ''):", "             retval += (' --fcplun=%s' % self.fcplun)"]]], "result-type": "normal", "op-name": "replace_NotEq_with_Gt", "module-name": "pykickstart.commands.zfcp", "occurrence": 1}, "129": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -28,7 +28,7 @@", "     def __str__(self):", "         retval = BaseData.__str__(self)", "         retval += 'zfcp'", "-        if (self.devnum != ''):", "+        if (self.devnum >= ''):", "             retval += (' --devnum=%s' % self.devnum)", "         if (self.wwpn != ''):", "             retval += (' --wwpn=%s' % self.wwpn)"]]], "result-type": "normal", "op-name": "replace_NotEq_with_GtE", "module-name": "pykickstart.commands.zfcp", "occurrence": 0}, "107": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 50, in runTest\n    \"zfcp --devnum=1 --wwpn=2 --fcplun=3\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'zfcp --devnum=1 --fcplun=3\\n' != 'zfcp --devnum=1 --wwpn=2 --fcplun=3\\n'\n- zfcp --devnum=1 --fcplun=3\n+ zfcp --devnum=1 --wwpn=2 --fcplun=3\n?                +++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -30,7 +30,7 @@", "         retval += 'zfcp'", "         if (self.devnum != ''):", "             retval += (' --devnum=%s' % self.devnum)", "-        if (self.wwpn != ''):", "+        if (self.wwpn in ''):", "             retval += (' --wwpn=%s' % self.wwpn)", "         if (self.fcplun != ''):", "             retval += (' --fcplun=%s' % self.fcplun)"]]], "result-type": "normal", "op-name": "replace_NotEq_with_In", "module-name": "pykickstart.commands.zfcp", "occurrence": 1}, "138": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_LtE", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 30, in runTest\n    \"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4\\n' != 'zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\\n'\n- zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4\n+ zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\n?                                               ++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -36,7 +36,7 @@", "             retval += (' --fcplun=%s' % self.fcplun)", "         if (hasattr(self, 'scsiid') and (self.scsiid != '')):", "             retval += (' --scsiid=%s' % self.scsiid)", "-        if (hasattr(self, 'scsilun') and (self.scsilun != '')):", "+        if (hasattr(self, 'scsilun') and (self.scsilun <= '')):", "             retval += (' --scsilun=%s' % self.scsilun)", "         return (retval + '\\n')", " "]]], "result-type": "normal", "op-name": "replace_NotEq_with_LtE", "module-name": "pykickstart.commands.zfcp", "occurrence": 4}, "55": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_Lt", "8", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "occurrence": 8}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 75, in runTest\n    zfcp --devnum=1 --wwpn=2 --fcplun=3\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -51,7 +51,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun < y.fcplun))", " ", " class F14_ZFCPData(F12_ZFCPData):", "     pass"]]], "result-type": "normal", "op-name": "replace_Eq_with_Lt", "module-name": "pykickstart.commands.zfcp", "occurrence": 8}, "114": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_In", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "occurrence": 3}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -20,7 +20,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid == y.scsiid) and (self.scsilun == y.scsilun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun) and (self.scsiid in y.scsiid) and (self.scsilun == y.scsilun))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "result-type": "normal", "op-name": "replace_Eq_with_In", "module-name": "pykickstart.commands.zfcp", "occurrence": 3}, "37": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_Is", "8", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "occurrence": 8}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -51,7 +51,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", "+        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun is y.fcplun))", " ", " class F14_ZFCPData(F12_ZFCPData):", "     pass"]]], "result-type": "normal", "op-name": "replace_Eq_with_Is", "module-name": "pykickstart.commands.zfcp", "occurrence": 8}, "35": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_Is", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "occurrence": 6}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -51,7 +51,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", "+        return ((self.devnum is y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", " ", " class F14_ZFCPData(F12_ZFCPData):", "     pass"]]], "result-type": "normal", "op-name": "replace_Eq_with_Is", "module-name": "pykickstart.commands.zfcp", "occurrence": 6}, "67": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_Eq_with_NotEq", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "occurrence": 6}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 75, in runTest\n    zfcp --devnum=1 --wwpn=2 --fcplun=3\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -51,7 +51,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return ((self.devnum == y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", "+        return ((self.devnum != y.devnum) and (self.wwpn == y.wwpn) and (self.fcplun == y.fcplun))", " ", " class F14_ZFCPData(F12_ZFCPData):", "     pass"]]], "result-type": "normal", "op-name": "replace_Eq_with_NotEq", "module-name": "pykickstart.commands.zfcp", "occurrence": 6}, "109": {"command": ["cosmic-ray", "worker", "pykickstart.commands.zfcp", "replace_NotEq_with_In", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/zfcp.py\", line 30, in runTest\n    \"zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsilun=5\\n' != 'zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\\n'\n- zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsilun=5\n+ zfcp --devnum=1 --wwpn=2 --fcplun=3 --scsiid=4 --scsilun=5\n?                                    +++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/zfcp.py", "@@ -34,7 +34,7 @@", "             retval += (' --wwpn=%s' % self.wwpn)", "         if (self.fcplun != ''):", "             retval += (' --fcplun=%s' % self.fcplun)", "-        if (hasattr(self, 'scsiid') and (self.scsiid != '')):", "+        if (hasattr(self, 'scsiid') and (self.scsiid in '')):", "             retval += (' --scsiid=%s' % self.scsiid)", "         if (hasattr(self, 'scsilun') and (self.scsilun != '')):", "             retval += (' --scsilun=%s' % self.scsilun)"]]], "result-type": "normal", "op-name": "replace_NotEq_with_In", "module-name": "pykickstart.commands.zfcp", "occurrence": 3}}, "work-parameters": {"1": {"timeout": 16.6947, "test-args": ["-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/zfcp.py"], "test-runner": "nose"}}}