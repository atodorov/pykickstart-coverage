{"work-parameters": {"1": {"test-args": ["-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "timeout": 8.50817, "test-runner": "nose"}}, "work-items": {"20": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "occurrence": 3, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/nfs.py\", line 56, in runTest\n    self.assert_parse(\"nfs --server=1.2.3.4 --dir=/install --opts=options\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -50,7 +50,7 @@", "     def __eq__(self, other):", "         if (not FC3_NFS.__eq__(self, other)):", "             return False", "-        return (self.opts == other.opts)", "+        return (self.opts < other.opts)", " ", "     def __str__(self):", "         retval = FC3_NFS.__str__(self)"]]], "op-name": "replace_Eq_with_Lt", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_Lt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 3}, "29": {"result-data": [{"operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "occurrence": 2, "line_number": 63}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/nfs.py\", line 40, in runTest\n    self.assert_parse_error(\"nfs --server=1.2.3.4\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -31,7 +31,7 @@", "     def _getParser(self):", "         op = KSOptionParser(prog='nfs', description='\\n                            Install from the NFS server specified. This can\\n                            either be an exploded installation tree or a\\n                            directory of ISO images. In the latter case, the\\n                            install.img must also be provided subject to the\\n                            same rules as with the harddrive installation\\n                            method described above.', version=FC3)", "         op.add_argument('--server', metavar='<hostname>', required=True, version=FC3, help='\\n                        Server from which to install (hostname or IP).')", "-        op.add_argument('--dir', metavar='<directory>', required=True, version=FC3, help='\\n                        Directory containing the Packages/ directory of the\\n                        installation tree. If doing an ISO install, this\\n                        directory must also contain images/install.img.')", "+        op.add_argument('--dir', metavar='<directory>', required=False, version=FC3, help='\\n                        Directory containing the Packages/ directory of the\\n                        installation tree. If doing an ISO install, this\\n                        directory must also contain images/install.img.')", "         return op", " ", "     def parse(self, args):"]]], "op-name": "boolean_replacer", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "boolean_replacer", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 2}, "38": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "occurrence": 3, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/nfs.py\", line 58, in runTest\n    self.assert_parse(\"nfs --server=1.2.3.4 --dir=/install --opts=other,options\"))\nAssertionError: True is not false\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -50,7 +50,7 @@", "     def __eq__(self, other):", "         if (not FC3_NFS.__eq__(self, other)):", "             return False", "-        return (self.opts == other.opts)", "+        return (self.opts is not other.opts)", " ", "     def __str__(self):", "         retval = FC3_NFS.__str__(self)"]]], "op-name": "replace_Eq_with_IsNot", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_IsNot", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 3}, "28": {"result-data": [{"operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "occurrence": 1, "line_number": 60}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/nfs.py\", line 42, in runTest\n    self.assert_parse_error(\"nfs --dir=/install\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -30,7 +30,7 @@", " ", "     def _getParser(self):", "         op = KSOptionParser(prog='nfs', description='\\n                            Install from the NFS server specified. This can\\n                            either be an exploded installation tree or a\\n                            directory of ISO images. In the latter case, the\\n                            install.img must also be provided subject to the\\n                            same rules as with the harddrive installation\\n                            method described above.', version=FC3)", "-        op.add_argument('--server', metavar='<hostname>', required=True, version=FC3, help='\\n                        Server from which to install (hostname or IP).')", "+        op.add_argument('--server', metavar='<hostname>', required=False, version=FC3, help='\\n                        Server from which to install (hostname or IP).')", "         op.add_argument('--dir', metavar='<directory>', required=True, version=FC3, help='\\n                        Directory containing the Packages/ directory of the\\n                        installation tree. If doing an ISO install, this\\n                        directory must also contain images/install.img.')", "         return op", " "]]], "op-name": "boolean_replacer", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "boolean_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 1}, "25": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "occurrence": 2, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/nfs.py\", line 31, in runTest\n    self.assert_parse(\"nfs --server=2.3.4.5 --dir=/install\"))\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\nTypeError: unorderable types: FC3_NFS() <= FC3_NFS()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -19,7 +19,7 @@", "         return ((self.server == other.server) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "-        return (not (self == other))", "+        return (not (self <= other))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "op-name": "replace_Eq_with_LtE", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_LtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 2}, "15": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "occurrence": 2, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/nfs.py\", line 31, in runTest\n    self.assert_parse(\"nfs --server=2.3.4.5 --dir=/install\"))\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\nTypeError: argument of type 'FC3_NFS' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -19,7 +19,7 @@", "         return ((self.server == other.server) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "-        return (not (self == other))", "+        return (not (self in other))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "op-name": "replace_Eq_with_In", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_In", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 2}, "37": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "occurrence": 2, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/nfs.py\", line 31, in runTest\n    self.assert_parse(\"nfs --server=2.3.4.5 --dir=/install\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -19,7 +19,7 @@", "         return ((self.server == other.server) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "-        return (not (self == other))", "+        return (not (self is not other))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "op-name": "replace_Eq_with_IsNot", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_IsNot", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 2}, "13": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "occurrence": 0, "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -16,7 +16,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.server == other.server) and (self.dir == other.dir))", "+        return ((self.server in other.server) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]], "op-name": "replace_Eq_with_In", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 0}, "31": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "occurrence": 0, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/nfs.py\", line 31, in runTest\n    self.assert_parse(\"nfs --server=2.3.4.5 --dir=/install\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -16,7 +16,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.server == other.server) and (self.dir == other.dir))", "+        return ((self.server != other.server) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]], "op-name": "replace_Eq_with_NotEq", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 0}, "18": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "occurrence": 1, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/nfs.py\", line 35, in runTest\n    self.assert_parse(\"nfs --server=1.2.3.4 --dir=/install2\"))\nAssertionError: True is not false\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -16,7 +16,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.server == other.server) and (self.dir == other.dir))", "+        return ((self.server == other.server) and (self.dir < other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]], "op-name": "replace_Eq_with_Lt", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 1}, "41": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "occurrence": 2, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/nfs.py\", line 31, in runTest\n    self.assert_parse(\"nfs --server=2.3.4.5 --dir=/install\"))\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\nTypeError: unorderable types: FC3_NFS() >= FC3_NFS()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -19,7 +19,7 @@", "         return ((self.server == other.server) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "-        return (not (self == other))", "+        return (not (self >= other))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "op-name": "replace_Eq_with_GtE", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_GtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 2}, "14": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "occurrence": 1, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/nfs.py\", line 35, in runTest\n    self.assert_parse(\"nfs --server=1.2.3.4 --dir=/install2\"))\nAssertionError: True is not false\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -16,7 +16,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.server == other.server) and (self.dir == other.dir))", "+        return ((self.server == other.server) and (self.dir in other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]], "op-name": "replace_Eq_with_In", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 1}, "36": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "occurrence": 1, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/nfs.py\", line 35, in runTest\n    self.assert_parse(\"nfs --server=1.2.3.4 --dir=/install2\"))\nAssertionError: True is not false\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -16,7 +16,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.server == other.server) and (self.dir == other.dir))", "+        return ((self.server == other.server) and (self.dir is not other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]], "op-name": "replace_Eq_with_IsNot", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_IsNot", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 1}, "7": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "occurrence": 2, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/nfs.py\", line 31, in runTest\n    self.assert_parse(\"nfs --server=2.3.4.5 --dir=/install\"))\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\nTypeError: unorderable types: FC3_NFS() > FC3_NFS()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -19,7 +19,7 @@", "         return ((self.server == other.server) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "-        return (not (self == other))", "+        return (not (self > other))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "op-name": "replace_Eq_with_Gt", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_Gt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 2}, "8": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "occurrence": 3, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/nfs.py\", line 56, in runTest\n    self.assert_parse(\"nfs --server=1.2.3.4 --dir=/install --opts=options\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -50,7 +50,7 @@", "     def __eq__(self, other):", "         if (not FC3_NFS.__eq__(self, other)):", "             return False", "-        return (self.opts == other.opts)", "+        return (self.opts > other.opts)", " ", "     def __str__(self):", "         retval = FC3_NFS.__str__(self)"]]], "op-name": "replace_Eq_with_Gt", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_Gt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 3}, "2": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "occurrence": 1, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/nfs.py\", line 56, in runTest\n    self.assert_parse(\"nfs --server=1.2.3.4 --dir=/install --opts=options\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -16,7 +16,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.server == other.server) and (self.dir == other.dir))", "+        return ((self.server == other.server) and (self.dir not in other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]], "op-name": "replace_Eq_with_NotIn", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 1}, "3": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "occurrence": 2, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/nfs.py\", line 31, in runTest\n    self.assert_parse(\"nfs --server=2.3.4.5 --dir=/install\"))\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\nTypeError: argument of type 'FC3_NFS' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -19,7 +19,7 @@", "         return ((self.server == other.server) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "-        return (not (self == other))", "+        return (not (self not in other))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "op-name": "replace_Eq_with_NotIn", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_NotIn", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 2}, "34": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "occurrence": 3, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/nfs.py\", line 56, in runTest\n    self.assert_parse(\"nfs --server=1.2.3.4 --dir=/install --opts=options\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -50,7 +50,7 @@", "     def __eq__(self, other):", "         if (not FC3_NFS.__eq__(self, other)):", "             return False", "-        return (self.opts == other.opts)", "+        return (self.opts != other.opts)", " ", "     def __str__(self):", "         retval = FC3_NFS.__str__(self)"]]], "op-name": "replace_Eq_with_NotEq", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_NotEq", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 3}, "12": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "occurrence": 3, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/nfs.py\", line 56, in runTest\n    self.assert_parse(\"nfs --server=1.2.3.4 --dir=/install --opts=options\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -50,7 +50,7 @@", "     def __eq__(self, other):", "         if (not FC3_NFS.__eq__(self, other)):", "             return False", "-        return (self.opts == other.opts)", "+        return (self.opts is other.opts)", " ", "     def __str__(self):", "         retval = FC3_NFS.__str__(self)"]]], "op-name": "replace_Eq_with_Is", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_Is", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 3}, "22": {"result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "occurrence": 1, "line_number": 79}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -43,7 +43,7 @@", "     removedKeywords = FC3_NFS.removedKeywords", "     removedAttrs = FC3_NFS.removedAttrs", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         FC3_NFS.__init__(self, writePriority, *args, **kwargs)", "         self.opts = kwargs.get('opts', None)", " "]]], "op-name": "number_replacer", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "number_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 1}, "24": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "occurrence": 1, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/nfs.py\", line 35, in runTest\n    self.assert_parse(\"nfs --server=1.2.3.4 --dir=/install2\"))\nAssertionError: True is not false\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -16,7 +16,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.server == other.server) and (self.dir == other.dir))", "+        return ((self.server == other.server) and (self.dir <= other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]], "op-name": "replace_Eq_with_LtE", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 1}, "40": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "occurrence": 1, "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -16,7 +16,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.server == other.server) and (self.dir == other.dir))", "+        return ((self.server == other.server) and (self.dir >= other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]], "op-name": "replace_Eq_with_GtE", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 1}, "23": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "occurrence": 0, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/nfs.py\", line 31, in runTest\n    self.assert_parse(\"nfs --server=2.3.4.5 --dir=/install\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -16,7 +16,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.server == other.server) and (self.dir == other.dir))", "+        return ((self.server <= other.server) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]], "op-name": "replace_Eq_with_LtE", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 0}, "26": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "occurrence": 3, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/nfs.py\", line 58, in runTest\n    self.assert_parse(\"nfs --server=1.2.3.4 --dir=/install --opts=other,options\"))\nAssertionError: True is not false\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -50,7 +50,7 @@", "     def __eq__(self, other):", "         if (not FC3_NFS.__eq__(self, other)):", "             return False", "-        return (self.opts == other.opts)", "+        return (self.opts <= other.opts)", " ", "     def __str__(self):", "         retval = FC3_NFS.__str__(self)"]]], "op-name": "replace_Eq_with_LtE", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_LtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 3}, "5": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "occurrence": 0, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/nfs.py\", line 56, in runTest\n    self.assert_parse(\"nfs --server=1.2.3.4 --dir=/install --opts=options\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -16,7 +16,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.server == other.server) and (self.dir == other.dir))", "+        return ((self.server > other.server) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]], "op-name": "replace_Eq_with_Gt", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 0}, "42": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "occurrence": 3, "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -50,7 +50,7 @@", "     def __eq__(self, other):", "         if (not FC3_NFS.__eq__(self, other)):", "             return False", "-        return (self.opts == other.opts)", "+        return (self.opts >= other.opts)", " ", "     def __str__(self):", "         retval = FC3_NFS.__str__(self)"]]], "op-name": "replace_Eq_with_GtE", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_GtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 3}, "1": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "occurrence": 0, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/nfs.py\", line 31, in runTest\n    self.assert_parse(\"nfs --server=2.3.4.5 --dir=/install\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -16,7 +16,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.server == other.server) and (self.dir == other.dir))", "+        return ((self.server not in other.server) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]], "op-name": "replace_Eq_with_NotIn", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 0}, "11": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "occurrence": 2, "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -19,7 +19,7 @@", "         return ((self.server == other.server) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "-        return (not (self == other))", "+        return (not (self is other))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "op-name": "replace_Eq_with_Is", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_Is", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 2}, "6": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "occurrence": 1, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/nfs.py\", line 56, in runTest\n    self.assert_parse(\"nfs --server=1.2.3.4 --dir=/install --opts=options\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -16,7 +16,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.server == other.server) and (self.dir == other.dir))", "+        return ((self.server == other.server) and (self.dir > other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]], "op-name": "replace_Eq_with_Gt", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 1}, "27": {"result-data": [{"operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "occurrence": 0, "line_number": 37}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -15,7 +15,7 @@", " ", "     def __eq__(self, other):", "         if (not other):", "-            return False", "+            return True", "         return ((self.server == other.server) and (self.dir == other.dir))", " ", "     def __ne__(self, other):"]]], "op-name": "boolean_replacer", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "boolean_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 0}, "35": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "occurrence": 0, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/nfs.py\", line 31, in runTest\n    self.assert_parse(\"nfs --server=2.3.4.5 --dir=/install\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -16,7 +16,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.server == other.server) and (self.dir == other.dir))", "+        return ((self.server is not other.server) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]], "op-name": "replace_Eq_with_IsNot", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 0}, "39": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "occurrence": 0, "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -16,7 +16,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.server == other.server) and (self.dir == other.dir))", "+        return ((self.server >= other.server) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]], "op-name": "replace_Eq_with_GtE", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 0}, "16": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "occurrence": 3, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/nfs.py\", line 58, in runTest\n    self.assert_parse(\"nfs --server=1.2.3.4 --dir=/install --opts=other,options\"))\nAssertionError: True is not false\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -50,7 +50,7 @@", "     def __eq__(self, other):", "         if (not FC3_NFS.__eq__(self, other)):", "             return False", "-        return (self.opts == other.opts)", "+        return (self.opts in other.opts)", " ", "     def __str__(self):", "         retval = FC3_NFS.__str__(self)"]]], "op-name": "replace_Eq_with_In", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_In", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 3}, "10": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "occurrence": 1, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/nfs.py\", line 56, in runTest\n    self.assert_parse(\"nfs --server=1.2.3.4 --dir=/install --opts=options\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -16,7 +16,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.server == other.server) and (self.dir == other.dir))", "+        return ((self.server == other.server) and (self.dir is other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]], "op-name": "replace_Eq_with_Is", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 1}, "30": {"result-data": [{"operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "occurrence": 3, "line_number": 85}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/nfs.py\", line 50, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/nfs.py\", line 31, in runTest\n    self.assert_parse(\"nfs --server=2.3.4.5 --dir=/install\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -49,7 +49,7 @@", " ", "     def __eq__(self, other):", "         if (not FC3_NFS.__eq__(self, other)):", "-            return False", "+            return True", "         return (self.opts == other.opts)", " ", "     def __str__(self):"]]], "op-name": "boolean_replacer", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "boolean_replacer", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 3}, "33": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "occurrence": 2, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/nfs.py\", line 31, in runTest\n    self.assert_parse(\"nfs --server=2.3.4.5 --dir=/install\"))\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\nRecursionError: maximum recursion depth exceeded while calling a Python object\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -19,7 +19,7 @@", "         return ((self.server == other.server) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "-        return (not (self == other))", "+        return (not (self != other))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "op-name": "replace_Eq_with_NotEq", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_NotEq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 2}, "19": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "occurrence": 2, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/nfs.py\", line 31, in runTest\n    self.assert_parse(\"nfs --server=2.3.4.5 --dir=/install\"))\n  File \"pykickstart.commands.nfs\", line 42, in __ne__\nTypeError: unorderable types: FC3_NFS() < FC3_NFS()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -19,7 +19,7 @@", "         return ((self.server == other.server) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "-        return (not (self == other))", "+        return (not (self < other))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]], "op-name": "replace_Eq_with_Lt", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_Lt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 2}, "32": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "occurrence": 1, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/nfs.py\", line 35, in runTest\n    self.assert_parse(\"nfs --server=1.2.3.4 --dir=/install2\"))\nAssertionError: True is not false\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -16,7 +16,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.server == other.server) and (self.dir == other.dir))", "+        return ((self.server == other.server) and (self.dir != other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]], "op-name": "replace_Eq_with_NotEq", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 1}, "17": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "occurrence": 0, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/nfs.py\", line 31, in runTest\n    self.assert_parse(\"nfs --server=2.3.4.5 --dir=/install\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -16,7 +16,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.server == other.server) and (self.dir == other.dir))", "+        return ((self.server < other.server) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]], "op-name": "replace_Eq_with_Lt", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 0}, "4": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "occurrence": 3, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/nfs.py\", line 56, in runTest\n    self.assert_parse(\"nfs --server=1.2.3.4 --dir=/install --opts=options\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -50,7 +50,7 @@", "     def __eq__(self, other):", "         if (not FC3_NFS.__eq__(self, other)):", "             return False", "-        return (self.opts == other.opts)", "+        return (self.opts not in other.opts)", " ", "     def __str__(self):", "         retval = FC3_NFS.__str__(self)"]]], "op-name": "replace_Eq_with_NotIn", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_NotIn", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 3}, "21": {"result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "occurrence": 0, "line_number": 28}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -7,7 +7,7 @@", "     removedKeywords = KickstartCommand.removedKeywords", "     removedAttrs = KickstartCommand.removedAttrs", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         KickstartCommand.__init__(self, writePriority, *args, **kwargs)", "         self.server = kwargs.get('server', None)", "         self.dir = kwargs.get('dir', None)"]]], "op-name": "number_replacer", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "number_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 0}, "9": {"result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "occurrence": 0, "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/nfs.py\", line 56, in runTest\n    self.assert_parse(\"nfs --server=1.2.3.4 --dir=/install --opts=options\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/nfs.py", "@@ -16,7 +16,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.server == other.server) and (self.dir == other.dir))", "+        return ((self.server is other.server) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]], "op-name": "replace_Eq_with_Is", "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.nfs", "replace_Eq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/nfs.py"], "module-name": "pykickstart.commands.nfs", "occurrence": 0}}, "_default": {}}