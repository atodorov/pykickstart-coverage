{"work-items": {"12": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_NotIn", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 159, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -102,7 +102,7 @@", "         vg = self.dataClass()", "         self.set_to_obj(ns, vg)", "         vg.lineno = self.lineno", "-        if (len(ns.name) == 0):", "+        if (len(ns.name) not in 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a VG name')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'volgroup', 'options': extra}"]]], "op-name": "replace_Eq_with_NotIn", "result-type": "normal", "occurrence": 3}, "9": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 34, in runTest\n    self.assert_parse(\"volgroup vg.02 pv.01\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -21,7 +21,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.vgname == y.vgname)", "+        return (self.vgname not in y.vgname)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "op-name": "replace_Eq_with_NotIn", "result-type": "normal", "occurrence": 0}, "147": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Lt_with_IsNot", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtWithIsNot", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -137,7 +137,7 @@", "         retval = FC3_VolGroup.parse(self, args)", "         if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "-        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "+        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 is not retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))", "         if self.handler.autopart.seen:", "             errorMsg = _(\"The volgroup and autopart commands can't be used at the same time\")"]]], "op-name": "replace_Lt_with_IsNot", "result-type": "normal", "occurrence": 1}, "155": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_In_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithLt", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 176, in parse\nTypeError: unorderable types: F16_VolGroupData() < list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -114,7 +114,7 @@", "         vg.vgname = ns.name[0]", "         if (len(ns.partitions) > 0):", "             vg.physvols = ns.partitions", "-        if (vg in self.dataList()):", "+        if (vg < self.dataList()):", "             warnings.warn((_('A volgroup with the name %s has already been defined.') % vg.vgname))", "         return vg", " "]]], "op-name": "replace_In_with_Lt", "result-type": "normal", "occurrence": 0}, "121": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "number_replacer", "14", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 167, "occurrence": 14}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -109,7 +109,7 @@", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partitions) == 0) and (not ns.preexist)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a list of partitions')))", "-        elif ((len(ns.partitions) > 1) and ns.preexist):", "+        elif ((len(ns.partitions) > 2) and ns.preexist):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Members may not be specified for preexisting volgroup')))", "         vg.vgname = ns.name[0]", "         if (len(ns.partitions) > 0):"]]], "op-name": "number_replacer", "result-type": "normal", "occurrence": 14}, "61": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_GtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithGtE", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 210, in parse\nTypeError: unorderable types: NoneType() >= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -137,7 +137,7 @@", "         retval = FC3_VolGroup.parse(self, args)", "         if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "-        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "+        if ((getattr(retval, 'reserved_percent', None) >= None) and (not (0 < retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))", "         if self.handler.autopart.seen:", "             errorMsg = _(\"The volgroup and autopart commands can't be used at the same time\")"]]], "op-name": "replace_IsNot_with_GtE", "result-type": "normal", "occurrence": 3}, "11": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_NotIn", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 25, in runTest\n    \"volgroup vg.01 --pesize=70000 pv.01\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 148, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -94,7 +94,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if ((len(ns.name) > 1) and (len(ns.partitions) == 0)):", "+        if ((len(ns.name) > 1) and (len(ns.partitions) not in 0)):", "             ns.partitions = ns.name[1:]", "             ns.name = [ns.name[0]]", "         if (not ns.format):"]]], "op-name": "replace_Eq_with_NotIn", "result-type": "normal", "occurrence": 2}, "4": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_Eq", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithEq", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 210, in parse\nTypeError: unorderable types: int() < NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -137,7 +137,7 @@", "         retval = FC3_VolGroup.parse(self, args)", "         if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "-        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "+        if ((getattr(retval, 'reserved_percent', None) == None) and (not (0 < retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))", "         if self.handler.autopart.seen:", "             errorMsg = _(\"The volgroup and autopart commands can't be used at the same time\")"]]], "op-name": "replace_IsNot_with_Eq", "result-type": "normal", "occurrence": 3}, "148": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Lt_with_IsNot", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtWithIsNot", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -137,7 +137,7 @@", "         retval = FC3_VolGroup.parse(self, args)", "         if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "-        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "+        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent is not 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))", "         if self.handler.autopart.seen:", "             errorMsg = _(\"The volgroup and autopart commands can't be used at the same time\")"]]], "op-name": "replace_Lt_with_IsNot", "result-type": "normal", "occurrence": 2}, "86": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_Is", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithIs", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 210, in parse\nTypeError: unorderable types: int() < NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -137,7 +137,7 @@", "         retval = FC3_VolGroup.parse(self, args)", "         if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "-        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "+        if ((getattr(retval, 'reserved_percent', None) is None) and (not (0 < retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))", "         if self.handler.autopart.seen:", "             errorMsg = _(\"The volgroup and autopart commands can't be used at the same time\")"]]], "op-name": "replace_IsNot_with_Is", "result-type": "normal", "occurrence": 3}, "17": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_In", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithIn", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 210, in parse\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -137,7 +137,7 @@", "         retval = FC3_VolGroup.parse(self, args)", "         if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "-        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "+        if ((getattr(retval, 'reserved_percent', None) in None) and (not (0 < retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))", "         if self.handler.autopart.seen:", "             errorMsg = _(\"The volgroup and autopart commands can't be used at the same time\")"]]], "op-name": "replace_IsNot_with_In", "result-type": "normal", "occurrence": 3}, "145": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_Lt", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 45, in runTest\n    self.assert_parse_error(\"volgroup vg01\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -107,7 +107,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'volgroup', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        if ((len(ns.partitions) == 0) and (not ns.preexist)):", "+        if ((len(ns.partitions) < 0) and (not ns.preexist)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a list of partitions')))", "         elif ((len(ns.partitions) > 1) and ns.preexist):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Members may not be specified for preexisting volgroup')))"]]], "op-name": "replace_Eq_with_Lt", "result-type": "normal", "occurrence": 4}, "50": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.volgroup\", line 63, in __str__\n  File \"pykickstart.commands.volgroup\", line 82, in _getArgsAsStr\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -55,7 +55,7 @@", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "         if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "-        if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "+        if ((self.reserved_percent not in None) and (self.reserved_percent > 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)", "         return retval", " "]]], "op-name": "replace_IsNot_with_NotIn", "result-type": "normal", "occurrence": 1}, "180": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_LtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLtE", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 163, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nUnexpected arguments to volgroup command: []\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -104,7 +104,7 @@", "         vg.lineno = self.lineno", "         if (len(ns.name) == 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a VG name')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) <= 0):", "             mapping = {'command': 'volgroup', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partitions) == 0) and (not ns.preexist)):"]]], "op-name": "replace_Gt_with_LtE", "result-type": "normal", "occurrence": 3}, "93": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_In", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 159, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -102,7 +102,7 @@", "         vg = self.dataClass()", "         self.set_to_obj(ns, vg)", "         vg.lineno = self.lineno", "-        if (len(ns.name) == 0):", "+        if (len(ns.name) in 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a VG name')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'volgroup', 'options': extra}"]]], "op-name": "replace_Eq_with_In", "result-type": "normal", "occurrence": 3}, "34": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_Eq", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithEq", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 163, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nUnexpected arguments to volgroup command: []\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -104,7 +104,7 @@", "         vg.lineno = self.lineno", "         if (len(ns.name) == 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a VG name')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) == 0):", "             mapping = {'command': 'volgroup', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partitions) == 0) and (not ns.preexist)):"]]], "op-name": "replace_Gt_with_Eq", "result-type": "normal", "occurrence": 3}, "181": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_LtE", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLtE", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 168, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nMembers may not be specified for preexisting volgroup\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -109,7 +109,7 @@", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partitions) == 0) and (not ns.preexist)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a list of partitions')))", "-        elif ((len(ns.partitions) > 1) and ns.preexist):", "+        elif ((len(ns.partitions) <= 1) and ns.preexist):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Members may not be specified for preexisting volgroup')))", "         vg.vgname = ns.name[0]", "         if (len(ns.partitions) > 0):"]]], "op-name": "replace_Gt_with_LtE", "result-type": "normal", "occurrence": 4}, "35": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_Eq", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithEq", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -109,7 +109,7 @@", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partitions) == 0) and (not ns.preexist)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a list of partitions')))", "-        elif ((len(ns.partitions) > 1) and ns.preexist):", "+        elif ((len(ns.partitions) == 1) and ns.preexist):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Members may not be specified for preexisting volgroup')))", "         vg.vgname = ns.name[0]", "         if (len(ns.partitions) > 0):"]]], "op-name": "replace_Gt_with_Eq", "result-type": "normal", "occurrence": 4}, "74": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Lt_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtWithGtE", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 85, in runTest\n    \"volgroup vg.01%s --reserved-percent=50 pv.01\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 211, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nVolume group reserved space percentage must be between 1 and 99.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -137,7 +137,7 @@", "         retval = FC3_VolGroup.parse(self, args)", "         if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "-        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "+        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 >= retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))", "         if self.handler.autopart.seen:", "             errorMsg = _(\"The volgroup and autopart commands can't be used at the same time\")"]]], "op-name": "replace_Lt_with_GtE", "result-type": "normal", "occurrence": 1}, "123": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "number_replacer", "16", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 172, "occurrence": 16}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 25, in runTest\n    \"volgroup vg.01 --pesize=70000 pv.01\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'volgroup vg.01 --pesize=70000\\n' != 'volgroup vg.01 --pesize=70000 pv.01\\n'\n- volgroup vg.01 --pesize=70000\n+ volgroup vg.01 --pesize=70000 pv.01\n?                              ++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -112,7 +112,7 @@", "         elif ((len(ns.partitions) > 1) and ns.preexist):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Members may not be specified for preexisting volgroup')))", "         vg.vgname = ns.name[0]", "-        if (len(ns.partitions) > 0):", "+        if (len(ns.partitions) > 1):", "             vg.physvols = ns.partitions", "         if (vg in self.dataList()):", "             warnings.warn((_('A volgroup with the name %s has already been defined.') % vg.vgname))"]]], "op-name": "number_replacer", "result-type": "normal", "occurrence": 16}, "119": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "number_replacer", "12", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 161, "occurrence": 12}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -104,7 +104,7 @@", "         vg.lineno = self.lineno", "         if (len(ns.name) == 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a VG name')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) > 1):", "             mapping = {'command': 'volgroup', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partitions) == 0) and (not ns.preexist)):"]]], "op-name": "number_replacer", "result-type": "normal", "occurrence": 12}, "189": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Lt_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtWithIn", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 85, in runTest\n    \"volgroup vg.01%s --reserved-percent=50 pv.01\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 210, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -137,7 +137,7 @@", "         retval = FC3_VolGroup.parse(self, args)", "         if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "-        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "+        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 in retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))", "         if self.handler.autopart.seen:", "             errorMsg = _(\"The volgroup and autopart commands can't be used at the same time\")"]]], "op-name": "replace_Lt_with_In", "result-type": "normal", "occurrence": 1}, "71": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_Is", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -102,7 +102,7 @@", "         vg = self.dataClass()", "         self.set_to_obj(ns, vg)", "         vg.lineno = self.lineno", "-        if (len(ns.name) == 0):", "+        if (len(ns.name) is 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a VG name')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'volgroup', 'options': extra}"]]], "op-name": "replace_Eq_with_Is", "result-type": "normal", "occurrence": 3}, "164": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_LtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -94,7 +94,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if ((len(ns.name) > 1) and (len(ns.partitions) == 0)):", "+        if ((len(ns.name) > 1) and (len(ns.partitions) <= 0)):", "             ns.partitions = ns.name[1:]", "             ns.name = [ns.name[0]]", "         if (not ns.format):"]]], "op-name": "replace_Eq_with_LtE", "result-type": "normal", "occurrence": 2}, "79": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_GtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -94,7 +94,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if ((len(ns.name) > 1) and (len(ns.partitions) == 0)):", "+        if ((len(ns.name) > 1) and (len(ns.partitions) >= 0)):", "             ns.partitions = ns.name[1:]", "             ns.name = [ns.name[0]]", "         if (not ns.format):"]]], "op-name": "replace_Eq_with_GtE", "result-type": "normal", "occurrence": 2}, "3": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_Eq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithEq", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 207, in parse\nTypeError: unorderable types: NoneType() < int()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -135,7 +135,7 @@", " ", "     def parse(self, args):", "         retval = FC3_VolGroup.parse(self, args)", "-        if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "+        if ((getattr(retval, 'reserved_space', None) == None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "         if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))"]]], "op-name": "replace_IsNot_with_Eq", "result-type": "normal", "occurrence": 2}, "70": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_Is", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -94,7 +94,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if ((len(ns.name) > 1) and (len(ns.partitions) == 0)):", "+        if ((len(ns.name) > 1) and (len(ns.partitions) is 0)):", "             ns.partitions = ns.name[1:]", "             ns.name = [ns.name[0]]", "         if (not ns.format):"]]], "op-name": "replace_Eq_with_Is", "result-type": "normal", "occurrence": 2}, "64": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Lt_with_NotEq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -137,7 +137,7 @@", "         retval = FC3_VolGroup.parse(self, args)", "         if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "-        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "+        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent != 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))", "         if self.handler.autopart.seen:", "             errorMsg = _(\"The volgroup and autopart commands can't be used at the same time\")"]]], "op-name": "replace_Lt_with_NotEq", "result-type": "normal", "occurrence": 2}, "170": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_GtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithGtE", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 163, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nUnexpected arguments to volgroup command: []\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -104,7 +104,7 @@", "         vg.lineno = self.lineno", "         if (len(ns.name) == 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a VG name')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) >= 0):", "             mapping = {'command': 'volgroup', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partitions) == 0) and (not ns.preexist)):"]]], "op-name": "replace_Gt_with_GtE", "result-type": "normal", "occurrence": 3}, "67": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Lt_with_Eq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtWithEq", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 85, in runTest\n    \"volgroup vg.01%s --reserved-percent=50 pv.01\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 211, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nVolume group reserved space percentage must be between 1 and 99.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -137,7 +137,7 @@", "         retval = FC3_VolGroup.parse(self, args)", "         if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "-        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "+        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent == 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))", "         if self.handler.autopart.seen:", "             errorMsg = _(\"The volgroup and autopart commands can't be used at the same time\")"]]], "op-name": "replace_Lt_with_Eq", "result-type": "normal", "occurrence": 2}, "2": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_Eq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithEq", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.volgroup\", line 63, in __str__\n  File \"pykickstart.commands.volgroup\", line 82, in _getArgsAsStr\nTypeError: unorderable types: NoneType() > int()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -55,7 +55,7 @@", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "         if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "-        if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "+        if ((self.reserved_percent == None) and (self.reserved_percent > 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)", "         return retval", " "]]], "op-name": "replace_IsNot_with_Eq", "result-type": "normal", "occurrence": 1}, "37": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nUserWarning: A volgroup with the name vg.02 has already been defined.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 66, in runTest\n    volgroup vg.02 pv.01\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \nvolgroup vg.01 pv.01\nvolgroup vg.02 pv.01: A volgroup with the name vg.02 has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -21,7 +21,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.vgname == y.vgname)", "+        return (self.vgname > y.vgname)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "op-name": "replace_Eq_with_Gt", "result-type": "normal", "occurrence": 0}, "18": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIsNot", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -53,7 +53,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "-        if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "+        if ((self.reserved_space is not None) and (self.reserved_space is not 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "         if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)"]]], "op-name": "replace_Gt_with_IsNot", "result-type": "normal", "occurrence": 0}, "165": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_LtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -102,7 +102,7 @@", "         vg = self.dataClass()", "         self.set_to_obj(ns, vg)", "         vg.lineno = self.lineno", "-        if (len(ns.name) == 0):", "+        if (len(ns.name) <= 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a VG name')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'volgroup', 'options': extra}"]]], "op-name": "replace_Eq_with_LtE", "result-type": "normal", "occurrence": 3}, "205": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Lt_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtWithIs", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 85, in runTest\n    \"volgroup vg.01%s --reserved-percent=50 pv.01\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 211, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nVolume group reserved space percentage must be between 1 and 99.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -137,7 +137,7 @@", "         retval = FC3_VolGroup.parse(self, args)", "         if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "-        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "+        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 is retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))", "         if self.handler.autopart.seen:", "             errorMsg = _(\"The volgroup and autopart commands can't be used at the same time\")"]]], "op-name": "replace_Lt_with_Is", "result-type": "normal", "occurrence": 1}, "157": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_In_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 177, in parse\nUserWarning: A volgroup with the name vg.01 has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -114,7 +114,7 @@", "         vg.vgname = ns.name[0]", "         if (len(ns.partitions) > 0):", "             vg.physvols = ns.partitions", "-        if (vg in self.dataList()):", "+        if (vg != self.dataList()):", "             warnings.warn((_('A volgroup with the name %s has already been defined.') % vg.vgname))", "         return vg", " "]]], "op-name": "replace_In_with_NotEq", "result-type": "normal", "occurrence": 0}, "27": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "boolean_replacer", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 42, "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -20,7 +20,7 @@", " ", "     def __eq__(self, y):", "         if (not y):", "-            return False", "+            return True", "         return (self.vgname == y.vgname)", " ", "     def __ne__(self, y):"]]], "op-name": "boolean_replacer", "result-type": "normal", "occurrence": 2}, "13": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_NotIn", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 165, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -107,7 +107,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'volgroup', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        if ((len(ns.partitions) == 0) and (not ns.preexist)):", "+        if ((len(ns.partitions) not in 0) and (not ns.preexist)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a list of partitions')))", "         elif ((len(ns.partitions) > 1) and ns.preexist):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Members may not be specified for preexisting volgroup')))"]]], "op-name": "replace_Eq_with_NotIn", "result-type": "normal", "occurrence": 4}, "108": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "number_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 53, "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 112, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'volgroup vg.01 --noformat --pesize=0 --useexisting\\n' != 'volgroup vg.01 --noformat --useexisting\\n'\n- volgroup vg.01 --noformat --pesize=0 --useexisting\n?                          -----------\n+ volgroup vg.01 --noformat --useexisting\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -30,7 +30,7 @@", "         retval = ''", "         if (not self.format):", "             retval += ' --noformat'", "-        if (self.pesize != 0):", "+        if (self.pesize != 1):", "             retval += (' --pesize=%d' % self.pesize)", "         if self.preexist:", "             retval += ' --useexisting'"]]], "op-name": "number_replacer", "result-type": "normal", "occurrence": 1}, "75": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Lt_with_GtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtWithGtE", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 85, in runTest\n    \"volgroup vg.01%s --reserved-percent=50 pv.01\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 211, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nVolume group reserved space percentage must be between 1 and 99.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -137,7 +137,7 @@", "         retval = FC3_VolGroup.parse(self, args)", "         if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "-        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "+        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent >= 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))", "         if self.handler.autopart.seen:", "             errorMsg = _(\"The volgroup and autopart commands can't be used at the same time\")"]]], "op-name": "replace_Lt_with_GtE", "result-type": "normal", "occurrence": 2}, "175": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_In_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 177, in parse\nUserWarning: A volgroup with the name vg.01 has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -114,7 +114,7 @@", "         vg.vgname = ns.name[0]", "         if (len(ns.partitions) > 0):", "             vg.physvols = ns.partitions", "-        if (vg in self.dataList()):", "+        if (vg not in self.dataList()):", "             warnings.warn((_('A volgroup with the name %s has already been defined.') % vg.vgname))", "         return vg", " "]]], "op-name": "replace_In_with_NotIn", "result-type": "normal", "occurrence": 0}, "203": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_In_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithLtE", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 176, in parse\nTypeError: unorderable types: F16_VolGroupData() <= list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -114,7 +114,7 @@", "         vg.vgname = ns.name[0]", "         if (len(ns.partitions) > 0):", "             vg.physvols = ns.partitions", "-        if (vg in self.dataList()):", "+        if (vg <= self.dataList()):", "             warnings.warn((_('A volgroup with the name %s has already been defined.') % vg.vgname))", "         return vg", " "]]], "op-name": "replace_In_with_LtE", "result-type": "normal", "occurrence": 0}, "190": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Lt_with_In", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtWithIn", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 85, in runTest\n    \"volgroup vg.01%s --reserved-percent=50 pv.01\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 210, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -137,7 +137,7 @@", "         retval = FC3_VolGroup.parse(self, args)", "         if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "-        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "+        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent in 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))", "         if self.handler.autopart.seen:", "             errorMsg = _(\"The volgroup and autopart commands can't be used at the same time\")"]]], "op-name": "replace_Lt_with_In", "result-type": "normal", "occurrence": 2}, "23": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_IsNot", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIsNot", "line_number": "<UNKNOWN>", "occurrence": 5}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -112,7 +112,7 @@", "         elif ((len(ns.partitions) > 1) and ns.preexist):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Members may not be specified for preexisting volgroup')))", "         vg.vgname = ns.name[0]", "-        if (len(ns.partitions) > 0):", "+        if (len(ns.partitions) is not 0):", "             vg.physvols = ns.partitions", "         if (vg in self.dataList()):", "             warnings.warn((_('A volgroup with the name %s has already been defined.') % vg.vgname))"]]], "op-name": "replace_Gt_with_IsNot", "result-type": "normal", "occurrence": 5}, "72": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_Is", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -107,7 +107,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'volgroup', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        if ((len(ns.partitions) == 0) and (not ns.preexist)):", "+        if ((len(ns.partitions) is 0) and (not ns.preexist)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a list of partitions')))", "         elif ((len(ns.partitions) > 1) and ns.preexist):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Members may not be specified for preexisting volgroup')))"]]], "op-name": "replace_Eq_with_Is", "result-type": "normal", "occurrence": 4}, "30": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "boolean_replacer", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 153, "occurrence": 5}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 166, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nvolgroup must be given a list of partitions\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -98,7 +98,7 @@", "             ns.partitions = ns.name[1:]", "             ns.name = [ns.name[0]]", "         if (not ns.format):", "-            ns.preexist = True", "+            ns.preexist = False", "         vg = self.dataClass()", "         self.set_to_obj(ns, vg)", "         vg.lineno = self.lineno"]]], "op-name": "boolean_replacer", "result-type": "normal", "occurrence": 5}, "94": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_In", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 165, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -107,7 +107,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'volgroup', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        if ((len(ns.partitions) == 0) and (not ns.preexist)):", "+        if ((len(ns.partitions) in 0) and (not ns.preexist)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a list of partitions')))", "         elif ((len(ns.partitions) > 1) and ns.preexist):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Members may not be specified for preexisting volgroup')))"]]], "op-name": "replace_Eq_with_In", "result-type": "normal", "occurrence": 4}, "160": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_Gt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithGt", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 207, in parse\nTypeError: unorderable types: NoneType() > NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -135,7 +135,7 @@", " ", "     def parse(self, args):", "         retval = FC3_VolGroup.parse(self, args)", "-        if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "+        if ((getattr(retval, 'reserved_space', None) > None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "         if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))"]]], "op-name": "replace_IsNot_with_Gt", "result-type": "normal", "occurrence": 2}, "176": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_NotEq_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'volgroup vg.01 --noformat --useexisting\\n' != 'volgroup vg.01 --noformat --pesize=32768 --useexisting\\n'\n- volgroup vg.01 --noformat --useexisting\n+ volgroup vg.01 --noformat --pesize=32768 --useexisting\n?                          +++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -30,7 +30,7 @@", "         retval = ''", "         if (not self.format):", "             retval += ' --noformat'", "-        if (self.pesize != 0):", "+        if (self.pesize == 0):", "             retval += (' --pesize=%d' % self.pesize)", "         if self.preexist:", "             retval += ' --useexisting'"]]], "op-name": "replace_NotEq_with_Eq", "result-type": "normal", "occurrence": 0}, "45": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_LtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithLtE", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 210, in parse\nTypeError: unorderable types: NoneType() <= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -137,7 +137,7 @@", "         retval = FC3_VolGroup.parse(self, args)", "         if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "-        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "+        if ((getattr(retval, 'reserved_percent', None) <= None) and (not (0 < retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))", "         if self.handler.autopart.seen:", "             errorMsg = _(\"The volgroup and autopart commands can't be used at the same time\")"]]], "op-name": "replace_IsNot_with_LtE", "result-type": "normal", "occurrence": 3}, "54": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_IsNot", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 34, in runTest\n    self.assert_parse(\"volgroup vg.02 pv.01\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -24,7 +24,7 @@", "         return (self.vgname == y.vgname)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self is not y))", " ", "     def _getArgsAsStr(self):", "         retval = ''"]]], "op-name": "replace_Eq_with_IsNot", "result-type": "normal", "occurrence": 1}, "20": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_IsNot", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIsNot", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 42, in runTest\n    self.assert_parse_error(\"volgroup\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 150, in parse\nIndexError: list index out of range\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -94,7 +94,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if ((len(ns.name) > 1) and (len(ns.partitions) == 0)):", "+        if ((len(ns.name) is not 1) and (len(ns.partitions) == 0)):", "             ns.partitions = ns.name[1:]", "             ns.name = [ns.name[0]]", "         if (not ns.format):"]]], "op-name": "replace_Gt_with_IsNot", "result-type": "normal", "occurrence": 2}, "69": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -24,7 +24,7 @@", "         return (self.vgname == y.vgname)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self is y))", " ", "     def _getArgsAsStr(self):", "         retval = ''"]]], "op-name": "replace_Eq_with_Is", "result-type": "normal", "occurrence": 1}, "182": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_LtE", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLtE", "line_number": "<UNKNOWN>", "occurrence": 5}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 25, in runTest\n    \"volgroup vg.01 --pesize=70000 pv.01\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'volgroup vg.01 --pesize=70000\\n' != 'volgroup vg.01 --pesize=70000 pv.01\\n'\n- volgroup vg.01 --pesize=70000\n+ volgroup vg.01 --pesize=70000 pv.01\n?                              ++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -112,7 +112,7 @@", "         elif ((len(ns.partitions) > 1) and ns.preexist):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Members may not be specified for preexisting volgroup')))", "         vg.vgname = ns.name[0]", "-        if (len(ns.partitions) > 0):", "+        if (len(ns.partitions) <= 0):", "             vg.physvols = ns.partitions", "         if (vg in self.dataList()):", "             warnings.warn((_('A volgroup with the name %s has already been defined.') % vg.vgname))"]]], "op-name": "replace_Gt_with_LtE", "result-type": "normal", "occurrence": 5}, "166": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_LtE", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -107,7 +107,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'volgroup', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        if ((len(ns.partitions) == 0) and (not ns.preexist)):", "+        if ((len(ns.partitions) <= 0) and (not ns.preexist)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a list of partitions')))", "         elif ((len(ns.partitions) > 1) and ns.preexist):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Members may not be specified for preexisting volgroup')))"]]], "op-name": "replace_Eq_with_LtE", "result-type": "normal", "occurrence": 4}, "58": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithGtE", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.volgroup\", line 63, in __str__\n  File \"pykickstart.commands.volgroup\", line 80, in _getArgsAsStr\nTypeError: unorderable types: NoneType() >= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -53,7 +53,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "-        if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "+        if ((self.reserved_space >= None) and (self.reserved_space > 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "         if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)"]]], "op-name": "replace_IsNot_with_GtE", "result-type": "normal", "occurrence": 0}, "118": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "number_replacer", "11", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 159, "occurrence": 11}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 160, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nvolgroup must be given a VG name\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -102,7 +102,7 @@", "         vg = self.dataClass()", "         self.set_to_obj(ns, vg)", "         vg.lineno = self.lineno", "-        if (len(ns.name) == 0):", "+        if (len(ns.name) == 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a VG name')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'volgroup', 'options': extra}"]]], "op-name": "number_replacer", "result-type": "normal", "occurrence": 11}, "112": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "number_replacer", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 99, "occurrence": 5}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -72,7 +72,7 @@", "     removedKeywords = KickstartCommand.removedKeywords", "     removedAttrs = KickstartCommand.removedAttrs", " ", "-    def __init__(self, writePriority=132, *args, **kwargs):", "+    def __init__(self, writePriority=133, *args, **kwargs):", "         KickstartCommand.__init__(self, writePriority, *args, **kwargs)", "         self.op = self._getParser()", "         self.vgList = kwargs.get('vgList', [])"]]], "op-name": "number_replacer", "result-type": "normal", "occurrence": 5}, "201": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_In", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIn", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 167, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -109,7 +109,7 @@", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partitions) == 0) and (not ns.preexist)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a list of partitions')))", "-        elif ((len(ns.partitions) > 1) and ns.preexist):", "+        elif ((len(ns.partitions) in 1) and ns.preexist):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Members may not be specified for preexisting volgroup')))", "         vg.vgname = ns.name[0]", "         if (len(ns.partitions) > 0):"]]], "op-name": "replace_Gt_with_In", "result-type": "normal", "occurrence": 4}, "10": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 34, in runTest\n    self.assert_parse(\"volgroup vg.02 pv.01\"))\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\nTypeError: argument of type 'F16_VolGroupData' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -24,7 +24,7 @@", "         return (self.vgname == y.vgname)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self not in y))", " ", "     def _getArgsAsStr(self):", "         retval = ''"]]], "op-name": "replace_Eq_with_NotIn", "result-type": "normal", "occurrence": 1}, "184": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 34, in runTest\n    self.assert_parse(\"volgroup vg.02 pv.01\"))\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\nRecursionError: maximum recursion depth exceeded while calling a Python object\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -24,7 +24,7 @@", "         return (self.vgname == y.vgname)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self != y))", " ", "     def _getArgsAsStr(self):", "         retval = ''"]]], "op-name": "replace_Eq_with_NotEq", "result-type": "normal", "occurrence": 1}, "96": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 85, in runTest\n    \"volgroup vg.01%s --reserved-percent=50 pv.01\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.volgroup\", line 63, in __str__\n  File \"pykickstart.commands.volgroup\", line 82, in _getArgsAsStr\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -55,7 +55,7 @@", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "         if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "-        if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "+        if ((self.reserved_percent is not None) and (self.reserved_percent not in 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)", "         return retval", " "]]], "op-name": "replace_Gt_with_NotIn", "result-type": "normal", "occurrence": 1}, "139": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_Lt", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLt", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 168, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nMembers may not be specified for preexisting volgroup\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -109,7 +109,7 @@", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partitions) == 0) and (not ns.preexist)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a list of partitions')))", "-        elif ((len(ns.partitions) > 1) and ns.preexist):", "+        elif ((len(ns.partitions) < 1) and ns.preexist):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Members may not be specified for preexisting volgroup')))", "         vg.vgname = ns.name[0]", "         if (len(ns.partitions) > 0):"]]], "op-name": "replace_Gt_with_Lt", "result-type": "normal", "occurrence": 4}, "106": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_Is", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIs", "line_number": "<UNKNOWN>", "occurrence": 5}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 25, in runTest\n    \"volgroup vg.01 --pesize=70000 pv.01\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'volgroup vg.01 --pesize=70000\\n' != 'volgroup vg.01 --pesize=70000 pv.01\\n'\n- volgroup vg.01 --pesize=70000\n+ volgroup vg.01 --pesize=70000 pv.01\n?                              ++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -112,7 +112,7 @@", "         elif ((len(ns.partitions) > 1) and ns.preexist):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Members may not be specified for preexisting volgroup')))", "         vg.vgname = ns.name[0]", "-        if (len(ns.partitions) > 0):", "+        if (len(ns.partitions) is 0):", "             vg.physvols = ns.partitions", "         if (vg in self.dataList()):", "             warnings.warn((_('A volgroup with the name %s has already been defined.') % vg.vgname))"]]], "op-name": "replace_Gt_with_Is", "result-type": "normal", "occurrence": 5}, "82": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_NotEq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'volgroup vg.01 --noformat --useexisting\\n' != 'volgroup vg.01 --noformat --pesize=32768 --useexisting\\n'\n- volgroup vg.01 --noformat --useexisting\n+ volgroup vg.01 --noformat --pesize=32768 --useexisting\n?                          +++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -30,7 +30,7 @@", "         retval = ''", "         if (not self.format):", "             retval += ' --noformat'", "-        if (self.pesize != 0):", "+        if (self.pesize <= 0):", "             retval += (' --pesize=%d' % self.pesize)", "         if self.preexist:", "             retval += ' --useexisting'"]]], "op-name": "replace_NotEq_with_LtE", "result-type": "normal", "occurrence": 0}, "63": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Lt_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -137,7 +137,7 @@", "         retval = FC3_VolGroup.parse(self, args)", "         if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "-        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "+        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 != retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))", "         if self.handler.autopart.seen:", "             errorMsg = _(\"The volgroup and autopart commands can't be used at the same time\")"]]], "op-name": "replace_Lt_with_NotEq", "result-type": "normal", "occurrence": 1}, "76": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_NotEq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 112, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'volgroup vg.01 --noformat --pesize=0 --useexisting\\n' != 'volgroup vg.01 --noformat --useexisting\\n'\n- volgroup vg.01 --noformat --pesize=0 --useexisting\n?                          -----------\n+ volgroup vg.01 --noformat --useexisting\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -30,7 +30,7 @@", "         retval = ''", "         if (not self.format):", "             retval += ' --noformat'", "-        if (self.pesize != 0):", "+        if (self.pesize >= 0):", "             retval += (' --pesize=%d' % self.pesize)", "         if self.preexist:", "             retval += ' --useexisting'"]]], "op-name": "replace_NotEq_with_GtE", "result-type": "normal", "occurrence": 0}, "125": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "number_replacer", "18", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 210, "occurrence": 18}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -137,7 +137,7 @@", "         retval = FC3_VolGroup.parse(self, args)", "         if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "-        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "+        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (1 < retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))", "         if self.handler.autopart.seen:", "             errorMsg = _(\"The volgroup and autopart commands can't be used at the same time\")"]]], "op-name": "number_replacer", "result-type": "normal", "occurrence": 18}, "32": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_Eq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithEq", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 85, in runTest\n    \"volgroup vg.01%s --reserved-percent=50 pv.01\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'volgroup vg.01 --pesize=32768 pv.01\\n' != 'volgroup vg.01 --pesize=32768 --reserved-percent=50 pv.01\\n'\n- volgroup vg.01 --pesize=32768 pv.01\n+ volgroup vg.01 --pesize=32768 --reserved-percent=50 pv.01\n?                               ++++++++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -55,7 +55,7 @@", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "         if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "-        if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "+        if ((self.reserved_percent is not None) and (self.reserved_percent == 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)", "         return retval", " "]]], "op-name": "replace_Gt_with_Eq", "result-type": "normal", "occurrence": 1}, "53": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 34, in runTest\n    self.assert_parse(\"volgroup vg.02 pv.01\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -21,7 +21,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.vgname == y.vgname)", "+        return (self.vgname is not y.vgname)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "op-name": "replace_Eq_with_IsNot", "result-type": "normal", "occurrence": 0}, "154": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_In_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithGtE", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 176, in parse\nTypeError: unorderable types: F16_VolGroupData() >= list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -114,7 +114,7 @@", "         vg.vgname = ns.name[0]", "         if (len(ns.partitions) > 0):", "             vg.physvols = ns.partitions", "-        if (vg in self.dataList()):", "+        if (vg >= self.dataList()):", "             warnings.warn((_('A volgroup with the name %s has already been defined.') % vg.vgname))", "         return vg", " "]]], "op-name": "replace_In_with_GtE", "result-type": "normal", "occurrence": 0}, "188": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Lt_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtWithIn", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 83, in runTest\n    \"volgroup vg.01%s --reserved-space=1000 pv.01\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 207, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -135,7 +135,7 @@", " ", "     def parse(self, args):", "         retval = FC3_VolGroup.parse(self, args)", "-        if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "+        if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space in 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "         if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))"]]], "op-name": "replace_Lt_with_In", "result-type": "normal", "occurrence": 0}, "25": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "boolean_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 34, "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -12,7 +12,7 @@", " ", "     def __init__(self, *args, **kwargs):", "         BaseData.__init__(self, *args, **kwargs)", "-        self.format = kwargs.get('format', True)", "+        self.format = kwargs.get('format', False)", "         self.pesize = kwargs.get('pesize', 32768)", "         self.preexist = kwargs.get('preexist', False)", "         self.vgname = kwargs.get('vgname', '')"]]], "op-name": "boolean_replacer", "result-type": "normal", "occurrence": 0}, "59": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithGtE", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.volgroup\", line 63, in __str__\n  File \"pykickstart.commands.volgroup\", line 82, in _getArgsAsStr\nTypeError: unorderable types: NoneType() >= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -55,7 +55,7 @@", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "         if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "-        if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "+        if ((self.reserved_percent >= None) and (self.reserved_percent > 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)", "         return retval", " "]]], "op-name": "replace_IsNot_with_GtE", "result-type": "normal", "occurrence": 1}, "131": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Lt_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtWithGt", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 85, in runTest\n    \"volgroup vg.01%s --reserved-percent=50 pv.01\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 211, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nVolume group reserved space percentage must be between 1 and 99.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -137,7 +137,7 @@", "         retval = FC3_VolGroup.parse(self, args)", "         if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "-        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "+        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 > retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))", "         if self.handler.autopart.seen:", "             errorMsg = _(\"The volgroup and autopart commands can't be used at the same time\")"]]], "op-name": "replace_Lt_with_Gt", "result-type": "normal", "occurrence": 1}, "177": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLtE", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 83, in runTest\n    \"volgroup vg.01%s --reserved-space=1000 pv.01\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'volgroup vg.01 --pesize=32768 pv.01\\n' != 'volgroup vg.01 --pesize=32768 --reserved-space=1000 pv.01\\n'\n- volgroup vg.01 --pesize=32768 pv.01\n+ volgroup vg.01 --pesize=32768 --reserved-space=1000 pv.01\n?                               ++++++++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -53,7 +53,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "-        if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "+        if ((self.reserved_space is not None) and (self.reserved_space <= 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "         if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)"]]], "op-name": "replace_Gt_with_LtE", "result-type": "normal", "occurrence": 0}, "178": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLtE", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 85, in runTest\n    \"volgroup vg.01%s --reserved-percent=50 pv.01\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'volgroup vg.01 --pesize=32768 pv.01\\n' != 'volgroup vg.01 --pesize=32768 --reserved-percent=50 pv.01\\n'\n- volgroup vg.01 --pesize=32768 pv.01\n+ volgroup vg.01 --pesize=32768 --reserved-percent=50 pv.01\n?                               ++++++++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -55,7 +55,7 @@", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "         if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "-        if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "+        if ((self.reserved_percent is not None) and (self.reserved_percent <= 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)", "         return retval", " "]]], "op-name": "replace_Gt_with_LtE", "result-type": "normal", "occurrence": 1}, "114": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "number_replacer", "7", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 148, "occurrence": 7}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 25, in runTest\n    \"volgroup vg.01 --pesize=70000 pv.01\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 166, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nvolgroup must be given a list of partitions\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -94,7 +94,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if ((len(ns.name) > 1) and (len(ns.partitions) == 0)):", "+        if ((len(ns.name) > 2) and (len(ns.partitions) == 0)):", "             ns.partitions = ns.name[1:]", "             ns.name = [ns.name[0]]", "         if (not ns.format):"]]], "op-name": "number_replacer", "result-type": "normal", "occurrence": 7}, "95": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 83, in runTest\n    \"volgroup vg.01%s --reserved-space=1000 pv.01\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.volgroup\", line 63, in __str__\n  File \"pykickstart.commands.volgroup\", line 80, in _getArgsAsStr\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -53,7 +53,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "-        if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "+        if ((self.reserved_space is not None) and (self.reserved_space not in 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "         if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)"]]], "op-name": "replace_Gt_with_NotIn", "result-type": "normal", "occurrence": 0}, "169": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_GtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithGtE", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -94,7 +94,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if ((len(ns.name) > 1) and (len(ns.partitions) == 0)):", "+        if ((len(ns.name) >= 1) and (len(ns.partitions) == 0)):", "             ns.partitions = ns.name[1:]", "             ns.name = [ns.name[0]]", "         if (not ns.format):"]]], "op-name": "replace_Gt_with_GtE", "result-type": "normal", "occurrence": 2}, "168": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithGtE", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -55,7 +55,7 @@", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "         if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "-        if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "+        if ((self.reserved_percent is not None) and (self.reserved_percent >= 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)", "         return retval", " "]]], "op-name": "replace_Gt_with_GtE", "result-type": "normal", "occurrence": 1}, "204": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Lt_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtWithIs", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 92, in runTest\n    self.assert_parse_error(\"volgroup vg.01 pv.01 --reserved-space=-1\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -135,7 +135,7 @@", " ", "     def parse(self, args):", "         retval = FC3_VolGroup.parse(self, args)", "-        if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "+        if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space is 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "         if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))"]]], "op-name": "replace_Lt_with_Is", "result-type": "normal", "occurrence": 0}, "183": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 34, in runTest\n    self.assert_parse(\"volgroup vg.02 pv.01\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -21,7 +21,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.vgname == y.vgname)", "+        return (self.vgname != y.vgname)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "op-name": "replace_Eq_with_NotEq", "result-type": "normal", "occurrence": 0}, "102": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIs", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 85, in runTest\n    \"volgroup vg.01%s --reserved-percent=50 pv.01\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'volgroup vg.01 --pesize=32768 pv.01\\n' != 'volgroup vg.01 --pesize=32768 --reserved-percent=50 pv.01\\n'\n- volgroup vg.01 --pesize=32768 pv.01\n+ volgroup vg.01 --pesize=32768 --reserved-percent=50 pv.01\n?                               ++++++++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -55,7 +55,7 @@", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "         if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "-        if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "+        if ((self.reserved_percent is not None) and (self.reserved_percent is 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)", "         return retval", " "]]], "op-name": "replace_Gt_with_Is", "result-type": "normal", "occurrence": 1}, "143": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_Lt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 25, in runTest\n    \"volgroup vg.01 --pesize=70000 pv.01\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 166, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nvolgroup must be given a list of partitions\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -94,7 +94,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if ((len(ns.name) > 1) and (len(ns.partitions) == 0)):", "+        if ((len(ns.name) > 1) and (len(ns.partitions) < 0)):", "             ns.partitions = ns.name[1:]", "             ns.name = [ns.name[0]]", "         if (not ns.format):"]]], "op-name": "replace_Eq_with_Lt", "result-type": "normal", "occurrence": 2}, "89": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Lt_with_LtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtWithLtE", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 94, in runTest\n    self.assert_parse_error(\"volgroup vg.01 pv.01 --reserved-percent=100\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -137,7 +137,7 @@", "         retval = FC3_VolGroup.parse(self, args)", "         if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "-        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "+        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent <= 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))", "         if self.handler.autopart.seen:", "             errorMsg = _(\"The volgroup and autopart commands can't be used at the same time\")"]]], "op-name": "replace_Lt_with_LtE", "result-type": "normal", "occurrence": 2}, "115": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "number_replacer", "8", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 148, "occurrence": 8}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 25, in runTest\n    \"volgroup vg.01 --pesize=70000 pv.01\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 166, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nvolgroup must be given a list of partitions\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -94,7 +94,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if ((len(ns.name) > 1) and (len(ns.partitions) == 0)):", "+        if ((len(ns.name) > 1) and (len(ns.partitions) == 1)):", "             ns.partitions = ns.name[1:]", "             ns.name = [ns.name[0]]", "         if (not ns.format):"]]], "op-name": "number_replacer", "result-type": "normal", "occurrence": 8}, "101": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIs", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 83, in runTest\n    \"volgroup vg.01%s --reserved-space=1000 pv.01\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'volgroup vg.01 --pesize=32768 pv.01\\n' != 'volgroup vg.01 --pesize=32768 --reserved-space=1000 pv.01\\n'\n- volgroup vg.01 --pesize=32768 pv.01\n+ volgroup vg.01 --pesize=32768 --reserved-space=1000 pv.01\n?                               ++++++++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -53,7 +53,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "-        if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "+        if ((self.reserved_space is not None) and (self.reserved_space is 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "         if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)"]]], "op-name": "replace_Gt_with_Is", "result-type": "normal", "occurrence": 0}, "159": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithGt", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.volgroup\", line 63, in __str__\n  File \"pykickstart.commands.volgroup\", line 82, in _getArgsAsStr\nTypeError: unorderable types: NoneType() > NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -55,7 +55,7 @@", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "         if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "-        if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "+        if ((self.reserved_percent > None) and (self.reserved_percent > 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)", "         return retval", " "]]], "op-name": "replace_IsNot_with_Gt", "result-type": "normal", "occurrence": 1}, "31": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithEq", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 83, in runTest\n    \"volgroup vg.01%s --reserved-space=1000 pv.01\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'volgroup vg.01 --pesize=32768 pv.01\\n' != 'volgroup vg.01 --pesize=32768 --reserved-space=1000 pv.01\\n'\n- volgroup vg.01 --pesize=32768 pv.01\n+ volgroup vg.01 --pesize=32768 --reserved-space=1000 pv.01\n?                               ++++++++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -53,7 +53,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "-        if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "+        if ((self.reserved_space is not None) and (self.reserved_space == 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "         if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)"]]], "op-name": "replace_Gt_with_Eq", "result-type": "normal", "occurrence": 0}, "162": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 34, in runTest\n    self.assert_parse(\"volgroup vg.02 pv.01\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -21,7 +21,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.vgname == y.vgname)", "+        return (self.vgname <= y.vgname)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "op-name": "replace_Eq_with_LtE", "result-type": "normal", "occurrence": 0}, "133": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_NotEq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'volgroup vg.01 --noformat --useexisting\\n' != 'volgroup vg.01 --noformat --pesize=32768 --useexisting\\n'\n- volgroup vg.01 --noformat --useexisting\n+ volgroup vg.01 --noformat --pesize=32768 --useexisting\n?                          +++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -30,7 +30,7 @@", "         retval = ''", "         if (not self.format):", "             retval += ' --noformat'", "-        if (self.pesize != 0):", "+        if (self.pesize < 0):", "             retval += (' --pesize=%d' % self.pesize)", "         if self.preexist:", "             retval += ' --useexisting'"]]], "op-name": "replace_NotEq_with_Lt", "result-type": "normal", "occurrence": 0}, "140": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_Lt", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLt", "line_number": "<UNKNOWN>", "occurrence": 5}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 25, in runTest\n    \"volgroup vg.01 --pesize=70000 pv.01\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'volgroup vg.01 --pesize=70000\\n' != 'volgroup vg.01 --pesize=70000 pv.01\\n'\n- volgroup vg.01 --pesize=70000\n+ volgroup vg.01 --pesize=70000 pv.01\n?                              ++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -112,7 +112,7 @@", "         elif ((len(ns.partitions) > 1) and ns.preexist):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Members may not be specified for preexisting volgroup')))", "         vg.vgname = ns.name[0]", "-        if (len(ns.partitions) > 0):", "+        if (len(ns.partitions) < 0):", "             vg.physvols = ns.partitions", "         if (vg in self.dataList()):", "             warnings.warn((_('A volgroup with the name %s has already been defined.') % vg.vgname))"]]], "op-name": "replace_Gt_with_Lt", "result-type": "normal", "occurrence": 5}, "111": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "number_replacer", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 90, "occurrence": 4}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -63,7 +63,7 @@", " ", "     def __init__(self, *args, **kwargs):", "         F16_VolGroupData.__init__(self, *args, **kwargs)", "-        self.pesize = kwargs.get('pesize', 0)", "+        self.pesize = kwargs.get('pesize', 1)", " ", " class RHEL7_VolGroupData(F21_VolGroupData):", "     pass"]]], "op-name": "number_replacer", "result-type": "normal", "occurrence": 4}, "107": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "number_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 35, "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -13,7 +13,7 @@", "     def __init__(self, *args, **kwargs):", "         BaseData.__init__(self, *args, **kwargs)", "         self.format = kwargs.get('format', True)", "-        self.pesize = kwargs.get('pesize', 32768)", "+        self.pesize = kwargs.get('pesize', 32769)", "         self.preexist = kwargs.get('preexist', False)", "         self.vgname = kwargs.get('vgname', '')", "         self.physvols = kwargs.get('physvols', [])"]]], "op-name": "number_replacer", "result-type": "normal", "occurrence": 0}, "151": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_Lt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithLt", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 207, in parse\nTypeError: unorderable types: NoneType() < NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -135,7 +135,7 @@", " ", "     def parse(self, args):", "         retval = FC3_VolGroup.parse(self, args)", "-        if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "+        if ((getattr(retval, 'reserved_space', None) < None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "         if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))"]]], "op-name": "replace_IsNot_with_Lt", "result-type": "normal", "occurrence": 2}, "173": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_In_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithGt", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 176, in parse\nTypeError: unorderable types: F16_VolGroupData() > list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -114,7 +114,7 @@", "         vg.vgname = ns.name[0]", "         if (len(ns.partitions) > 0):", "             vg.physvols = ns.partitions", "-        if (vg in self.dataList()):", "+        if (vg > self.dataList()):", "             warnings.warn((_('A volgroup with the name %s has already been defined.') % vg.vgname))", "         return vg", " "]]], "op-name": "replace_In_with_Gt", "result-type": "normal", "occurrence": 0}, "122": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "number_replacer", "15", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 170, "occurrence": 15}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 170, in parse\nIndexError: list index out of range\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -111,7 +111,7 @@", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a list of partitions')))", "         elif ((len(ns.partitions) > 1) and ns.preexist):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Members may not be specified for preexisting volgroup')))", "-        vg.vgname = ns.name[0]", "+        vg.vgname = ns.name[1]", "         if (len(ns.partitions) > 0):", "             vg.physvols = ns.partitions", "         if (vg in self.dataList()):"]]], "op-name": "number_replacer", "result-type": "normal", "occurrence": 15}, "16": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_In", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithIn", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 207, in parse\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -135,7 +135,7 @@", " ", "     def parse(self, args):", "         retval = FC3_VolGroup.parse(self, args)", "-        if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "+        if ((getattr(retval, 'reserved_space', None) in None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "         if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))"]]], "op-name": "replace_IsNot_with_In", "result-type": "normal", "occurrence": 2}, "83": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithIs", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.volgroup\", line 63, in __str__\n  File \"pykickstart.commands.volgroup\", line 80, in _getArgsAsStr\nTypeError: unorderable types: NoneType() > int()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -53,7 +53,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "-        if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "+        if ((self.reserved_space is None) and (self.reserved_space > 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "         if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)"]]], "op-name": "replace_IsNot_with_Is", "result-type": "normal", "occurrence": 0}, "199": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_In", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIn", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 148, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -94,7 +94,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if ((len(ns.name) > 1) and (len(ns.partitions) == 0)):", "+        if ((len(ns.name) in 1) and (len(ns.partitions) == 0)):", "             ns.partitions = ns.name[1:]", "             ns.name = [ns.name[0]]", "         if (not ns.format):"]]], "op-name": "replace_Gt_with_In", "result-type": "normal", "occurrence": 2}, "144": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_Lt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -102,7 +102,7 @@", "         vg = self.dataClass()", "         self.set_to_obj(ns, vg)", "         vg.lineno = self.lineno", "-        if (len(ns.name) == 0):", "+        if (len(ns.name) < 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a VG name')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'volgroup', 'options': extra}"]]], "op-name": "replace_Eq_with_Lt", "result-type": "normal", "occurrence": 3}, "149": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithLt", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.volgroup\", line 63, in __str__\n  File \"pykickstart.commands.volgroup\", line 80, in _getArgsAsStr\nTypeError: unorderable types: NoneType() < NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -53,7 +53,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "-        if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "+        if ((self.reserved_space < None) and (self.reserved_space > 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "         if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)"]]], "op-name": "replace_IsNot_with_Lt", "result-type": "normal", "occurrence": 0}, "117": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "number_replacer", "10", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 150, "occurrence": 10}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 25, in runTest\n    \"volgroup vg.01 --pesize=70000 pv.01\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'volgroup pv.01 --pesize=70000 pv.01\\n' != 'volgroup vg.01 --pesize=70000 pv.01\\n'\n- volgroup pv.01 --pesize=70000 pv.01\n?          -\n+ volgroup vg.01 --pesize=70000 pv.01\n?           +\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -96,7 +96,7 @@", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if ((len(ns.name) > 1) and (len(ns.partitions) == 0)):", "             ns.partitions = ns.name[1:]", "-            ns.name = [ns.name[0]]", "+            ns.name = [ns.name[1]]", "         if (not ns.format):", "             ns.preexist = True", "         vg = self.dataClass()"]]], "op-name": "number_replacer", "result-type": "normal", "occurrence": 10}, "44": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_LtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithLtE", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 207, in parse\nTypeError: unorderable types: NoneType() <= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -135,7 +135,7 @@", " ", "     def parse(self, args):", "         retval = FC3_VolGroup.parse(self, args)", "-        if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "+        if ((getattr(retval, 'reserved_space', None) <= None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "         if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))"]]], "op-name": "replace_IsNot_with_LtE", "result-type": "normal", "occurrence": 2}, "87": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Lt_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtWithLtE", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -135,7 +135,7 @@", " ", "     def parse(self, args):", "         retval = FC3_VolGroup.parse(self, args)", "-        if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "+        if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space <= 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "         if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))"]]], "op-name": "replace_Lt_with_LtE", "result-type": "normal", "occurrence": 0}, "66": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Lt_with_Eq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtWithEq", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 85, in runTest\n    \"volgroup vg.01%s --reserved-percent=50 pv.01\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 211, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nVolume group reserved space percentage must be between 1 and 99.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -137,7 +137,7 @@", "         retval = FC3_VolGroup.parse(self, args)", "         if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "-        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "+        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 == retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))", "         if self.handler.autopart.seen:", "             errorMsg = _(\"The volgroup and autopart commands can't be used at the same time\")"]]], "op-name": "replace_Lt_with_Eq", "result-type": "normal", "occurrence": 1}, "56": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_IsNot", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 160, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nvolgroup must be given a VG name\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -102,7 +102,7 @@", "         vg = self.dataClass()", "         self.set_to_obj(ns, vg)", "         vg.lineno = self.lineno", "-        if (len(ns.name) == 0):", "+        if (len(ns.name) is not 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a VG name')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'volgroup', 'options': extra}"]]], "op-name": "replace_Eq_with_IsNot", "result-type": "normal", "occurrence": 3}, "202": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_In", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIn", "line_number": "<UNKNOWN>", "occurrence": 5}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 172, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -112,7 +112,7 @@", "         elif ((len(ns.partitions) > 1) and ns.preexist):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Members may not be specified for preexisting volgroup')))", "         vg.vgname = ns.name[0]", "-        if (len(ns.partitions) > 0):", "+        if (len(ns.partitions) in 0):", "             vg.physvols = ns.partitions", "         if (vg in self.dataList()):", "             warnings.warn((_('A volgroup with the name %s has already been defined.') % vg.vgname))"]]], "op-name": "replace_Gt_with_In", "result-type": "normal", "occurrence": 5}, "127": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "number_replacer", "20", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 224, "occurrence": 20}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 112, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'volgroup vg.01 --noformat --pesize=1 --useexisting\\n' != 'volgroup vg.01 --noformat --useexisting\\n'\n- volgroup vg.01 --noformat --pesize=1 --useexisting\n?                          -----------\n+ volgroup vg.01 --noformat --useexisting\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -148,7 +148,7 @@", " ", "     def _getParser(self):", "         op = F16_VolGroup._getParser(self)", "-        op.add_argument('--pesize', type=int, default=0, version=F21, help='\\n                        Set the size of the physical extents in KiB.')", "+        op.add_argument('--pesize', type=int, default=1, version=F21, help='\\n                        Set the size of the physical extents in KiB.')", "         return op", " ", " class RHEL7_VolGroup(F21_VolGroup):"]]], "op-name": "number_replacer", "result-type": "normal", "occurrence": 20}, "80": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_GtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 160, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nvolgroup must be given a VG name\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -102,7 +102,7 @@", "         vg = self.dataClass()", "         self.set_to_obj(ns, vg)", "         vg.lineno = self.lineno", "-        if (len(ns.name) == 0):", "+        if (len(ns.name) >= 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a VG name')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'volgroup', 'options': extra}"]]], "op-name": "replace_Eq_with_GtE", "result-type": "normal", "occurrence": 3}, "60": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_GtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithGtE", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 207, in parse\nTypeError: unorderable types: NoneType() >= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -135,7 +135,7 @@", " ", "     def parse(self, args):", "         retval = FC3_VolGroup.parse(self, args)", "-        if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "+        if ((getattr(retval, 'reserved_space', None) >= None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "         if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))"]]], "op-name": "replace_IsNot_with_GtE", "result-type": "normal", "occurrence": 2}, "104": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_Is", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIs", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 163, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nUnexpected arguments to volgroup command: []\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -104,7 +104,7 @@", "         vg.lineno = self.lineno", "         if (len(ns.name) == 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a VG name')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) is 0):", "             mapping = {'command': 'volgroup', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partitions) == 0) and (not ns.preexist)):"]]], "op-name": "replace_Gt_with_Is", "result-type": "normal", "occurrence": 3}, "194": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_NotEq", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -104,7 +104,7 @@", "         vg.lineno = self.lineno", "         if (len(ns.name) == 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a VG name')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) != 0):", "             mapping = {'command': 'volgroup', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partitions) == 0) and (not ns.preexist)):"]]], "op-name": "replace_Gt_with_NotEq", "result-type": "normal", "occurrence": 3}, "150": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithLt", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.volgroup\", line 63, in __str__\n  File \"pykickstart.commands.volgroup\", line 82, in _getArgsAsStr\nTypeError: unorderable types: NoneType() < NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -55,7 +55,7 @@", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "         if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "-        if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "+        if ((self.reserved_percent < None) and (self.reserved_percent > 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)", "         return retval", " "]]], "op-name": "replace_IsNot_with_Lt", "result-type": "normal", "occurrence": 1}, "73": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Lt_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtWithGtE", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 83, in runTest\n    \"volgroup vg.01%s --reserved-space=1000 pv.01\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 208, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nVolume group reserved space must be a positive integer.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -135,7 +135,7 @@", " ", "     def parse(self, args):", "         retval = FC3_VolGroup.parse(self, args)", "-        if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "+        if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space >= 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "         if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))"]]], "op-name": "replace_Lt_with_GtE", "result-type": "normal", "occurrence": 0}, "39": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_Gt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 25, in runTest\n    \"volgroup vg.01 --pesize=70000 pv.01\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 166, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nvolgroup must be given a list of partitions\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -94,7 +94,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if ((len(ns.name) > 1) and (len(ns.partitions) == 0)):", "+        if ((len(ns.name) > 1) and (len(ns.partitions) > 0)):", "             ns.partitions = ns.name[1:]", "             ns.name = [ns.name[0]]", "         if (not ns.format):"]]], "op-name": "replace_Eq_with_Gt", "result-type": "normal", "occurrence": 2}, "46": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Lt_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 83, in runTest\n    \"volgroup vg.01%s --reserved-space=1000 pv.01\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 207, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -135,7 +135,7 @@", " ", "     def parse(self, args):", "         retval = FC3_VolGroup.parse(self, args)", "-        if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "+        if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space not in 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "         if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))"]]], "op-name": "replace_Lt_with_NotIn", "result-type": "normal", "occurrence": 0}, "191": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -53,7 +53,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "-        if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "+        if ((self.reserved_space is not None) and (self.reserved_space != 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "         if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)"]]], "op-name": "replace_Gt_with_NotEq", "result-type": "normal", "occurrence": 0}, "116": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "number_replacer", "9", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 149, "occurrence": 9}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 25, in runTest\n    \"volgroup vg.01 --pesize=70000 pv.01\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 166, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nvolgroup must be given a list of partitions\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -95,7 +95,7 @@", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if ((len(ns.name) > 1) and (len(ns.partitions) == 0)):", "-            ns.partitions = ns.name[1:]", "+            ns.partitions = ns.name[2:]", "             ns.name = [ns.name[0]]", "         if (not ns.format):", "             ns.preexist = True"]]], "op-name": "number_replacer", "result-type": "normal", "occurrence": 9}, "163": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 34, in runTest\n    self.assert_parse(\"volgroup vg.02 pv.01\"))\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\nTypeError: unorderable types: F16_VolGroupData() <= F16_VolGroupData()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -24,7 +24,7 @@", "         return (self.vgname == y.vgname)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self <= y))", " ", "     def _getArgsAsStr(self):", "         retval = ''"]]], "op-name": "replace_Eq_with_LtE", "result-type": "normal", "occurrence": 1}, "100": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_NotIn", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 5}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 172, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -112,7 +112,7 @@", "         elif ((len(ns.partitions) > 1) and ns.preexist):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Members may not be specified for preexisting volgroup')))", "         vg.vgname = ns.name[0]", "-        if (len(ns.partitions) > 0):", "+        if (len(ns.partitions) not in 0):", "             vg.physvols = ns.partitions", "         if (vg in self.dataList()):", "             warnings.warn((_('A volgroup with the name %s has already been defined.') % vg.vgname))"]]], "op-name": "replace_Gt_with_NotIn", "result-type": "normal", "occurrence": 5}, "198": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIn", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 85, in runTest\n    \"volgroup vg.01%s --reserved-percent=50 pv.01\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.volgroup\", line 63, in __str__\n  File \"pykickstart.commands.volgroup\", line 82, in _getArgsAsStr\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -55,7 +55,7 @@", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "         if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "-        if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "+        if ((self.reserved_percent is not None) and (self.reserved_percent in 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)", "         return retval", " "]]], "op-name": "replace_Gt_with_In", "result-type": "normal", "occurrence": 1}, "51": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_NotIn", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 207, in parse\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -135,7 +135,7 @@", " ", "     def parse(self, args):", "         retval = FC3_VolGroup.parse(self, args)", "-        if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "+        if ((getattr(retval, 'reserved_space', None) not in None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "         if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))"]]], "op-name": "replace_IsNot_with_NotIn", "result-type": "normal", "occurrence": 2}, "62": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Lt_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 83, in runTest\n    \"volgroup vg.01%s --reserved-space=1000 pv.01\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 208, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nVolume group reserved space must be a positive integer.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -135,7 +135,7 @@", " ", "     def parse(self, args):", "         retval = FC3_VolGroup.parse(self, args)", "-        if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "+        if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space != 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "         if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))"]]], "op-name": "replace_Lt_with_NotEq", "result-type": "normal", "occurrence": 0}, "68": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 70, in runTest\n    volgroup vg.01 pv.02\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -21,7 +21,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.vgname == y.vgname)", "+        return (self.vgname is y.vgname)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "op-name": "replace_Eq_with_Is", "result-type": "normal", "occurrence": 0}, "98": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_NotIn", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 161, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -104,7 +104,7 @@", "         vg.lineno = self.lineno", "         if (len(ns.name) == 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a VG name')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) not in 0):", "             mapping = {'command': 'volgroup', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partitions) == 0) and (not ns.preexist)):"]]], "op-name": "replace_Gt_with_NotIn", "result-type": "normal", "occurrence": 3}, "109": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "number_replacer", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 80, "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -53,7 +53,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "-        if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "+        if ((self.reserved_space is not None) and (self.reserved_space > 1)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "         if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)"]]], "op-name": "number_replacer", "result-type": "normal", "occurrence": 2}, "99": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_NotIn", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 167, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -109,7 +109,7 @@", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partitions) == 0) and (not ns.preexist)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a list of partitions')))", "-        elif ((len(ns.partitions) > 1) and ns.preexist):", "+        elif ((len(ns.partitions) not in 1) and ns.preexist):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Members may not be specified for preexisting volgroup')))", "         vg.vgname = ns.name[0]", "         if (len(ns.partitions) > 0):"]]], "op-name": "replace_Gt_with_NotIn", "result-type": "normal", "occurrence": 4}, "14": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithIn", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.volgroup\", line 63, in __str__\n  File \"pykickstart.commands.volgroup\", line 80, in _getArgsAsStr\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -53,7 +53,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "-        if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "+        if ((self.reserved_space in None) and (self.reserved_space > 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "         if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)"]]], "op-name": "replace_IsNot_with_In", "result-type": "normal", "occurrence": 0}, "195": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_NotEq", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 168, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nMembers may not be specified for preexisting volgroup\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -109,7 +109,7 @@", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partitions) == 0) and (not ns.preexist)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a list of partitions')))", "-        elif ((len(ns.partitions) > 1) and ns.preexist):", "+        elif ((len(ns.partitions) != 1) and ns.preexist):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Members may not be specified for preexisting volgroup')))", "         vg.vgname = ns.name[0]", "         if (len(ns.partitions) > 0):"]]], "op-name": "replace_Gt_with_NotEq", "result-type": "normal", "occurrence": 4}, "113": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "number_replacer", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 135, "occurrence": 6}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'volgroup vg.01 --noformat --pesize=32769 --useexisting\\n' != 'volgroup vg.01 --noformat --pesize=32768 --useexisting\\n'\n- volgroup vg.01 --noformat --pesize=32769 --useexisting\n?                                        ^\n+ volgroup vg.01 --noformat --pesize=32768 --useexisting\n?                                        ^\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -88,7 +88,7 @@", "         op.add_argument('name', metavar='<name>', nargs='*', version=FC3, help='\\n                        Name given to the volume group. The (which denotes that\\n                        multiple partitions can be listed) lists the identifiers\\n                        to add to the volume group.')", "         op.add_argument('partitions', metavar='<partitions*>', nargs='*', help='\\n                        Physical Volume partitions to be included in this\\n                        Volume Group', version=FC3)", "         op.add_argument('--noformat', dest='format', action='store_false', default=True, version=FC3, help='\\n                        Use an existing volume group. Do not specify partitions\\n                        when using this option.')", "-        op.add_argument('--pesize', type=int, default=32768, version=FC3, help='\\n                        Set the size of the physical extents in KiB.')", "+        op.add_argument('--pesize', type=int, default=32769, version=FC3, help='\\n                        Set the size of the physical extents in KiB.')", "         op.add_argument('--useexisting', dest='preexist', action='store_true', default=False, version=FC3, help='\\n                        Use an existing volume group. Do not specify partitions\\n                        when using this option.')", "         return op", " "]]], "op-name": "number_replacer", "result-type": "normal", "occurrence": 6}, "40": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_Gt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 160, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nvolgroup must be given a VG name\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -102,7 +102,7 @@", "         vg = self.dataClass()", "         self.set_to_obj(ns, vg)", "         vg.lineno = self.lineno", "-        if (len(ns.name) == 0):", "+        if (len(ns.name) > 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a VG name')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'volgroup', 'options': extra}"]]], "op-name": "replace_Eq_with_Gt", "result-type": "normal", "occurrence": 3}, "36": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_Eq", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithEq", "line_number": "<UNKNOWN>", "occurrence": 5}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 25, in runTest\n    \"volgroup vg.01 --pesize=70000 pv.01\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'volgroup vg.01 --pesize=70000\\n' != 'volgroup vg.01 --pesize=70000 pv.01\\n'\n- volgroup vg.01 --pesize=70000\n+ volgroup vg.01 --pesize=70000 pv.01\n?                              ++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -112,7 +112,7 @@", "         elif ((len(ns.partitions) > 1) and ns.preexist):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Members may not be specified for preexisting volgroup')))", "         vg.vgname = ns.name[0]", "-        if (len(ns.partitions) > 0):", "+        if (len(ns.partitions) == 0):", "             vg.physvols = ns.partitions", "         if (vg in self.dataList()):", "             warnings.warn((_('A volgroup with the name %s has already been defined.') % vg.vgname))"]]], "op-name": "replace_Gt_with_Eq", "result-type": "normal", "occurrence": 5}, "52": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_NotIn", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 210, in parse\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -137,7 +137,7 @@", "         retval = FC3_VolGroup.parse(self, args)", "         if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "-        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "+        if ((getattr(retval, 'reserved_percent', None) not in None) and (not (0 < retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))", "         if self.handler.autopart.seen:", "             errorMsg = _(\"The volgroup and autopart commands can't be used at the same time\")"]]], "op-name": "replace_IsNot_with_NotIn", "result-type": "normal", "occurrence": 3}, "137": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_Lt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLt", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 25, in runTest\n    \"volgroup vg.01 --pesize=70000 pv.01\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 166, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nvolgroup must be given a list of partitions\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -94,7 +94,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if ((len(ns.name) > 1) and (len(ns.partitions) == 0)):", "+        if ((len(ns.name) < 1) and (len(ns.partitions) == 0)):", "             ns.partitions = ns.name[1:]", "             ns.name = [ns.name[0]]", "         if (not ns.format):"]]], "op-name": "replace_Gt_with_Lt", "result-type": "normal", "occurrence": 2}, "141": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 34, in runTest\n    self.assert_parse(\"volgroup vg.02 pv.01\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -21,7 +21,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.vgname == y.vgname)", "+        return (self.vgname < y.vgname)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "op-name": "replace_Eq_with_Lt", "result-type": "normal", "occurrence": 0}, "153": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_NotEq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'volgroup vg.01 --noformat --useexisting\\n' != 'volgroup vg.01 --noformat --pesize=32768 --useexisting\\n'\n- volgroup vg.01 --noformat --useexisting\n+ volgroup vg.01 --noformat --pesize=32768 --useexisting\n?                          +++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -30,7 +30,7 @@", "         retval = ''", "         if (not self.format):", "             retval += ' --noformat'", "-        if (self.pesize != 0):", "+        if (self.pesize is 0):", "             retval += (' --pesize=%d' % self.pesize)", "         if self.preexist:", "             retval += ' --useexisting'"]]], "op-name": "replace_NotEq_with_Is", "result-type": "normal", "occurrence": 0}, "33": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_Eq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithEq", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 25, in runTest\n    \"volgroup vg.01 --pesize=70000 pv.01\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 166, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nvolgroup must be given a list of partitions\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -94,7 +94,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if ((len(ns.name) > 1) and (len(ns.partitions) == 0)):", "+        if ((len(ns.name) == 1) and (len(ns.partitions) == 0)):", "             ns.partitions = ns.name[1:]", "             ns.name = [ns.name[0]]", "         if (not ns.format):"]]], "op-name": "replace_Gt_with_Eq", "result-type": "normal", "occurrence": 2}, "84": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithIs", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.volgroup\", line 63, in __str__\n  File \"pykickstart.commands.volgroup\", line 82, in _getArgsAsStr\nTypeError: unorderable types: NoneType() > int()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -55,7 +55,7 @@", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "         if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "-        if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "+        if ((self.reserved_percent is None) and (self.reserved_percent > 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)", "         return retval", " "]]], "op-name": "replace_IsNot_with_Is", "result-type": "normal", "occurrence": 1}, "206": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Lt_with_Is", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtWithIs", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 85, in runTest\n    \"volgroup vg.01%s --reserved-percent=50 pv.01\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 211, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nVolume group reserved space percentage must be between 1 and 99.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -137,7 +137,7 @@", "         retval = FC3_VolGroup.parse(self, args)", "         if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "-        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "+        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent is 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))", "         if self.handler.autopart.seen:", "             errorMsg = _(\"The volgroup and autopart commands can't be used at the same time\")"]]], "op-name": "replace_Lt_with_Is", "result-type": "normal", "occurrence": 2}, "85": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_Is", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithIs", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 207, in parse\nTypeError: unorderable types: NoneType() < int()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -135,7 +135,7 @@", " ", "     def parse(self, args):", "         retval = FC3_VolGroup.parse(self, args)", "-        if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "+        if ((getattr(retval, 'reserved_space', None) is None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "         if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))"]]], "op-name": "replace_IsNot_with_Is", "result-type": "normal", "occurrence": 2}, "186": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_NotEq", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 160, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nvolgroup must be given a VG name\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -102,7 +102,7 @@", "         vg = self.dataClass()", "         self.set_to_obj(ns, vg)", "         vg.lineno = self.lineno", "-        if (len(ns.name) == 0):", "+        if (len(ns.name) != 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a VG name')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'volgroup', 'options': extra}"]]], "op-name": "replace_Eq_with_NotEq", "result-type": "normal", "occurrence": 3}, "179": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_LtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLtE", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 25, in runTest\n    \"volgroup vg.01 --pesize=70000 pv.01\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 166, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nvolgroup must be given a list of partitions\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -94,7 +94,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if ((len(ns.name) > 1) and (len(ns.partitions) == 0)):", "+        if ((len(ns.name) <= 1) and (len(ns.partitions) == 0)):", "             ns.partitions = ns.name[1:]", "             ns.name = [ns.name[0]]", "         if (not ns.format):"]]], "op-name": "replace_Gt_with_LtE", "result-type": "normal", "occurrence": 2}, "55": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_IsNot", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 25, in runTest\n    \"volgroup vg.01 --pesize=70000 pv.01\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 166, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nvolgroup must be given a list of partitions\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -94,7 +94,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if ((len(ns.name) > 1) and (len(ns.partitions) == 0)):", "+        if ((len(ns.name) > 1) and (len(ns.partitions) is not 0)):", "             ns.partitions = ns.name[1:]", "             ns.name = [ns.name[0]]", "         if (not ns.format):"]]], "op-name": "replace_Eq_with_IsNot", "result-type": "normal", "occurrence": 2}, "196": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_NotEq", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 5}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -112,7 +112,7 @@", "         elif ((len(ns.partitions) > 1) and ns.preexist):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Members may not be specified for preexisting volgroup')))", "         vg.vgname = ns.name[0]", "-        if (len(ns.partitions) > 0):", "+        if (len(ns.partitions) != 0):", "             vg.physvols = ns.partitions", "         if (vg in self.dataList()):", "             warnings.warn((_('A volgroup with the name %s has already been defined.') % vg.vgname))"]]], "op-name": "replace_Gt_with_NotEq", "result-type": "normal", "occurrence": 5}, "187": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_NotEq", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 25, in runTest\n    \"volgroup vg.01 --pesize=70000 pv.01\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 166, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nvolgroup must be given a list of partitions\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -107,7 +107,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'volgroup', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        if ((len(ns.partitions) == 0) and (not ns.preexist)):", "+        if ((len(ns.partitions) != 0) and (not ns.preexist)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a list of partitions')))", "         elif ((len(ns.partitions) > 1) and ns.preexist):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Members may not be specified for preexisting volgroup')))"]]], "op-name": "replace_Eq_with_NotEq", "result-type": "normal", "occurrence": 4}, "138": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_Lt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLt", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 48, in runTest\n    self.assert_parse_error(\"volgroup vg.01 --useexisting pv.01 pv.02\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -104,7 +104,7 @@", "         vg.lineno = self.lineno", "         if (len(ns.name) == 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a VG name')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) < 0):", "             mapping = {'command': 'volgroup', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partitions) == 0) and (not ns.preexist)):"]]], "op-name": "replace_Gt_with_Lt", "result-type": "normal", "occurrence": 3}, "41": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_Gt", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 25, in runTest\n    \"volgroup vg.01 --pesize=70000 pv.01\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 166, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nvolgroup must be given a list of partitions\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -107,7 +107,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'volgroup', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        if ((len(ns.partitions) == 0) and (not ns.preexist)):", "+        if ((len(ns.partitions) > 0) and (not ns.preexist)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a list of partitions')))", "         elif ((len(ns.partitions) > 1) and ns.preexist):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Members may not be specified for preexisting volgroup')))"]]], "op-name": "replace_Eq_with_Gt", "result-type": "normal", "occurrence": 4}, "193": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_NotEq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 42, in runTest\n    self.assert_parse_error(\"volgroup\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 150, in parse\nIndexError: list index out of range\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -94,7 +94,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if ((len(ns.name) > 1) and (len(ns.partitions) == 0)):", "+        if ((len(ns.name) != 1) and (len(ns.partitions) == 0)):", "             ns.partitions = ns.name[1:]", "             ns.name = [ns.name[0]]", "         if (not ns.format):"]]], "op-name": "replace_Gt_with_NotEq", "result-type": "normal", "occurrence": 2}, "47": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Lt_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 85, in runTest\n    \"volgroup vg.01%s --reserved-percent=50 pv.01\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 210, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -137,7 +137,7 @@", "         retval = FC3_VolGroup.parse(self, args)", "         if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "-        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "+        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 not in retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))", "         if self.handler.autopart.seen:", "             errorMsg = _(\"The volgroup and autopart commands can't be used at the same time\")"]]], "op-name": "replace_Lt_with_NotIn", "result-type": "normal", "occurrence": 1}, "200": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_In", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIn", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 161, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -104,7 +104,7 @@", "         vg.lineno = self.lineno", "         if (len(ns.name) == 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a VG name')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) in 0):", "             mapping = {'command': 'volgroup', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partitions) == 0) and (not ns.preexist)):"]]], "op-name": "replace_Gt_with_In", "result-type": "normal", "occurrence": 3}, "15": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithIn", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.volgroup\", line 63, in __str__\n  File \"pykickstart.commands.volgroup\", line 82, in _getArgsAsStr\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -55,7 +55,7 @@", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "         if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "-        if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "+        if ((self.reserved_percent in None) and (self.reserved_percent > 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)", "         return retval", " "]]], "op-name": "replace_IsNot_with_In", "result-type": "normal", "occurrence": 1}, "103": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_Is", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIs", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 25, in runTest\n    \"volgroup vg.01 --pesize=70000 pv.01\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 166, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nvolgroup must be given a list of partitions\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -94,7 +94,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if ((len(ns.name) > 1) and (len(ns.partitions) == 0)):", "+        if ((len(ns.name) is 1) and (len(ns.partitions) == 0)):", "             ns.partitions = ns.name[1:]", "             ns.name = [ns.name[0]]", "         if (not ns.format):"]]], "op-name": "replace_Gt_with_Is", "result-type": "normal", "occurrence": 2}, "49": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.volgroup\", line 63, in __str__\n  File \"pykickstart.commands.volgroup\", line 80, in _getArgsAsStr\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -53,7 +53,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "-        if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "+        if ((self.reserved_space not in None) and (self.reserved_space > 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "         if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)"]]], "op-name": "replace_IsNot_with_NotIn", "result-type": "normal", "occurrence": 0}, "128": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_NotEq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.volgroup\", line 63, in __str__\n  File \"pykickstart.commands.volgroup\", line 79, in _getArgsAsStr\n  File \"pykickstart.commands.volgroup\", line 53, in _getArgsAsStr\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -30,7 +30,7 @@", "         retval = ''", "         if (not self.format):", "             retval += ' --noformat'", "-        if (self.pesize != 0):", "+        if (self.pesize not in 0):", "             retval += (' --pesize=%d' % self.pesize)", "         if self.preexist:", "             retval += ' --useexisting'"]]], "op-name": "replace_NotEq_with_NotIn", "result-type": "normal", "occurrence": 0}, "197": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIn", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 83, in runTest\n    \"volgroup vg.01%s --reserved-space=1000 pv.01\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.volgroup\", line 63, in __str__\n  File \"pykickstart.commands.volgroup\", line 80, in _getArgsAsStr\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -53,7 +53,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "-        if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "+        if ((self.reserved_space is not None) and (self.reserved_space in 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "         if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)"]]], "op-name": "replace_Gt_with_In", "result-type": "normal", "occurrence": 0}, "26": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "boolean_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 36, "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -14,7 +14,7 @@", "         BaseData.__init__(self, *args, **kwargs)", "         self.format = kwargs.get('format', True)", "         self.pesize = kwargs.get('pesize', 32768)", "-        self.preexist = kwargs.get('preexist', False)", "+        self.preexist = kwargs.get('preexist', True)", "         self.vgname = kwargs.get('vgname', '')", "         self.physvols = kwargs.get('physvols', [])", " "]]], "op-name": "boolean_replacer", "result-type": "normal", "occurrence": 1}, "126": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "number_replacer", "19", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 210, "occurrence": 19}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 94, in runTest\n    self.assert_parse_error(\"volgroup vg.01 pv.01 --reserved-percent=100\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -137,7 +137,7 @@", "         retval = FC3_VolGroup.parse(self, args)", "         if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "-        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "+        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 101))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))", "         if self.handler.autopart.seen:", "             errorMsg = _(\"The volgroup and autopart commands can't be used at the same time\")"]]], "op-name": "number_replacer", "result-type": "normal", "occurrence": 19}, "65": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Lt_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtWithEq", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 92, in runTest\n    self.assert_parse_error(\"volgroup vg.01 pv.01 --reserved-space=-1\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -135,7 +135,7 @@", " ", "     def parse(self, args):", "         retval = FC3_VolGroup.parse(self, args)", "-        if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "+        if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space == 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "         if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))"]]], "op-name": "replace_Lt_with_Eq", "result-type": "normal", "occurrence": 0}, "57": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_IsNot", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 25, in runTest\n    \"volgroup vg.01 --pesize=70000 pv.01\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 166, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nvolgroup must be given a list of partitions\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -107,7 +107,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'volgroup', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        if ((len(ns.partitions) == 0) and (not ns.preexist)):", "+        if ((len(ns.partitions) is not 0) and (not ns.preexist)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a list of partitions')))", "         elif ((len(ns.partitions) > 1) and ns.preexist):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Members may not be specified for preexisting volgroup')))"]]], "op-name": "replace_Eq_with_IsNot", "result-type": "normal", "occurrence": 4}, "132": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Lt_with_Gt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtWithGt", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 85, in runTest\n    \"volgroup vg.01%s --reserved-percent=50 pv.01\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 211, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nVolume group reserved space percentage must be between 1 and 99.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -137,7 +137,7 @@", "         retval = FC3_VolGroup.parse(self, args)", "         if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "-        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "+        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent > 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))", "         if self.handler.autopart.seen:", "             errorMsg = _(\"The volgroup and autopart commands can't be used at the same time\")"]]], "op-name": "replace_Lt_with_Gt", "result-type": "normal", "occurrence": 2}, "5": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -53,7 +53,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "-        if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "+        if ((self.reserved_space != None) and (self.reserved_space > 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "         if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)"]]], "op-name": "replace_IsNot_with_NotEq", "result-type": "normal", "occurrence": 0}, "6": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -55,7 +55,7 @@", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "         if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "-        if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "+        if ((self.reserved_percent != None) and (self.reserved_percent > 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)", "         return retval", " "]]], "op-name": "replace_IsNot_with_NotEq", "result-type": "normal", "occurrence": 1}, "156": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_In_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithEq", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nAttributeError: 'list' object has no attribute 'vgname'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 66, in runTest\n    volgroup vg.02 pv.01\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \nvolgroup vg.01 pv.01\nvolgroup vg.02 pv.01: 'list' object has no attribute 'vgname'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -114,7 +114,7 @@", "         vg.vgname = ns.name[0]", "         if (len(ns.partitions) > 0):", "             vg.physvols = ns.partitions", "-        if (vg in self.dataList()):", "+        if (vg == self.dataList()):", "             warnings.warn((_('A volgroup with the name %s has already been defined.') % vg.vgname))", "         return vg", " "]]], "op-name": "replace_In_with_Eq", "result-type": "normal", "occurrence": 0}, "77": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nUserWarning: A volgroup with the name vg.02 has already been defined.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 66, in runTest\n    volgroup vg.02 pv.01\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \nvolgroup vg.01 pv.01\nvolgroup vg.02 pv.01: A volgroup with the name vg.02 has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -21,7 +21,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.vgname == y.vgname)", "+        return (self.vgname >= y.vgname)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "op-name": "replace_Eq_with_GtE", "result-type": "normal", "occurrence": 0}, "172": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_GtE", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithGtE", "line_number": "<UNKNOWN>", "occurrence": 5}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -112,7 +112,7 @@", "         elif ((len(ns.partitions) > 1) and ns.preexist):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Members may not be specified for preexisting volgroup')))", "         vg.vgname = ns.name[0]", "-        if (len(ns.partitions) > 0):", "+        if (len(ns.partitions) >= 0):", "             vg.physvols = ns.partitions", "         if (vg in self.dataList()):", "             warnings.warn((_('A volgroup with the name %s has already been defined.') % vg.vgname))"]]], "op-name": "replace_Gt_with_GtE", "result-type": "normal", "occurrence": 5}, "81": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_GtE", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 25, in runTest\n    \"volgroup vg.01 --pesize=70000 pv.01\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 166, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nvolgroup must be given a list of partitions\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -107,7 +107,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'volgroup', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        if ((len(ns.partitions) == 0) and (not ns.preexist)):", "+        if ((len(ns.partitions) >= 0) and (not ns.preexist)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a list of partitions')))", "         elif ((len(ns.partitions) > 1) and ns.preexist):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Members may not be specified for preexisting volgroup')))"]]], "op-name": "replace_Eq_with_GtE", "result-type": "normal", "occurrence": 4}, "1": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithEq", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.volgroup\", line 63, in __str__\n  File \"pykickstart.commands.volgroup\", line 80, in _getArgsAsStr\nTypeError: unorderable types: NoneType() > int()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -53,7 +53,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "-        if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "+        if ((self.reserved_space == None) and (self.reserved_space > 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "         if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)"]]], "op-name": "replace_IsNot_with_Eq", "result-type": "normal", "occurrence": 0}, "136": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLt", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 85, in runTest\n    \"volgroup vg.01%s --reserved-percent=50 pv.01\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'volgroup vg.01 --pesize=32768 pv.01\\n' != 'volgroup vg.01 --pesize=32768 --reserved-percent=50 pv.01\\n'\n- volgroup vg.01 --pesize=32768 pv.01\n+ volgroup vg.01 --pesize=32768 --reserved-percent=50 pv.01\n?                               ++++++++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -55,7 +55,7 @@", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "         if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "-        if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "+        if ((self.reserved_percent is not None) and (self.reserved_percent < 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)", "         return retval", " "]]], "op-name": "replace_Gt_with_Lt", "result-type": "normal", "occurrence": 1}, "192": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -55,7 +55,7 @@", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "         if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "-        if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "+        if ((self.reserved_percent is not None) and (self.reserved_percent != 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)", "         return retval", " "]]], "op-name": "replace_Gt_with_NotEq", "result-type": "normal", "occurrence": 1}, "38": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 34, in runTest\n    self.assert_parse(\"volgroup vg.02 pv.01\"))\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\nTypeError: unorderable types: F16_VolGroupData() > F16_VolGroupData()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -24,7 +24,7 @@", "         return (self.vgname == y.vgname)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self > y))", " ", "     def _getArgsAsStr(self):", "         retval = ''"]]], "op-name": "replace_Eq_with_Gt", "result-type": "normal", "occurrence": 1}, "134": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_NotEq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -30,7 +30,7 @@", "         retval = ''", "         if (not self.format):", "             retval += ' --noformat'", "-        if (self.pesize != 0):", "+        if (self.pesize > 0):", "             retval += (' --pesize=%d' % self.pesize)", "         if self.preexist:", "             retval += ' --useexisting'"]]], "op-name": "replace_NotEq_with_Gt", "result-type": "normal", "occurrence": 0}, "91": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 34, in runTest\n    self.assert_parse(\"volgroup vg.02 pv.01\"))\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\nTypeError: argument of type 'F16_VolGroupData' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -24,7 +24,7 @@", "         return (self.vgname == y.vgname)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self in y))", " ", "     def _getArgsAsStr(self):", "         retval = ''"]]], "op-name": "replace_Eq_with_In", "result-type": "normal", "occurrence": 1}, "142": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 34, in runTest\n    self.assert_parse(\"volgroup vg.02 pv.01\"))\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\nTypeError: unorderable types: F16_VolGroupData() < F16_VolGroupData()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -24,7 +24,7 @@", "         return (self.vgname == y.vgname)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self < y))", " ", "     def _getArgsAsStr(self):", "         retval = ''"]]], "op-name": "replace_Eq_with_Lt", "result-type": "normal", "occurrence": 1}, "161": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_Gt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithGt", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 210, in parse\nTypeError: unorderable types: NoneType() > NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -137,7 +137,7 @@", "         retval = FC3_VolGroup.parse(self, args)", "         if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "-        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "+        if ((getattr(retval, 'reserved_percent', None) > None) and (not (0 < retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))", "         if self.handler.autopart.seen:", "             errorMsg = _(\"The volgroup and autopart commands can't be used at the same time\")"]]], "op-name": "replace_IsNot_with_Gt", "result-type": "normal", "occurrence": 3}, "120": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "number_replacer", "13", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 165, "occurrence": 13}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 25, in runTest\n    \"volgroup vg.01 --pesize=70000 pv.01\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 166, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nvolgroup must be given a list of partitions\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -107,7 +107,7 @@", "         elif (len(extra) > 0):", "             mapping = {'command': 'volgroup', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "-        if ((len(ns.partitions) == 0) and (not ns.preexist)):", "+        if ((len(ns.partitions) == 1) and (not ns.preexist)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a list of partitions')))", "         elif ((len(ns.partitions) > 1) and ns.preexist):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Members may not be specified for preexisting volgroup')))"]]], "op-name": "number_replacer", "result-type": "normal", "occurrence": 13}, "21": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_IsNot", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIsNot", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -104,7 +104,7 @@", "         vg.lineno = self.lineno", "         if (len(ns.name) == 0):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a VG name')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) is not 0):", "             mapping = {'command': 'volgroup', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partitions) == 0) and (not ns.preexist)):"]]], "op-name": "replace_Gt_with_IsNot", "result-type": "normal", "occurrence": 3}, "167": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithGtE", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -53,7 +53,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "-        if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "+        if ((self.reserved_space is not None) and (self.reserved_space >= 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "         if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)"]]], "op-name": "replace_Gt_with_GtE", "result-type": "normal", "occurrence": 0}, "97": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_NotIn", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 148, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -94,7 +94,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if ((len(ns.name) > 1) and (len(ns.partitions) == 0)):", "+        if ((len(ns.name) not in 1) and (len(ns.partitions) == 0)):", "             ns.partitions = ns.name[1:]", "             ns.name = [ns.name[0]]", "         if (not ns.format):"]]], "op-name": "replace_Gt_with_NotIn", "result-type": "normal", "occurrence": 2}, "48": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Lt_with_NotIn", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtWithNotIn", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 85, in runTest\n    \"volgroup vg.01%s --reserved-percent=50 pv.01\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 210, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -137,7 +137,7 @@", "         retval = FC3_VolGroup.parse(self, args)", "         if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "-        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "+        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent not in 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))", "         if self.handler.autopart.seen:", "             errorMsg = _(\"The volgroup and autopart commands can't be used at the same time\")"]]], "op-name": "replace_Lt_with_NotIn", "result-type": "normal", "occurrence": 2}, "19": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_IsNot", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIsNot", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -55,7 +55,7 @@", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "         if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "-        if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "+        if ((self.reserved_percent is not None) and (self.reserved_percent is not 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)", "         return retval", " "]]], "op-name": "replace_Gt_with_IsNot", "result-type": "normal", "occurrence": 1}, "43": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithLtE", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.volgroup\", line 63, in __str__\n  File \"pykickstart.commands.volgroup\", line 82, in _getArgsAsStr\nTypeError: unorderable types: NoneType() <= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -55,7 +55,7 @@", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "         if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "-        if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "+        if ((self.reserved_percent <= None) and (self.reserved_percent > 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)", "         return retval", " "]]], "op-name": "replace_IsNot_with_LtE", "result-type": "normal", "occurrence": 1}, "158": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithGt", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.volgroup\", line 63, in __str__\n  File \"pykickstart.commands.volgroup\", line 80, in _getArgsAsStr\nTypeError: unorderable types: NoneType() > NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -53,7 +53,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "-        if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "+        if ((self.reserved_space > None) and (self.reserved_space > 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "         if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)"]]], "op-name": "replace_IsNot_with_Gt", "result-type": "normal", "occurrence": 0}, "124": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "number_replacer", "17", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 207, "occurrence": 17}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -135,7 +135,7 @@", " ", "     def parse(self, args):", "         retval = FC3_VolGroup.parse(self, args)", "-        if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "+        if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 1)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "         if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))"]]], "op-name": "number_replacer", "result-type": "normal", "occurrence": 17}, "130": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Lt_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtWithGt", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 83, in runTest\n    \"volgroup vg.01%s --reserved-space=1000 pv.01\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 208, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nVolume group reserved space must be a positive integer.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -135,7 +135,7 @@", " ", "     def parse(self, args):", "         retval = FC3_VolGroup.parse(self, args)", "-        if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "+        if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space > 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "         if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))"]]], "op-name": "replace_Lt_with_Gt", "result-type": "normal", "occurrence": 0}, "146": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Lt_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtWithIsNot", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 83, in runTest\n    \"volgroup vg.01%s --reserved-space=1000 pv.01\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 208, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nVolume group reserved space must be a positive integer.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -135,7 +135,7 @@", " ", "     def parse(self, args):", "         retval = FC3_VolGroup.parse(self, args)", "-        if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "+        if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space is not 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "         if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))"]]], "op-name": "replace_Lt_with_IsNot", "result-type": "normal", "occurrence": 0}, "7": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_NotEq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -135,7 +135,7 @@", " ", "     def parse(self, args):", "         retval = FC3_VolGroup.parse(self, args)", "-        if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "+        if ((getattr(retval, 'reserved_space', None) != None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "         if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))"]]], "op-name": "replace_IsNot_with_NotEq", "result-type": "normal", "occurrence": 2}, "185": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_NotEq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 25, in runTest\n    \"volgroup vg.01 --pesize=70000 pv.01\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 166, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nvolgroup must be given a list of partitions\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -94,7 +94,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if ((len(ns.name) > 1) and (len(ns.partitions) == 0)):", "+        if ((len(ns.name) > 1) and (len(ns.partitions) != 0)):", "             ns.partitions = ns.name[1:]", "             ns.name = [ns.name[0]]", "         if (not ns.format):"]]], "op-name": "replace_Eq_with_NotEq", "result-type": "normal", "occurrence": 2}, "110": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "number_replacer", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 82, "occurrence": 3}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -55,7 +55,7 @@", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "         if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "-        if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "+        if ((self.reserved_percent is not None) and (self.reserved_percent > 1)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)", "         return retval", " "]]], "op-name": "number_replacer", "result-type": "normal", "occurrence": 3}, "78": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 34, in runTest\n    self.assert_parse(\"volgroup vg.02 pv.01\"))\n  File \"pykickstart.commands.volgroup\", line 47, in __ne__\nTypeError: unorderable types: F16_VolGroupData() >= F16_VolGroupData()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -24,7 +24,7 @@", "         return (self.vgname == y.vgname)", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self >= y))", " ", "     def _getArgsAsStr(self):", "         retval = ''"]]], "op-name": "replace_Eq_with_GtE", "result-type": "normal", "occurrence": 1}, "90": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -21,7 +21,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.vgname == y.vgname)", "+        return (self.vgname in y.vgname)", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]], "op-name": "replace_Eq_with_In", "result-type": "normal", "occurrence": 0}, "174": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_In_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithIs", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 70, in runTest\n    volgroup vg.01 pv.02\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -114,7 +114,7 @@", "         vg.vgname = ns.name[0]", "         if (len(ns.partitions) > 0):", "             vg.physvols = ns.partitions", "-        if (vg in self.dataList()):", "+        if (vg is self.dataList()):", "             warnings.warn((_('A volgroup with the name %s has already been defined.') % vg.vgname))", "         return vg", " "]]], "op-name": "replace_In_with_Is", "result-type": "normal", "occurrence": 0}, "171": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_GtE", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithGtE", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -109,7 +109,7 @@", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partitions) == 0) and (not ns.preexist)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a list of partitions')))", "-        elif ((len(ns.partitions) > 1) and ns.preexist):", "+        elif ((len(ns.partitions) >= 1) and ns.preexist):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Members may not be specified for preexisting volgroup')))", "         vg.vgname = ns.name[0]", "         if (len(ns.partitions) > 0):"]]], "op-name": "replace_Gt_with_GtE", "result-type": "normal", "occurrence": 4}, "24": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_In_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithIsNot", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 177, in parse\nUserWarning: A volgroup with the name vg.01 has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -114,7 +114,7 @@", "         vg.vgname = ns.name[0]", "         if (len(ns.partitions) > 0):", "             vg.physvols = ns.partitions", "-        if (vg in self.dataList()):", "+        if (vg is not self.dataList()):", "             warnings.warn((_('A volgroup with the name %s has already been defined.') % vg.vgname))", "         return vg", " "]]], "op-name": "replace_In_with_IsNot", "result-type": "normal", "occurrence": 0}, "105": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_Is", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIs", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -109,7 +109,7 @@", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partitions) == 0) and (not ns.preexist)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a list of partitions')))", "-        elif ((len(ns.partitions) > 1) and ns.preexist):", "+        elif ((len(ns.partitions) is 1) and ns.preexist):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Members may not be specified for preexisting volgroup')))", "         vg.vgname = ns.name[0]", "         if (len(ns.partitions) > 0):"]]], "op-name": "replace_Gt_with_Is", "result-type": "normal", "occurrence": 4}, "22": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_IsNot", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIsNot", "line_number": "<UNKNOWN>", "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 168, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nMembers may not be specified for preexisting volgroup\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -109,7 +109,7 @@", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         if ((len(ns.partitions) == 0) and (not ns.preexist)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('volgroup must be given a list of partitions')))", "-        elif ((len(ns.partitions) > 1) and ns.preexist):", "+        elif ((len(ns.partitions) is not 1) and ns.preexist):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('Members may not be specified for preexisting volgroup')))", "         vg.vgname = ns.name[0]", "         if (len(ns.partitions) > 0):"]]], "op-name": "replace_Gt_with_IsNot", "result-type": "normal", "occurrence": 4}, "152": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_Lt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithLt", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 210, in parse\nTypeError: unorderable types: NoneType() < NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -137,7 +137,7 @@", "         retval = FC3_VolGroup.parse(self, args)", "         if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "-        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "+        if ((getattr(retval, 'reserved_percent', None) < None) and (not (0 < retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))", "         if self.handler.autopart.seen:", "             errorMsg = _(\"The volgroup and autopart commands can't be used at the same time\")"]]], "op-name": "replace_IsNot_with_Lt", "result-type": "normal", "occurrence": 3}, "8": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_NotEq", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithNotEq", "line_number": "<UNKNOWN>", "occurrence": 3}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -137,7 +137,7 @@", "         retval = FC3_VolGroup.parse(self, args)", "         if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "-        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "+        if ((getattr(retval, 'reserved_percent', None) != None) and (not (0 < retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))", "         if self.handler.autopart.seen:", "             errorMsg = _(\"The volgroup and autopart commands can't be used at the same time\")"]]], "op-name": "replace_IsNot_with_NotEq", "result-type": "normal", "occurrence": 3}, "88": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Lt_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtWithLtE", "line_number": "<UNKNOWN>", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 93, in runTest\n    self.assert_parse_error(\"volgroup vg.01 pv.01 --reserved-percent=0\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -137,7 +137,7 @@", "         retval = FC3_VolGroup.parse(self, args)", "         if ((getattr(retval, 'reserved_space', None) is not None) and (retval.reserved_space < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space must be a positive integer.'))", "-        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 < retval.reserved_percent < 100))):", "+        if ((getattr(retval, 'reserved_percent', None) is not None) and (not (0 <= retval.reserved_percent < 100))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg='Volume group reserved space percentage must be between 1 and 99.'))", "         if self.handler.autopart.seen:", "             errorMsg = _(\"The volgroup and autopart commands can't be used at the same time\")"]]], "op-name": "replace_Lt_with_LtE", "result-type": "normal", "occurrence": 1}, "42": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_IsNot_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithLtE", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.volgroup\", line 63, in __str__\n  File \"pykickstart.commands.volgroup\", line 80, in _getArgsAsStr\nTypeError: unorderable types: NoneType() <= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -53,7 +53,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "-        if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "+        if ((self.reserved_space <= None) and (self.reserved_space > 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "         if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)"]]], "op-name": "replace_IsNot_with_LtE", "result-type": "normal", "occurrence": 0}, "92": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Eq_with_In", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 25, in runTest\n    \"volgroup vg.01 --pesize=70000 pv.01\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.volgroup\", line 204, in parse\n  File \"pykickstart.commands.volgroup\", line 148, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -94,7 +94,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if ((len(ns.name) > 1) and (len(ns.partitions) == 0)):", "+        if ((len(ns.name) > 1) and (len(ns.partitions) in 0)):", "             ns.partitions = ns.name[1:]", "             ns.name = [ns.name[0]]", "         if (not ns.format):"]]], "op-name": "replace_Eq_with_In", "result-type": "normal", "occurrence": 2}, "135": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_Gt_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLt", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 83, in runTest\n    \"volgroup vg.01%s --reserved-space=1000 pv.01\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'volgroup vg.01 --pesize=32768 pv.01\\n' != 'volgroup vg.01 --pesize=32768 --reserved-space=1000 pv.01\\n'\n- volgroup vg.01 --pesize=32768 pv.01\n+ volgroup vg.01 --pesize=32768 --reserved-space=1000 pv.01\n?                               ++++++++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -53,7 +53,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = FC3_VolGroupData._getArgsAsStr(self)", "-        if ((self.reserved_space is not None) and (self.reserved_space > 0)):", "+        if ((self.reserved_space is not None) and (self.reserved_space < 0)):", "             retval += (' --reserved-space=%d' % self.reserved_space)", "         if ((self.reserved_percent is not None) and (self.reserved_percent > 0)):", "             retval += (' --reserved-percent=%d' % self.reserved_percent)"]]], "op-name": "replace_Gt_with_Lt", "result-type": "normal", "occurrence": 0}, "29": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "boolean_replacer", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 139, "occurrence": 4}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 25, in runTest\n    \"volgroup vg.01 --pesize=70000 pv.01\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'volgroup vg.01 --pesize=70000 --useexisting\\n' != 'volgroup vg.01 --pesize=70000 pv.01\\n'\n- volgroup vg.01 --pesize=70000 --useexisting\n?                               ^^^^^^^^^^^^^\n+ volgroup vg.01 --pesize=70000 pv.01\n?                               ^^^^^\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -89,7 +89,7 @@", "         op.add_argument('partitions', metavar='<partitions*>', nargs='*', help='\\n                        Physical Volume partitions to be included in this\\n                        Volume Group', version=FC3)", "         op.add_argument('--noformat', dest='format', action='store_false', default=True, version=FC3, help='\\n                        Use an existing volume group. Do not specify partitions\\n                        when using this option.')", "         op.add_argument('--pesize', type=int, default=32768, version=FC3, help='\\n                        Set the size of the physical extents in KiB.')", "-        op.add_argument('--useexisting', dest='preexist', action='store_true', default=False, version=FC3, help='\\n                        Use an existing volume group. Do not specify partitions\\n                        when using this option.')", "+        op.add_argument('--useexisting', dest='preexist', action='store_true', default=True, version=FC3, help='\\n                        Use an existing volume group. Do not specify partitions\\n                        when using this option.')", "         return op", " ", "     def parse(self, args):"]]], "op-name": "boolean_replacer", "result-type": "normal", "occurrence": 4}, "28": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "boolean_replacer", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 132, "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 21, in runTest\n    \"volgroup vg.01%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'volgroup vg.01 --noformat --pesize=32768 --useexisting\\n' != 'volgroup vg.01 --pesize=32768 --useexisting\\n'\n- volgroup vg.01 --noformat --pesize=32768 --useexisting\n?               -----------\n+ volgroup vg.01 --pesize=32768 --useexisting\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -87,7 +87,7 @@", "         op = KSOptionParser(prog='volgroup', description='\\n                            Creates a Logical Volume Management (LVM) group.\\n                            ', epilog='\\n                            Create the partition first, create the logical\\n                            volume group, and then create the logical volume.\\n                            For example::\\n\\n                                part pv.01 --size 3000\\n                                volgroup myvg pv.01\\n                                logvol / --vgname=myvg --size=2000 --name=rootvol\\n                            ', version=FC3)", "         op.add_argument('name', metavar='<name>', nargs='*', version=FC3, help='\\n                        Name given to the volume group. The (which denotes that\\n                        multiple partitions can be listed) lists the identifiers\\n                        to add to the volume group.')", "         op.add_argument('partitions', metavar='<partitions*>', nargs='*', help='\\n                        Physical Volume partitions to be included in this\\n                        Volume Group', version=FC3)", "-        op.add_argument('--noformat', dest='format', action='store_false', default=True, version=FC3, help='\\n                        Use an existing volume group. Do not specify partitions\\n                        when using this option.')", "+        op.add_argument('--noformat', dest='format', action='store_false', default=False, version=FC3, help='\\n                        Use an existing volume group. Do not specify partitions\\n                        when using this option.')", "         op.add_argument('--pesize', type=int, default=32768, version=FC3, help='\\n                        Set the size of the physical extents in KiB.')", "         op.add_argument('--useexisting', dest='preexist', action='store_true', default=False, version=FC3, help='\\n                        Use an existing volume group. Do not specify partitions\\n                        when using this option.')", "         return op"]]], "op-name": "boolean_replacer", "result-type": "normal", "occurrence": 3}, "129": {"module-name": "pykickstart.commands.volgroup", "command": ["cosmic-ray", "worker", "pykickstart.commands.volgroup", "replace_NotEq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "result-data": [{"operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn", "line_number": "<UNKNOWN>", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 74, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/volgroup.py\", line 18, in runTest\n    \"volgroup vg.01 --noformat%s --useexisting\\n\" % def_pesize_str)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.volgroup\", line 63, in __str__\n  File \"pykickstart.commands.volgroup\", line 79, in _getArgsAsStr\n  File \"pykickstart.commands.volgroup\", line 53, in _getArgsAsStr\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/volgroup.py", "@@ -30,7 +30,7 @@", "         retval = ''", "         if (not self.format):", "             retval += ' --noformat'", "-        if (self.pesize != 0):", "+        if (self.pesize in 0):", "             retval += (' --pesize=%d' % self.pesize)", "         if self.preexist:", "             retval += ' --useexisting'"]]], "op-name": "replace_NotEq_with_In", "result-type": "normal", "occurrence": 0}}, "_default": {}, "work-parameters": {"1": {"test-args": ["-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/volgroup.py"], "timeout": 33.163109999999996, "test-runner": "nose"}}}