{"work-items": {"195": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_IsNot_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_IsNot_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 825, in parse\nTypeError: unorderable types: NoneType() >= NoneType()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 251, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: unorderable types: NoneType() >= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -554,7 +554,7 @@", "     def parse(self, args):", "         retval = F21_Network.parse(self, args)", "         error_message = validate_network_interface_name(retval.interfacename)", "-        if (error_message is not None):", "+        if (error_message >= None):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=error_message))", "         if retval.bridgeopts:", "             if (not retval.bridgeslaves):"]]]}, "215": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_NotIn", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 3, "result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 826, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nWhen using the <prefix>.<vlan id> interface name notation, <prefix> can't be equal to 'vlan'.\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 263, in runTest\n    self.assert_parse(\"network --interfacename=abc.123\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: The following problem occurred on line 0 of the kickstart file:\n\nWhen using the <prefix>.<vlan id> interface name notation, <prefix> can't be equal to 'vlan'.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -526,7 +526,7 @@", "     vlan_id = None", "     (vlan, dot, id_candidate) = name.partition('.')", "     if dot:", "-        if (vlan == 'vlan'):", "+        if (vlan not in 'vlan'):", "             return _(\"When using the <prefix>.<vlan id> interface name notation, <prefix> can't be equal to 'vlan'.\")", "         try:", "             vlan_id = int(id_candidate)"]]]}, "41": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_IsNot", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_IsNot", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 2, "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 169, in runTest\n    self.assert_parse(cmd, outputCmd)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'netw[49 chars]-teamconfig=\"{\\\\\"runner\\\\\": {\\\\\"name\\\\\": \\\\\"roundrobin\\\\\"}}\"\\n' != 'netw[49 chars]-teamslaves=\"p3p1,p3p2\" --teamconfig=\"{\\\\\"runn[37 chars]}\"\\n'\n- network  --bootproto=dhcp --device=team0 --activate --teamconfig=\"{\\\"runner\\\": {\\\"name\\\": \\\"roundrobin\\\"}}\"\n+ network  --bootproto=dhcp --device=team0 --activate --teamslaves=\"p3p1,p3p2\" --teamconfig=\"{\\\"runner\\\": {\\\"name\\\": \\\"roundrobin\\\"}}\"\n?                                                    +++++++++++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -419,7 +419,7 @@", "             teamslaves = []", "             if value:", "                 parts = value.split(\"'\")", "-                if ((len(parts) % 2) == 1):", "+                if ((len(parts) % 2) is not 1):", "                     if (not parts[(- 1)]):", "                         parts = parts[:(- 1)]", "                     else:"]]]}, "24": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Gt", "12", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 12, "result-data": [{"occurrence": 12, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -118,7 +118,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = FC6_NetworkData._getArgsAsStr(self)", "-        if (self.ipv6 != ''):", "+        if (self.ipv6 > ''):", "             retval += (' --ipv6=%s' % self.ipv6)", "         return retval", " "]]]}, "153": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_LtE", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_LtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 4, "result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -495,7 +495,7 @@", "     def _getParser(self):", "         op = FC6_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' <= action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'query' value was added.\" % versionToLongString(RHEL5)))", "                 break", "         return op"]]]}, "32": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Gt", "20", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 20, "result-data": [{"occurrence": 20, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -290,7 +290,7 @@", "         retval = ''", "         for nic in self.network:", "             retval += nic.__str__()", "-        if (retval != ''):", "+        if (retval > ''):", "             return ('# Network information\\n' + retval)", "         else:", "             return ''"]]]}, "197": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_LtE_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_LtE_with_NotEq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtEWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 826, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nThe vlan id is out of the 0-4095 vlan id range.\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 276, in runTest\n    self.assert_parse(\"network --interfacename=vlan4095\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: The following problem occurred on line 0 of the kickstart file:\n\nThe vlan id is out of the 0-4095 vlan id range.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -539,7 +539,7 @@", "         except ValueError:", "             return _(\"If network --interfacename starts with 'vlan', valid vlan id should follow.\")", "     if (vlan_id is not None):", "-        if (not (MIN_VLAN_ID <= vlan_id <= MAX_VLAN_ID)):", "+        if (not (MIN_VLAN_ID <= vlan_id != MAX_VLAN_ID)):", "             return (_('The vlan id is out of the %(minimum)d-%(maximum)d vlan id range.') % {'minimum': MIN_VLAN_ID, 'maximum': MAX_VLAN_ID})", "     return None", " "]]]}, "67": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_LtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --dhcpclass=CLASS --device=eth0\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --dhcpclass=CLASS --device=eth0\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n?         +++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -42,7 +42,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = ''", "-        if (self.bootProto != ''):", "+        if (self.bootProto <= ''):", "             retval += (' --bootproto=%s' % self.bootProto)", "         if (self.dhcpclass != ''):", "             retval += (' --dhcpclass=%s' % self.dhcpclass)"]]]}, "296": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_GtE", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 5, "result-data": [{"occurrence": 5, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --gateway=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --gateway=\n?                                                          -----------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -52,7 +52,7 @@", "             retval += (' --essid=\"%s\"' % self.essid)", "         if (self.ethtool != ''):", "             retval += (' --ethtool=\"%s\"' % self.ethtool)", "-        if (self.gateway != ''):", "+        if (self.gateway >= ''):", "             retval += (' --gateway=%s' % self.gateway)", "         if (self.hostname != ''):", "             retval += (' --hostname=%s' % self.hostname)"]]]}, "96": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"pykickstart.commands.network\", line 509, in __init__\n  File \"pykickstart.commands.network\", line 489, in __init__\n  File \"pykickstart.commands.network\", line 330, in __init__\n  File \"pykickstart.commands.network\", line 513, in _getParser\n  File \"pykickstart.commands.network\", line 495, in _getParser\nTypeError: unorderable types: str() >= list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -368,7 +368,7 @@", "     def _getParser(self):", "         op = F8_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' >= action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'query' value was added.\" % versionToLongString(F9)))", "                 break", "         return op"]]]}, "70": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_LtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_LtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 3, "result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --essid=\"\"\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --essid=\"\"\n?                                                          -----------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -48,7 +48,7 @@", "             retval += (' --dhcpclass=%s' % self.dhcpclass)", "         if (self.device != ''):", "             retval += (' --device=%s' % self.device)", "-        if (self.essid != ''):", "+        if (self.essid <= ''):", "             retval += (' --essid=\"%s\"' % self.essid)", "         if (self.ethtool != ''):", "             retval += (' --ethtool=\"%s\"' % self.ethtool)"]]]}, "194": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_IsNot_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_IsNot_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 823, in parse\n  File \"pykickstart.commands.network\", line 804, in validate_network_interface_name\nTypeError: unorderable types: NoneType() >= NoneType()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 251, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: unorderable types: NoneType() >= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -538,7 +538,7 @@", "             vlan_id = int(id_candidate)", "         except ValueError:", "             return _(\"If network --interfacename starts with 'vlan', valid vlan id should follow.\")", "-    if (vlan_id is not None):", "+    if (vlan_id >= None):", "         if (not (MIN_VLAN_ID <= vlan_id <= MAX_VLAN_ID)):", "             return (_('The vlan id is out of the %(minimum)d-%(maximum)d vlan id range.') % {'minimum': MIN_VLAN_ID, 'maximum': MAX_VLAN_ID})", "     return None"]]]}, "211": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_LtE_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_LtE_with_In", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtEWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 823, in parse\nTypeError: argument of type 'int' is not iterable\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 263, in runTest\n    self.assert_parse(\"network --interfacename=abc.123\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -539,7 +539,7 @@", "         except ValueError:", "             return _(\"If network --interfacename starts with 'vlan', valid vlan id should follow.\")", "     if (vlan_id is not None):", "-        if (not (MIN_VLAN_ID <= vlan_id <= MAX_VLAN_ID)):", "+        if (not (MIN_VLAN_ID <= vlan_id in MAX_VLAN_ID)):", "             return (_('The vlan id is out of the %(minimum)d-%(maximum)d vlan id range.') % {'minimum': MIN_VLAN_ID, 'maximum': MAX_VLAN_ID})", "     return None", " "]]]}, "186": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_NotIn", "15", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 15, "result-data": [{"occurrence": 15, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -157,7 +157,7 @@", "         retval = F16_NetworkData._getArgsAsStr(self)", "         if (self.bondslaves != ''):", "             retval += (' --bondslaves=%s' % self.bondslaves)", "-        if (self.bondopts != ''):", "+        if (self.bondopts not in ''):", "             retval += (' --bondopts=%s' % self.bondopts)", "         if self.vlanid:", "             retval += (' --vlanid=%s' % self.vlanid)"]]]}, "244": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Is", "8", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 8, "result-data": [{"occurrence": 8, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --mtu=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --mtu=\n?                                                          -------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -58,7 +58,7 @@", "             retval += (' --hostname=%s' % self.hostname)", "         if (self.ip != ''):", "             retval += (' --ip=%s' % self.ip)", "-        if (self.mtu != ''):", "+        if (self.mtu is ''):", "             retval += (' --mtu=%s' % self.mtu)", "         if (self.nameserver != ''):", "             retval += (' --nameserver=%s' % self.nameserver)"]]]}, "49": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_In", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_In", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 3, "result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --essid=\"\"\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --essid=\"\"\n?                                                          -----------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -48,7 +48,7 @@", "             retval += (' --dhcpclass=%s' % self.dhcpclass)", "         if (self.device != ''):", "             retval += (' --device=%s' % self.device)", "-        if (self.essid != ''):", "+        if (self.essid in ''):", "             retval += (' --essid=\"%s\"' % self.essid)", "         if (self.ethtool != ''):", "             retval += (' --ethtool=\"%s\"' % self.ethtool)"]]]}, "54": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_In", "8", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_In", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 8, "result-data": [{"occurrence": 8, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --mtu=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --mtu=\n?                                                          -------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -58,7 +58,7 @@", "             retval += (' --hostname=%s' % self.hostname)", "         if (self.ip != ''):", "             retval += (' --ip=%s' % self.ip)", "-        if (self.mtu != ''):", "+        if (self.mtu in ''):", "             retval += (' --mtu=%s' % self.mtu)", "         if (self.nameserver != ''):", "             retval += (' --nameserver=%s' % self.nameserver)"]]]}, "25": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Gt", "13", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 13, "result-data": [{"occurrence": 13, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -138,7 +138,7 @@", "             retval += ' --activate'", "         if self.nodefroute:", "             retval += ' --nodefroute'", "-        if (self.wpakey != ''):", "+        if (self.wpakey > ''):", "             retval += (' --wpakey=%s' % self.wpakey)", "         return retval", " "]]]}, "133": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_Eq", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_Eq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 6, "result-data": [{"occurrence": 6, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 295, in runTest\n    self.assert_parse_error(\"network --device bridge0 --bootproto dhcp \"\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -563,7 +563,7 @@", "             opts = retval.bridgeopts.split(',')", "             for opt in opts:", "                 (_key, _sep, value) = opt.partition('=')", "-                if ((not value) or ('=' in value)):", "+                if ((not value) or ('=' == value)):", "                     msg = formatErrorMsg(self.lineno, msg=_(\"Bad format of --bridgeopts, expecting key=value options separated by ','\"))", "                     raise KickstartParseError(msg)", "         return retval"]]]}, "136": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "arithmetic_operator_deletion", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "arithmetic_operator_deletion", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 2, "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.arithmetic_operator_deletion.ReverseUnarySub", "line_number": 614}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 428, in parse\nIndexError: list index out of range\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 165, in runTest\n    self.assert_parse(cmd)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: list index out of range\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -429,7 +429,7 @@", "                     devs = devs.strip(',').split(',')", "                     for d in devs[:(- 1)]:", "                         teamslaves.append((d, ''))", "-                    teamslaves.append((devs[(- 1)], cfg))", "+                    teamslaves.append((devs[(+ 1)], cfg))", "             return teamslaves", "         op = F19_Network._getParser(self)", "         op.add_argument('--teamslaves', type=teamslaves_cb, version=F20, help='\\n                        Team device with name specified by ``--device`` option\\n                        will be created using slaves specified in this option.\\n                        Slaves are separated by comma. A slave can be followed\\n                        by its configuration which is a single-quoted json format\\n                        string with double qoutes escaped by ``\\'\\'`` character.\\n                        Example::\\n\\n                            ``--teamslaves=\"p3p1\\'{\"prio\": -10, \"sticky\": true}\\',p3p2\\'{\"prio\": 100}\\'\"``.\\n\\n                        See also ``--teamconfig`` option.')"]]]}, "265": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "boolean_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "boolean_replacer", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 52}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --onboot=off\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --onboot=off\n?                                                          -------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -29,7 +29,7 @@", "         self.nameserver = kwargs.get('nameserver', '')", "         self.netmask = kwargs.get('netmask', '')", "         self.nodns = kwargs.get('nodns', False)", "-        self.onboot = kwargs.get('onboot', True)", "+        self.onboot = kwargs.get('onboot', False)", "         self.wepkey = kwargs.get('wepkey', '')", " ", "     def __eq__(self, y):"]]]}, "180": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_NotIn", "9", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 9, "result-data": [{"occurrence": 9, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -60,7 +60,7 @@", "             retval += (' --ip=%s' % self.ip)", "         if (self.mtu != ''):", "             retval += (' --mtu=%s' % self.mtu)", "-        if (self.nameserver != ''):", "+        if (self.nameserver not in ''):", "             retval += (' --nameserver=%s' % self.nameserver)", "         if (self.netmask != ''):", "             retval += (' --netmask=%s' % self.netmask)"]]]}, "6": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_Gt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 3, "result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 218, in runTest\n    \"network  --bootproto=dhcp --device=bridge0 --bridgeslaves=ens3,ens7 --bridgeopts=priority=40000\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 669, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nBad format of --bridgeopts, expecting key=value options separated by ','\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -460,7 +460,7 @@", "             opts = retval.bridgeopts.split(',')", "             for opt in opts:", "                 (_key, _sep, value) = opt.partition('=')", "-                if ((not value) or ('=' in value)):", "+                if ((not value) or ('=' > value)):", "                     msg = formatErrorMsg(self.lineno, msg=_(\"Bad format of --bridgeopts, expecting key=value options separated by ','\"))", "                     raise KickstartParseError(msg)", "         return retval"]]]}, "59": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_In", "13", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_In", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 13, "result-data": [{"occurrence": 13, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --wpakey=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --wpakey=\n?                                                          ----------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -138,7 +138,7 @@", "             retval += ' --activate'", "         if self.nodefroute:", "             retval += ' --nodefroute'", "-        if (self.wpakey != ''):", "+        if (self.wpakey in ''):", "             retval += (' --wpakey=%s' % self.wpakey)", "         return retval", " "]]]}, "198": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_LtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 34, in runTest\n    self.assertNotEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth1\"))\nAssertionError: <pykickstart.commands.network.F16_NetworkData object at 0x7f075058e6a0> == <pykickstart.commands.network.F16_NetworkData object at 0x7f0750677828>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -35,7 +35,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.device and (self.device == y.device))", "+        return (self.device and (self.device <= y.device))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]]}, "69": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_LtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_LtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 2, "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n?                                            ++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -46,7 +46,7 @@", "             retval += (' --bootproto=%s' % self.bootProto)", "         if (self.dhcpclass != ''):", "             retval += (' --dhcpclass=%s' % self.dhcpclass)", "-        if (self.device != ''):", "+        if (self.device <= ''):", "             retval += (' --device=%s' % self.device)", "         if (self.essid != ''):", "             retval += (' --essid=\"%s\"' % self.essid)"]]]}, "166": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_LtE_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_LtE_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtEWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 826, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nThe vlan id is out of the 0-4095 vlan id range.\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 263, in runTest\n    self.assert_parse(\"network --interfacename=abc.123\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: The following problem occurred on line 0 of the kickstart file:\n\nThe vlan id is out of the 0-4095 vlan id range.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -539,7 +539,7 @@", "         except ValueError:", "             return _(\"If network --interfacename starts with 'vlan', valid vlan id should follow.\")", "     if (vlan_id is not None):", "-        if (not (MIN_VLAN_ID <= vlan_id <= MAX_VLAN_ID)):", "+        if (not (MIN_VLAN_ID <= vlan_id >= MAX_VLAN_ID)):", "             return (_('The vlan id is out of the %(minimum)d-%(maximum)d vlan id range.') % {'minimum': MIN_VLAN_ID, 'maximum': MAX_VLAN_ID})", "     return None", " "]]]}, "165": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_LtE_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_LtE_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtEWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 826, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nThe vlan id is out of the 0-4095 vlan id range.\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 263, in runTest\n    self.assert_parse(\"network --interfacename=abc.123\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: The following problem occurred on line 0 of the kickstart file:\n\nThe vlan id is out of the 0-4095 vlan id range.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -539,7 +539,7 @@", "         except ValueError:", "             return _(\"If network --interfacename starts with 'vlan', valid vlan id should follow.\")", "     if (vlan_id is not None):", "-        if (not (MIN_VLAN_ID <= vlan_id <= MAX_VLAN_ID)):", "+        if (not (MIN_VLAN_ID >= vlan_id <= MAX_VLAN_ID)):", "             return (_('The vlan id is out of the %(minimum)d-%(maximum)d vlan id range.') % {'minimum': MIN_VLAN_ID, 'maximum': MAX_VLAN_ID})", "     return None", " "]]]}, "246": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Is", "10", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 10, "result-data": [{"occurrence": 10, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --netmask=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --netmask=\n?                                                          -----------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -62,7 +62,7 @@", "             retval += (' --mtu=%s' % self.mtu)", "         if (self.nameserver != ''):", "             retval += (' --nameserver=%s' % self.nameserver)", "-        if (self.netmask != ''):", "+        if (self.netmask is ''):", "             retval += (' --netmask=%s' % self.netmask)", "         if self.nodns:", "             retval += ' --nodns'"]]]}, "27": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Gt", "15", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 15, "result-data": [{"occurrence": 15, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -157,7 +157,7 @@", "         retval = F16_NetworkData._getArgsAsStr(self)", "         if (self.bondslaves != ''):", "             retval += (' --bondslaves=%s' % self.bondslaves)", "-        if (self.bondopts != ''):", "+        if (self.bondopts > ''):", "             retval += (' --bondopts=%s' % self.bondopts)", "         if self.vlanid:", "             retval += (' --vlanid=%s' % self.vlanid)"]]]}, "214": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_NotIn", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 2, "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/argparse.py\", line 2287, in _get_value\n    result = type_func(arg_string)\n  File \"pykickstart.commands.network\", line 591, in teamslaves_cb\nTypeError: argument of type 'int' is not iterable\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/argparse.py\", line 1759, in parse_known_args\n    namespace, args = self._parse_known_args(args, namespace)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/argparse.py\", line 1965, in _parse_known_args\n    start_index = consume_optional(start_index)\nargparse.ArgumentError: argument --teamslaves: invalid teamslaves_cb value: 'p3p1\\'{\"prio\": -10, \"sticky\": true}\\',p3p2\\'{\"prio\": 100}\\''\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 428, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nargument --teamslaves: invalid teamslaves_cb value: 'p3p1\\'{\"prio\": -10, \"sticky\": true}\\',p3p2\\'{\"prio\": 100}\\''\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 165, in runTest\n    self.assert_parse(cmd)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: The following problem occurred on line 0 of the kickstart file:\n\nargument --teamslaves: invalid teamslaves_cb value: 'p3p1\\'{\"prio\": -10, \"sticky\": true}\\',p3p2\\'{\"prio\": 100}\\''\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -419,7 +419,7 @@", "             teamslaves = []", "             if value:", "                 parts = value.split(\"'\")", "-                if ((len(parts) % 2) == 1):", "+                if ((len(parts) % 2) not in 1):", "                     if (not parts[(- 1)]):", "                         parts = parts[:(- 1)]", "                     else:"]]]}, "128": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_Eq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_Eq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -368,7 +368,7 @@", "     def _getParser(self):", "         op = F8_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' == action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'query' value was added.\" % versionToLongString(F9)))", "                 break", "         return op"]]]}, "87": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_LtE", "20", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_LtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 20, "result-data": [{"occurrence": 20, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -290,7 +290,7 @@", "         retval = ''", "         for nic in self.network:", "             retval += nic.__str__()", "-        if (retval != ''):", "+        if (retval <= ''):", "             return ('# Network information\\n' + retval)", "         else:", "             return ''"]]]}, "324": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "number_replacer", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "number_replacer", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 5, "result-data": [{"occurrence": 5, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 591}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 195, in runTest\n    self.assertEqual(network_data.teamslaves, value)\nAssertionError: Lists differ: [('eth1', '{\"prio\": -10, \"sticky\": true}')] != [('eth1', '{\"prio\": -10, \"sticky\": true}'), ('eth2', '')]\n\nSecond list contains 1 additional elements.\nFirst extra element 1:\n('eth2', '')\n\n- [('eth1', '{\"prio\": -10, \"sticky\": true}')]\n+ [('eth1', '{\"prio\": -10, \"sticky\": true}'), ('eth2', '')]\n?                                           ++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -419,7 +419,7 @@", "             teamslaves = []", "             if value:", "                 parts = value.split(\"'\")", "-                if ((len(parts) % 2) == 1):", "+                if ((len(parts) % 3) == 1):", "                     if (not parts[(- 1)]):", "                         parts = parts[:(- 1)]", "                     else:"]]]}, "118": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Lt", "16", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 16, "result-data": [{"occurrence": 16, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 218, in runTest\n    \"network  --bootproto=dhcp --device=bridge0 --bridgeslaves=ens3,ens7 --bridgeopts=priority=40000\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'netw[31 chars]bridge0 --bridgeopts=priority=40000\\n' != 'netw[31 chars]bridge0 --bridgeslaves=ens3,ens7 --bridgeopts=priority=40000\\n'\n- network  --bootproto=dhcp --device=bridge0 --bridgeopts=priority=40000\n+ network  --bootproto=dhcp --device=bridge0 --bridgeslaves=ens3,ens7 --bridgeopts=priority=40000\n?                                           +++++++++++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -213,7 +213,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = F21_NetworkData._getArgsAsStr(self)", "-        if (self.bridgeslaves != ''):", "+        if (self.bridgeslaves < ''):", "             retval += (' --bridgeslaves=%s' % self.bridgeslaves)", "         if (self.bridgeopts != ''):", "             retval += (' --bridgeopts=%s' % self.bridgeopts)"]]]}, "108": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Lt", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 6, "result-data": [{"occurrence": 6, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 44, in runTest\n    \"network  --bootproto=dhcp --device=eth0 --gateway=gateway.wherever.com --hostname=server.wherever.com\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'netw[37 chars]-gateway=gateway.wherever.com\\n' != 'netw[37 chars]-gateway=gateway.wherever.com --hostname=server.wherever.com\\n'\n- network  --bootproto=dhcp --device=eth0 --gateway=gateway.wherever.com\n+ network  --bootproto=dhcp --device=eth0 --gateway=gateway.wherever.com --hostname=server.wherever.com\n?                                                                       +++++++++++++++++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -54,7 +54,7 @@", "             retval += (' --ethtool=\"%s\"' % self.ethtool)", "         if (self.gateway != ''):", "             retval += (' --gateway=%s' % self.gateway)", "-        if (self.hostname != ''):", "+        if (self.hostname < ''):", "             retval += (' --hostname=%s' % self.hostname)", "         if (self.ip != ''):", "             retval += (' --ip=%s' % self.ip)"]]]}, "161": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_Lt", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 5, "result-data": [{"occurrence": 5, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 116, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"pykickstart.commands.network\", line 722, in __init__\n  File \"pykickstart.commands.network\", line 489, in __init__\n  File \"pykickstart.commands.network\", line 330, in __init__\n  File \"pykickstart.commands.network\", line 728, in _getParser\nTypeError: unorderable types: str() < list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -511,7 +511,7 @@", "     def _getParser(self):", "         op = F9_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' < action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'ibft' value was added.\" % versionToLongString(RHEL6)))", "                 break", "         op.add_argument('--activate', action='store_true', version=RHEL6, default=False, help='\\n                        As noted above, using this option ensures any matching\\n                        devices beyond the first will also be activated.')"]]]}, "86": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_LtE", "19", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_LtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 19, "result-data": [{"occurrence": 19, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 251, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeopts=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeopts=\n?                                                          --------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -272,7 +272,7 @@", "         retval = F21_NetworkData._getArgsAsStr(self)", "         if (self.bridgeslaves != ''):", "             retval += (' --bridgeslaves=%s' % self.bridgeslaves)", "-        if (self.bridgeopts != ''):", "+        if (self.bridgeopts <= ''):", "             retval += (' --bridgeopts=%s' % self.bridgeopts)", "         return retval", " "]]]}, "127": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_Eq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nAttributeError: 'list' object has no attribute 'device'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 72, in runTest\n    network --device=eth1\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \nnetwork --device=eth0\nnetwork --device=eth1: 'list' object has no attribute 'device'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -318,7 +318,7 @@", "         nd = self.dataClass()", "         self.set_to_obj(ns, nd)", "         nd.lineno = self.lineno", "-        if (nd in self.dataList()):", "+        if (nd == self.dataList()):", "             warnings.warn((_('A network device with the name %s has already been defined.') % nd.device))", "         return nd", " "]]]}, "113": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Lt", "11", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 11, "result-data": [{"occurrence": 11, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 40, in runTest\n    \"network  --bootproto=dhcp --device=eth0 --essid=\\\"ESSID\\\" --wepkey=WEPKEY\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --device=eth0 --essid=\"ESSID\"\\n' != 'network  --bootproto=dhcp --device=eth0 --essid=\"ESSID\" --wepkey=WEPKEY\\n'\n- network  --bootproto=dhcp --device=eth0 --essid=\"ESSID\"\n+ network  --bootproto=dhcp --device=eth0 --essid=\"ESSID\" --wepkey=WEPKEY\n?                                                        ++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -68,7 +68,7 @@", "             retval += ' --nodns'", "         if (not self.onboot):", "             retval += ' --onboot=off'", "-        if (self.wepkey != ''):", "+        if (self.wepkey < ''):", "             retval += (' --wepkey=%s' % self.wepkey)", "         return retval", " "]]]}, "79": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_LtE", "12", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_LtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 12, "result-data": [{"occurrence": 12, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --ipv6=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --ipv6=\n?                                                          --------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -118,7 +118,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = FC6_NetworkData._getArgsAsStr(self)", "-        if (self.ipv6 != ''):", "+        if (self.ipv6 <= ''):", "             retval += (' --ipv6=%s' % self.ipv6)", "         return retval", " "]]]}, "184": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_NotIn", "13", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 13, "result-data": [{"occurrence": 13, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -138,7 +138,7 @@", "             retval += ' --activate'", "         if self.nodefroute:", "             retval += ' --nodefroute'", "-        if (self.wpakey != ''):", "+        if (self.wpakey not in ''):", "             retval += (' --wpakey=%s' % self.wpakey)", "         return retval", " "]]]}, "100": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_GtE", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 5, "result-data": [{"occurrence": 5, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 116, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"pykickstart.commands.network\", line 722, in __init__\n  File \"pykickstart.commands.network\", line 489, in __init__\n  File \"pykickstart.commands.network\", line 330, in __init__\n  File \"pykickstart.commands.network\", line 728, in _getParser\nTypeError: unorderable types: str() >= list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -511,7 +511,7 @@", "     def _getParser(self):", "         op = F9_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' >= action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'ibft' value was added.\" % versionToLongString(RHEL6)))", "                 break", "         op.add_argument('--activate', action='store_true', version=RHEL6, default=False, help='\\n                        As noted above, using this option ensures any matching\\n                        devices beyond the first will also be activated.')"]]]}, "249": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Is", "13", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 13, "result-data": [{"occurrence": 13, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --wpakey=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --wpakey=\n?                                                          ----------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -138,7 +138,7 @@", "             retval += ' --activate'", "         if self.nodefroute:", "             retval += ' --nodefroute'", "-        if (self.wpakey != ''):", "+        if (self.wpakey is ''):", "             retval += (' --wpakey=%s' % self.wpakey)", "         return retval", " "]]]}, "101": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_GtE", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 6, "result-data": [{"occurrence": 6, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 285, in runTest\n    \"network  --bootproto=dhcp --device=bridge0 --bridgeslaves=ens3,ens7 --bridgeopts=priority=40000\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 837, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nBad format of --bridgeopts, expecting key=value options separated by ','\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -563,7 +563,7 @@", "             opts = retval.bridgeopts.split(',')", "             for opt in opts:", "                 (_key, _sep, value) = opt.partition('=')", "-                if ((not value) or ('=' in value)):", "+                if ((not value) or ('=' >= value)):", "                     msg = formatErrorMsg(self.lineno, msg=_(\"Bad format of --bridgeopts, expecting key=value options separated by ','\"))", "                     raise KickstartParseError(msg)", "         return retval"]]]}, "242": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Is", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 6, "result-data": [{"occurrence": 6, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --hostname=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --hostname=\n?                                                          ------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -54,7 +54,7 @@", "             retval += (' --ethtool=\"%s\"' % self.ethtool)", "         if (self.gateway != ''):", "             retval += (' --gateway=%s' % self.gateway)", "-        if (self.hostname != ''):", "+        if (self.hostname is ''):", "             retval += (' --hostname=%s' % self.hostname)", "         if (self.ip != ''):", "             retval += (' --ip=%s' % self.ip)"]]]}, "137": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_IsNot", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 435, in parse\nUserWarning: A network device with the name eth0 has already been defined.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: A network device with the name eth0 has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -318,7 +318,7 @@", "         nd = self.dataClass()", "         self.set_to_obj(ns, nd)", "         nd.lineno = self.lineno", "-        if (nd in self.dataList()):", "+        if (nd is not self.dataList()):", "             warnings.warn((_('A network device with the name %s has already been defined.') % nd.device))", "         return nd", " "]]]}, "236": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --dhcpclass=CLASS --device=eth0\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --dhcpclass=CLASS --device=eth0\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n?         +++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -42,7 +42,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = ''", "-        if (self.bootProto != ''):", "+        if (self.bootProto is ''):", "             retval += (' --bootproto=%s' % self.bootProto)", "         if (self.dhcpclass != ''):", "             retval += (' --dhcpclass=%s' % self.dhcpclass)"]]]}, "63": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_In", "17", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_In", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 17, "result-data": [{"occurrence": 17, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 213, in runTest\n    F21_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 206, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeopts=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeopts=\n?                                                          --------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -215,7 +215,7 @@", "         retval = F21_NetworkData._getArgsAsStr(self)", "         if (self.bridgeslaves != ''):", "             retval += (' --bridgeslaves=%s' % self.bridgeslaves)", "-        if (self.bridgeopts != ''):", "+        if (self.bridgeopts in ''):", "             retval += (' --bridgeopts=%s' % self.bridgeopts)", "         return retval", " "]]]}, "129": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_Eq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_Eq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 2, "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -384,7 +384,7 @@", "     def _getParser(self):", "         op = F9_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' == action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'ibft' value was added.\" % versionToLongString(F16)))", "                 break", "         op.add_argument('--activate', action='store_true', version=F16, default=False, help='\\n                        As noted above, using this option ensures any matching\\n                        devices beyond the first will also be activated.')"]]]}, "106": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Lt", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 4, "result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 42, in runTest\n    \"network  --bootproto=dhcp --device=eth0 --ethtool=\\\"gro on\\\" --mtu=1200\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --device=eth0 --mtu=1200\\n' != 'network  --bootproto=dhcp --device=eth0 --ethtool=\"gro on\" --mtu=1200\\n'\n- network  --bootproto=dhcp --device=eth0 --mtu=1200\n+ network  --bootproto=dhcp --device=eth0 --ethtool=\"gro on\" --mtu=1200\n?                                         +++++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -50,7 +50,7 @@", "             retval += (' --device=%s' % self.device)", "         if (self.essid != ''):", "             retval += (' --essid=\"%s\"' % self.essid)", "-        if (self.ethtool != ''):", "+        if (self.ethtool < ''):", "             retval += (' --ethtool=\"%s\"' % self.ethtool)", "         if (self.gateway != ''):", "             retval += (' --gateway=%s' % self.gateway)"]]]}, "193": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_LtE_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_LtE_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtEWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 823, in parse\nTypeError: argument of type 'int' is not iterable\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 263, in runTest\n    self.assert_parse(\"network --interfacename=abc.123\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -539,7 +539,7 @@", "         except ValueError:", "             return _(\"If network --interfacename starts with 'vlan', valid vlan id should follow.\")", "     if (vlan_id is not None):", "-        if (not (MIN_VLAN_ID <= vlan_id <= MAX_VLAN_ID)):", "+        if (not (MIN_VLAN_ID <= vlan_id not in MAX_VLAN_ID)):", "             return (_('The vlan id is out of the %(minimum)d-%(maximum)d vlan id range.') % {'minimum': MIN_VLAN_ID, 'maximum': MAX_VLAN_ID})", "     return None", " "]]]}, "80": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_LtE", "13", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_LtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 13, "result-data": [{"occurrence": 13, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --wpakey=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --wpakey=\n?                                                          ----------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -138,7 +138,7 @@", "             retval += ' --activate'", "         if self.nodefroute:", "             retval += ' --nodefroute'", "-        if (self.wpakey != ''):", "+        if (self.wpakey <= ''):", "             retval += (' --wpakey=%s' % self.wpakey)", "         return retval", " "]]]}, "149": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_LtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 434, in parse\nTypeError: unorderable types: F16_NetworkData() <= list()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: unorderable types: F16_NetworkData() <= list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -318,7 +318,7 @@", "         nd = self.dataClass()", "         self.set_to_obj(ns, nd)", "         nd.lineno = self.lineno", "-        if (nd in self.dataList()):", "+        if (nd <= self.dataList()):", "             warnings.warn((_('A network device with the name %s has already been defined.') % nd.device))", "         return nd", " "]]]}, "90": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_NotEq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_NotEq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 2, "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -384,7 +384,7 @@", "     def _getParser(self):", "         op = F9_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' != action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'ibft' value was added.\" % versionToLongString(F16)))", "                 break", "         op.add_argument('--activate', action='store_true', version=F16, default=False, help='\\n                        As noted above, using this option ensures any matching\\n                        devices beyond the first will also be activated.')"]]]}, "35": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_IsNot_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_IsNot_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 823, in parse\n  File \"pykickstart.commands.network\", line 804, in validate_network_interface_name\nTypeError: argument of type 'NoneType' is not iterable\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 251, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -538,7 +538,7 @@", "             vlan_id = int(id_candidate)", "         except ValueError:", "             return _(\"If network --interfacename starts with 'vlan', valid vlan id should follow.\")", "-    if (vlan_id is not None):", "+    if (vlan_id not in None):", "         if (not (MIN_VLAN_ID <= vlan_id <= MAX_VLAN_ID)):", "             return (_('The vlan id is out of the %(minimum)d-%(maximum)d vlan id range.') % {'minimum': MIN_VLAN_ID, 'maximum': MAX_VLAN_ID})", "     return None"]]]}, "93": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_NotEq", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_NotEq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 5, "result-data": [{"occurrence": 5, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -511,7 +511,7 @@", "     def _getParser(self):", "         op = F9_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' != action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'ibft' value was added.\" % versionToLongString(RHEL6)))", "                 break", "         op.add_argument('--activate', action='store_true', version=RHEL6, default=False, help='\\n                        As noted above, using this option ensures any matching\\n                        devices beyond the first will also be activated.')"]]]}, "342": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Eq", "10", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Eq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 10, "result-data": [{"occurrence": 10, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --netmask=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --netmask=\n?                                                          -----------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -62,7 +62,7 @@", "             retval += (' --mtu=%s' % self.mtu)", "         if (self.nameserver != ''):", "             retval += (' --nameserver=%s' % self.nameserver)", "-        if (self.netmask != ''):", "+        if (self.netmask == ''):", "             retval += (' --netmask=%s' % self.netmask)", "         if self.nodns:", "             retval += ' --nodns'"]]]}, "328": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "number_replacer", "9", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "number_replacer", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 9, "result-data": [{"occurrence": 9, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 610}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 169, in runTest\n    self.assert_parse(cmd, outputCmd)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'netw[60 chars]=\"p3p2\" --teamconfig=\"{\\\\\"runner\\\\\": {\\\\\"name\\[21 chars]}\"\\n' != 'netw[60 chars]=\"p3p1,p3p2\" --teamconfig=\"{\\\\\"runner\\\\\": {\\\\\"[26 chars]}\"\\n'\n- network  --bootproto=dhcp --device=team0 --activate --teamslaves=\"p3p2\" --teamconfig=\"{\\\"runner\\\": {\\\"name\\\": \\\"roundrobin\\\"}}\"\n+ network  --bootproto=dhcp --device=team0 --activate --teamslaves=\"p3p1,p3p2\" --teamconfig=\"{\\\"runner\\\": {\\\"name\\\": \\\"roundrobin\\\"}}\"\n?                                                                      +++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -427,7 +427,7 @@", "                 it = iter(parts)", "                 for (devs, cfg) in zip(it, it):", "                     devs = devs.strip(',').split(',')", "-                    for d in devs[:(- 1)]:", "+                    for d in devs[:(- 2)]:", "                         teamslaves.append((d, ''))", "                     teamslaves.append((devs[(- 1)], cfg))", "             return teamslaves"]]]}, "89": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_NotEq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -368,7 +368,7 @@", "     def _getParser(self):", "         op = F8_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' != action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'query' value was added.\" % versionToLongString(F9)))", "                 break", "         return op"]]]}, "349": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Eq", "17", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Eq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 17, "result-data": [{"occurrence": 17, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 213, in runTest\n    F21_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 206, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeopts=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeopts=\n?                                                          --------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -215,7 +215,7 @@", "         retval = F21_NetworkData._getArgsAsStr(self)", "         if (self.bridgeslaves != ''):", "             retval += (' --bridgeslaves=%s' % self.bridgeslaves)", "-        if (self.bridgeopts != ''):", "+        if (self.bridgeopts == ''):", "             retval += (' --bridgeopts=%s' % self.bridgeopts)", "         return retval", " "]]]}, "156": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 434, in parse\nTypeError: unorderable types: F16_NetworkData() < list()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: unorderable types: F16_NetworkData() < list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -318,7 +318,7 @@", "         nd = self.dataClass()", "         self.set_to_obj(ns, nd)", "         nd.lineno = self.lineno", "-        if (nd in self.dataList()):", "+        if (nd < self.dataList()):", "             warnings.warn((_('A network device with the name %s has already been defined.') % nd.device))", "         return nd", " "]]]}, "319": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "number_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "number_replacer", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 31}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 826, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nThe vlan id is out of the 1-4095 vlan id range.\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 275, in runTest\n    self.assert_parse(\"network --interfacename=vlan0\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: The following problem occurred on line 0 of the kickstart file:\n\nThe vlan id is out of the 1-4095 vlan id range.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -8,7 +8,7 @@", " from pykickstart.errors import KickstartParseError, formatErrorMsg", " import warnings", " from pykickstart.i18n import _", "-MIN_VLAN_ID = 0", "+MIN_VLAN_ID = 1", " MAX_VLAN_ID = 4095", " ", " class FC3_NetworkData(BaseData):"]]]}, "56": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_In", "10", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_In", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 10, "result-data": [{"occurrence": 10, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --netmask=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --netmask=\n?                                                          -----------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -62,7 +62,7 @@", "             retval += (' --mtu=%s' % self.mtu)", "         if (self.nameserver != ''):", "             retval += (' --nameserver=%s' % self.nameserver)", "-        if (self.netmask != ''):", "+        if (self.netmask in ''):", "             retval += (' --netmask=%s' % self.netmask)", "         if self.nodns:", "             retval += ' --nodns'"]]]}, "29": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Gt", "17", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 17, "result-data": [{"occurrence": 17, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -215,7 +215,7 @@", "         retval = F21_NetworkData._getArgsAsStr(self)", "         if (self.bridgeslaves != ''):", "             retval += (' --bridgeslaves=%s' % self.bridgeslaves)", "-        if (self.bridgeopts != ''):", "+        if (self.bridgeopts > ''):", "             retval += (' --bridgeopts=%s' % self.bridgeopts)", "         return retval", " "]]]}, "318": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_LtE_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_LtE_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtEWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 826, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nThe vlan id is out of the 0-4095 vlan id range.\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 263, in runTest\n    self.assert_parse(\"network --interfacename=abc.123\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: The following problem occurred on line 0 of the kickstart file:\n\nThe vlan id is out of the 0-4095 vlan id range.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -539,7 +539,7 @@", "         except ValueError:", "             return _(\"If network --interfacename starts with 'vlan', valid vlan id should follow.\")", "     if (vlan_id is not None):", "-        if (not (MIN_VLAN_ID <= vlan_id <= MAX_VLAN_ID)):", "+        if (not (MIN_VLAN_ID <= vlan_id > MAX_VLAN_ID)):", "             return (_('The vlan id is out of the %(minimum)d-%(maximum)d vlan id range.') % {'minimum': MIN_VLAN_ID, 'maximum': MAX_VLAN_ID})", "     return None", " "]]]}, "279": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "boolean_replacer", "15", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "boolean_replacer", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 15, "result-data": [{"occurrence": 15, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 523}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --activate\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --activate\n?                                                          -----------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -387,7 +387,7 @@", "             if ('--bootproto' in action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'ibft' value was added.\" % versionToLongString(F16)))", "                 break", "-        op.add_argument('--activate', action='store_true', version=F16, default=False, help='\\n                        As noted above, using this option ensures any matching\\n                        devices beyond the first will also be activated.')", "+        op.add_argument('--activate', action='store_true', version=F16, default=True, help='\\n                        As noted above, using this option ensures any matching\\n                        devices beyond the first will also be activated.')", "         op.add_argument('--nodefroute', action='store_true', version=F16, default=False, help='\\n                        Prevents grabbing of the default route by the device.\\n                        It can be useful when activating additional devices in\\n                        installer using ``--activate`` option.')", "         op.add_argument('--wpakey', default='', version=F16, help='\\n                        The WPA encryption key for wireless networks.')", "         return op"]]]}, "188": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_NotIn", "17", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 17, "result-data": [{"occurrence": 17, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -215,7 +215,7 @@", "         retval = F21_NetworkData._getArgsAsStr(self)", "         if (self.bridgeslaves != ''):", "             retval += (' --bridgeslaves=%s' % self.bridgeslaves)", "-        if (self.bridgeopts != ''):", "+        if (self.bridgeopts not in ''):", "             retval += (' --bridgeopts=%s' % self.bridgeopts)", "         return retval", " "]]]}, "10": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_IsNot_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_IsNot_with_Eq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 823, in parse\n  File \"pykickstart.commands.network\", line 805, in validate_network_interface_name\nTypeError: unorderable types: int() <= NoneType()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 251, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: unorderable types: int() <= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -538,7 +538,7 @@", "             vlan_id = int(id_candidate)", "         except ValueError:", "             return _(\"If network --interfacename starts with 'vlan', valid vlan id should follow.\")", "-    if (vlan_id is not None):", "+    if (vlan_id == None):", "         if (not (MIN_VLAN_ID <= vlan_id <= MAX_VLAN_ID)):", "             return (_('The vlan id is out of the %(minimum)d-%(maximum)d vlan id range.') % {'minimum': MIN_VLAN_ID, 'maximum': MAX_VLAN_ID})", "     return None"]]]}, "82": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_LtE", "15", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_LtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 15, "result-data": [{"occurrence": 15, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bondopts=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bondopts=\n?                                                          ------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -157,7 +157,7 @@", "         retval = F16_NetworkData._getArgsAsStr(self)", "         if (self.bondslaves != ''):", "             retval += (' --bondslaves=%s' % self.bondslaves)", "-        if (self.bondopts != ''):", "+        if (self.bondopts <= ''):", "             retval += (' --bondopts=%s' % self.bondopts)", "         if self.vlanid:", "             retval += (' --vlanid=%s' % self.vlanid)"]]]}, "248": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Is", "12", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 12, "result-data": [{"occurrence": 12, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --ipv6=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --ipv6=\n?                                                          --------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -118,7 +118,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = FC6_NetworkData._getArgsAsStr(self)", "-        if (self.ipv6 != ''):", "+        if (self.ipv6 is ''):", "             retval += (' --ipv6=%s' % self.ipv6)", "         return retval", " "]]]}, "280": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "boolean_replacer", "16", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "boolean_replacer", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 16, "result-data": [{"occurrence": 16, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 527}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --nodefroute\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --nodefroute\n?                                                          -------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -388,7 +388,7 @@", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'ibft' value was added.\" % versionToLongString(F16)))", "                 break", "         op.add_argument('--activate', action='store_true', version=F16, default=False, help='\\n                        As noted above, using this option ensures any matching\\n                        devices beyond the first will also be activated.')", "-        op.add_argument('--nodefroute', action='store_true', version=F16, default=False, help='\\n                        Prevents grabbing of the default route by the device.\\n                        It can be useful when activating additional devices in\\n                        installer using ``--activate`` option.')", "+        op.add_argument('--nodefroute', action='store_true', version=F16, default=True, help='\\n                        Prevents grabbing of the default route by the device.\\n                        It can be useful when activating additional devices in\\n                        installer using ``--activate`` option.')", "         op.add_argument('--wpakey', default='', version=F16, help='\\n                        The WPA encryption key for wireless networks.')", "         return op", " "]]]}, "116": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Lt", "14", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 14, "result-data": [{"occurrence": 14, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 152, in runTest\n    \"network  --bootproto=dhcp --device=eth0 --bondslaves=A,B --bondopts=opt1,opt2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'netw[13 chars]oto=dhcp --device=eth0 --bondopts=opt1,opt2\\n' != 'netw[13 chars]oto=dhcp --device=eth0 --bondslaves=A,B --bondopts=opt1,opt2\\n'\n- network  --bootproto=dhcp --device=eth0 --bondopts=opt1,opt2\n+ network  --bootproto=dhcp --device=eth0 --bondslaves=A,B --bondopts=opt1,opt2\n?                                        +++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -155,7 +155,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = F16_NetworkData._getArgsAsStr(self)", "-        if (self.bondslaves != ''):", "+        if (self.bondslaves < ''):", "             retval += (' --bondslaves=%s' % self.bondslaves)", "         if (self.bondopts != ''):", "             retval += (' --bondopts=%s' % self.bondopts)"]]]}, "201": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_LtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_LtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 3, "result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 826, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nWhen using the <prefix>.<vlan id> interface name notation, <prefix> can't be equal to 'vlan'.\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 263, in runTest\n    self.assert_parse(\"network --interfacename=abc.123\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: The following problem occurred on line 0 of the kickstart file:\n\nWhen using the <prefix>.<vlan id> interface name notation, <prefix> can't be equal to 'vlan'.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -526,7 +526,7 @@", "     vlan_id = None", "     (vlan, dot, id_candidate) = name.partition('.')", "     if dot:", "-        if (vlan == 'vlan'):", "+        if (vlan <= 'vlan'):", "             return _(\"When using the <prefix>.<vlan id> interface name notation, <prefix> can't be equal to 'vlan'.\")", "         try:", "             vlan_id = int(id_candidate)"]]]}, "322": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "number_replacer", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "number_replacer", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 3, "result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 488}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -361,7 +361,7 @@", "     removedKeywords = F8_Network.removedKeywords", "     removedAttrs = F8_Network.removedAttrs", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         F8_Network.__init__(self, writePriority, *args, **kwargs)", "         self.bootprotoList.append(BOOTPROTO_QUERY)", " "]]]}, "81": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_LtE", "14", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_LtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 14, "result-data": [{"occurrence": 14, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bondslaves=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bondslaves=\n?                                                          --------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -155,7 +155,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = F16_NetworkData._getArgsAsStr(self)", "-        if (self.bondslaves != ''):", "+        if (self.bondslaves <= ''):", "             retval += (' --bondslaves=%s' % self.bondslaves)", "         if (self.bondopts != ''):", "             retval += (' --bondopts=%s' % self.bondopts)"]]]}, "266": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "boolean_replacer", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "boolean_replacer", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 2, "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 57}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 33, in runTest\n    self.assertNotEqual(self.assert_parse(\"network --device=eth0\"), None)\nAssertionError: <pykickstart.commands.network.F16_NetworkData object at 0x7f38453ce780> == None\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -34,7 +34,7 @@", " ", "     def __eq__(self, y):", "         if (not y):", "-            return False", "+            return True", "         return (self.device and (self.device == y.device))", " ", "     def __ne__(self, y):"]]]}, "154": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_LtE", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_LtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 5, "result-data": [{"occurrence": 5, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 116, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"pykickstart.commands.network\", line 722, in __init__\n  File \"pykickstart.commands.network\", line 489, in __init__\n  File \"pykickstart.commands.network\", line 330, in __init__\n  File \"pykickstart.commands.network\", line 728, in _getParser\nTypeError: unorderable types: str() <= list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -511,7 +511,7 @@", "     def _getParser(self):", "         op = F9_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' <= action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'ibft' value was added.\" % versionToLongString(RHEL6)))", "                 break", "         op.add_argument('--activate', action='store_true', version=RHEL6, default=False, help='\\n                        As noted above, using this option ensures any matching\\n                        devices beyond the first will also be activated.')"]]]}, "17": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Gt", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 5, "result-data": [{"occurrence": 5, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -52,7 +52,7 @@", "             retval += (' --essid=\"%s\"' % self.essid)", "         if (self.ethtool != ''):", "             retval += (' --ethtool=\"%s\"' % self.ethtool)", "-        if (self.gateway != ''):", "+        if (self.gateway > ''):", "             retval += (' --gateway=%s' % self.gateway)", "         if (self.hostname != ''):", "             retval += (' --hostname=%s' % self.hostname)"]]]}, "204": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -368,7 +368,7 @@", "     def _getParser(self):", "         op = F8_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' is action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'query' value was added.\" % versionToLongString(F9)))", "                 break", "         return op"]]]}, "268": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "boolean_replacer", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "boolean_replacer", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 4, "result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 125}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -97,7 +97,7 @@", " ", "     def __init__(self, *args, **kwargs):", "         FC4_NetworkData.__init__(self, *args, **kwargs)", "-        self.noipv4 = kwargs.get('noipv4', False)", "+        self.noipv4 = kwargs.get('noipv4', True)", "         self.noipv6 = kwargs.get('noipv6', False)", " ", "     def _getArgsAsStr(self):"]]]}, "175": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_NotIn", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 4, "result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -50,7 +50,7 @@", "             retval += (' --device=%s' % self.device)", "         if (self.essid != ''):", "             retval += (' --essid=\"%s\"' % self.essid)", "-        if (self.ethtool != ''):", "+        if (self.ethtool not in ''):", "             retval += (' --ethtool=\"%s\"' % self.ethtool)", "         if (self.gateway != ''):", "             retval += (' --gateway=%s' % self.gateway)"]]]}, "210": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_LtE_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_LtE_with_In", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtEWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 823, in parse\nTypeError: argument of type 'int' is not iterable\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 263, in runTest\n    self.assert_parse(\"network --interfacename=abc.123\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -539,7 +539,7 @@", "         except ValueError:", "             return _(\"If network --interfacename starts with 'vlan', valid vlan id should follow.\")", "     if (vlan_id is not None):", "-        if (not (MIN_VLAN_ID <= vlan_id <= MAX_VLAN_ID)):", "+        if (not (MIN_VLAN_ID in vlan_id <= MAX_VLAN_ID)):", "             return (_('The vlan id is out of the %(minimum)d-%(maximum)d vlan id range.') % {'minimum': MIN_VLAN_ID, 'maximum': MAX_VLAN_ID})", "     return None", " "]]]}, "313": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_In", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 33, in runTest\n    self.assertNotEqual(self.assert_parse(\"network --device=eth0\"), None)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 864, in assertNotEqual\n    if not first != second:\n  File \"pykickstart.commands.network\", line 62, in __ne__\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -38,7 +38,7 @@", "         return (self.device and (self.device == y.device))", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self in y))", " ", "     def _getArgsAsStr(self):", "         retval = ''"]]]}, "251": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Is", "15", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 15, "result-data": [{"occurrence": 15, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bondopts=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bondopts=\n?                                                          ------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -157,7 +157,7 @@", "         retval = F16_NetworkData._getArgsAsStr(self)", "         if (self.bondslaves != ''):", "             retval += (' --bondslaves=%s' % self.bondslaves)", "-        if (self.bondopts != ''):", "+        if (self.bondopts is ''):", "             retval += (' --bondopts=%s' % self.bondopts)", "         if self.vlanid:", "             retval += (' --vlanid=%s' % self.vlanid)"]]]}, "157": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"pykickstart.commands.network\", line 509, in __init__\n  File \"pykickstart.commands.network\", line 489, in __init__\n  File \"pykickstart.commands.network\", line 330, in __init__\n  File \"pykickstart.commands.network\", line 513, in _getParser\n  File \"pykickstart.commands.network\", line 495, in _getParser\nTypeError: unorderable types: str() < list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -368,7 +368,7 @@", "     def _getParser(self):", "         op = F8_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' < action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'query' value was added.\" % versionToLongString(F9)))", "                 break", "         return op"]]]}, "115": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Lt", "13", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 13, "result-data": [{"occurrence": 13, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 145, in runTest\n    \"network  --bootproto=dhcp --device=eth0 --wpakey=WPAKEY\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --device=eth0\\n' != 'network  --bootproto=dhcp --device=eth0 --wpakey=WPAKEY\\n'\n- network  --bootproto=dhcp --device=eth0\n+ network  --bootproto=dhcp --device=eth0 --wpakey=WPAKEY\n?                                        ++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -138,7 +138,7 @@", "             retval += ' --activate'", "         if self.nodefroute:", "             retval += ' --nodefroute'", "-        if (self.wpakey != ''):", "+        if (self.wpakey < ''):", "             retval += (' --wpakey=%s' % self.wpakey)", "         return retval", " "]]]}, "22": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Gt", "10", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 10, "result-data": [{"occurrence": 10, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -62,7 +62,7 @@", "             retval += (' --mtu=%s' % self.mtu)", "         if (self.nameserver != ''):", "             retval += (' --nameserver=%s' % self.nameserver)", "-        if (self.netmask != ''):", "+        if (self.netmask > ''):", "             retval += (' --netmask=%s' % self.netmask)", "         if self.nodns:", "             retval += ' --nodns'"]]]}, "61": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_In", "15", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_In", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 15, "result-data": [{"occurrence": 15, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bondopts=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bondopts=\n?                                                          ------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -157,7 +157,7 @@", "         retval = F16_NetworkData._getArgsAsStr(self)", "         if (self.bondslaves != ''):", "             retval += (' --bondslaves=%s' % self.bondslaves)", "-        if (self.bondopts != ''):", "+        if (self.bondopts in ''):", "             retval += (' --bondopts=%s' % self.bondopts)", "         if self.vlanid:", "             retval += (' --vlanid=%s' % self.vlanid)"]]]}, "189": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_NotIn", "18", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 18, "result-data": [{"occurrence": 18, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -270,7 +270,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = F21_NetworkData._getArgsAsStr(self)", "-        if (self.bridgeslaves != ''):", "+        if (self.bridgeslaves not in ''):", "             retval += (' --bridgeslaves=%s' % self.bridgeslaves)", "         if (self.bridgeopts != ''):", "             retval += (' --bridgeopts=%s' % self.bridgeopts)"]]]}, "253": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Is", "17", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 17, "result-data": [{"occurrence": 17, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 213, in runTest\n    F21_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 206, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeopts=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeopts=\n?                                                          --------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -215,7 +215,7 @@", "         retval = F21_NetworkData._getArgsAsStr(self)", "         if (self.bridgeslaves != ''):", "             retval += (' --bridgeslaves=%s' % self.bridgeslaves)", "-        if (self.bridgeopts != ''):", "+        if (self.bridgeopts is ''):", "             retval += (' --bridgeopts=%s' % self.bridgeopts)", "         return retval", " "]]]}, "182": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_NotIn", "11", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 11, "result-data": [{"occurrence": 11, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -68,7 +68,7 @@", "             retval += ' --nodns'", "         if (not self.onboot):", "             retval += ' --onboot=off'", "-        if (self.wepkey != ''):", "+        if (self.wepkey not in ''):", "             retval += (' --wepkey=%s' % self.wepkey)", "         return retval", " "]]]}, "23": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Gt", "11", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 11, "result-data": [{"occurrence": 11, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -68,7 +68,7 @@", "             retval += ' --nodns'", "         if (not self.onboot):", "             retval += ' --onboot=off'", "-        if (self.wepkey != ''):", "+        if (self.wepkey > ''):", "             retval += (' --wepkey=%s' % self.wepkey)", "         return retval", " "]]]}, "147": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_NotEq", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_NotEq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 3, "result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 826, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nWhen using the <prefix>.<vlan id> interface name notation, <prefix> can't be equal to 'vlan'.\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 263, in runTest\n    self.assert_parse(\"network --interfacename=abc.123\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: The following problem occurred on line 0 of the kickstart file:\n\nWhen using the <prefix>.<vlan id> interface name notation, <prefix> can't be equal to 'vlan'.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -526,7 +526,7 @@", "     vlan_id = None", "     (vlan, dot, id_candidate) = name.partition('.')", "     if dot:", "-        if (vlan == 'vlan'):", "+        if (vlan != 'vlan'):", "             return _(\"When using the <prefix>.<vlan id> interface name notation, <prefix> can't be equal to 'vlan'.\")", "         try:", "             vlan_id = int(id_candidate)"]]]}, "343": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Eq", "11", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Eq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 11, "result-data": [{"occurrence": 11, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --wepkey=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --wepkey=\n?                                                          ----------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -68,7 +68,7 @@", "             retval += ' --nodns'", "         if (not self.onboot):", "             retval += ' --onboot=off'", "-        if (self.wepkey != ''):", "+        if (self.wepkey == ''):", "             retval += (' --wepkey=%s' % self.wepkey)", "         return retval", " "]]]}, "326": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "number_replacer", "7", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "number_replacer", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 7, "result-data": [{"occurrence": 7, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 595}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 169, in runTest\n    self.assert_parse(cmd, outputCmd)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 428, in parse\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/options.py\", line 262, in parse_args\n    return ArgumentParser.parse_args(self, *args, **kwargs)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/argparse.py\", line 1727, in parse_args\n    args, argv = self.parse_known_args(args, namespace)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/options.py\", line 268, in parse_known_args\n    return ArgumentParser.parse_known_args(self, *args, **kwargs)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/argparse.py\", line 1759, in parse_known_args\n    namespace, args = self._parse_known_args(args, namespace)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/argparse.py\", line 1965, in _parse_known_args\n    start_index = consume_optional(start_index)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/argparse.py\", line 1905, in consume_optional\n    take_action(action, args, option_string)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/argparse.py\", line 1817, in take_action\n    argument_values = self._get_values(action, argument_strings)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/argparse.py\", line 2258, in _get_values\n    value = self._get_value(action, arg_string)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/argparse.py\", line 2287, in _get_value\n    result = type_func(arg_string)\n  File \"pykickstart.commands.network\", line 595, in teamslaves_cb\nIndexError: list index out of range\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -420,7 +420,7 @@", "             if value:", "                 parts = value.split(\"'\")", "                 if ((len(parts) % 2) == 1):", "-                    if (not parts[(- 1)]):", "+                    if (not parts[(- 2)]):", "                         parts = parts[:(- 1)]", "                     else:", "                         parts.append('')"]]]}, "212": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\nAssertionError: <pykickstart.commands.network.F16_NetworkData object at 0x7fb53e35ada0> != <pykickstart.commands.network.F16_NetworkData object at 0x7fb53e38af98>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -35,7 +35,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.device and (self.device == y.device))", "+        return (self.device and (self.device not in y.device))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]]}, "290": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_NotIn", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 6, "result-data": [{"occurrence": 6, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 285, in runTest\n    \"network  --bootproto=dhcp --device=bridge0 --bridgeslaves=ens3,ens7 --bridgeopts=priority=40000\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 837, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nBad format of --bridgeopts, expecting key=value options separated by ','\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -563,7 +563,7 @@", "             opts = retval.bridgeopts.split(',')", "             for opt in opts:", "                 (_key, _sep, value) = opt.partition('=')", "-                if ((not value) or ('=' in value)):", "+                if ((not value) or ('=' not in value)):", "                     msg = formatErrorMsg(self.lineno, msg=_(\"Bad format of --bridgeopts, expecting key=value options separated by ','\"))", "                     raise KickstartParseError(msg)", "         return retval"]]]}, "77": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_LtE", "10", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_LtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 10, "result-data": [{"occurrence": 10, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --netmask=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --netmask=\n?                                                          -----------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -62,7 +62,7 @@", "             retval += (' --mtu=%s' % self.mtu)", "         if (self.nameserver != ''):", "             retval += (' --nameserver=%s' % self.nameserver)", "-        if (self.netmask != ''):", "+        if (self.netmask <= ''):", "             retval += (' --netmask=%s' % self.netmask)", "         if self.nodns:", "             retval += ' --nodns'"]]]}, "148": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_NotEq", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_NotEq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 4, "result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 266, in runTest\n    self.assert_parse_error(\"network --interfacename=vlan\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -533,7 +533,7 @@", "         except ValueError:", "             return _(\"If network --interfacename contains a '.', valid vlan id should follow.\")", "     (empty, sep, id_candidate) = name.partition('vlan')", "-    if (sep and (empty == '')):", "+    if (sep and (empty != '')):", "         try:", "             vlan_id = int(id_candidate)", "         except ValueError:"]]]}, "95": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 434, in parse\nTypeError: unorderable types: F16_NetworkData() >= list()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: unorderable types: F16_NetworkData() >= list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -318,7 +318,7 @@", "         nd = self.dataClass()", "         self.set_to_obj(ns, nd)", "         nd.lineno = self.lineno", "-        if (nd in self.dataList()):", "+        if (nd >= self.dataList()):", "             warnings.warn((_('A network device with the name %s has already been defined.') % nd.device))", "         return nd", " "]]]}, "245": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Is", "9", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 9, "result-data": [{"occurrence": 9, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --nameserver=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --nameserver=\n?                                                          --------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -60,7 +60,7 @@", "             retval += (' --ip=%s' % self.ip)", "         if (self.mtu != ''):", "             retval += (' --mtu=%s' % self.mtu)", "-        if (self.nameserver != ''):", "+        if (self.nameserver is ''):", "             retval += (' --nameserver=%s' % self.nameserver)", "         if (self.netmask != ''):", "             retval += (' --netmask=%s' % self.netmask)"]]]}, "62": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_In", "16", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_In", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 16, "result-data": [{"occurrence": 16, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 213, in runTest\n    F21_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 206, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeslaves=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeslaves=\n?                                                          ----------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -213,7 +213,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = F21_NetworkData._getArgsAsStr(self)", "-        if (self.bridgeslaves != ''):", "+        if (self.bridgeslaves in ''):", "             retval += (' --bridgeslaves=%s' % self.bridgeslaves)", "         if (self.bridgeopts != ''):", "             retval += (' --bridgeopts=%s' % self.bridgeopts)"]]]}, "190": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_NotIn", "19", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 19, "result-data": [{"occurrence": 19, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -272,7 +272,7 @@", "         retval = F21_NetworkData._getArgsAsStr(self)", "         if (self.bridgeslaves != ''):", "             retval += (' --bridgeslaves=%s' % self.bridgeslaves)", "-        if (self.bridgeopts != ''):", "+        if (self.bridgeopts not in ''):", "             retval += (' --bridgeopts=%s' % self.bridgeopts)", "         return retval", " "]]]}, "84": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_LtE", "17", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_LtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 17, "result-data": [{"occurrence": 17, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 213, in runTest\n    F21_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 206, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeopts=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeopts=\n?                                                          --------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -215,7 +215,7 @@", "         retval = F21_NetworkData._getArgsAsStr(self)", "         if (self.bridgeslaves != ''):", "             retval += (' --bridgeslaves=%s' % self.bridgeslaves)", "-        if (self.bridgeopts != ''):", "+        if (self.bridgeopts <= ''):", "             retval += (' --bridgeopts=%s' % self.bridgeopts)", "         return retval", " "]]]}, "306": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_GtE", "15", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 15, "result-data": [{"occurrence": 15, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bondopts=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bondopts=\n?                                                          ------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -157,7 +157,7 @@", "         retval = F16_NetworkData._getArgsAsStr(self)", "         if (self.bondslaves != ''):", "             retval += (' --bondslaves=%s' % self.bondslaves)", "-        if (self.bondopts != ''):", "+        if (self.bondopts >= ''):", "             retval += (' --bondopts=%s' % self.bondopts)", "         if self.vlanid:", "             retval += (' --vlanid=%s' % self.vlanid)"]]]}, "97": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_GtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 2, "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"pykickstart.commands.network\", line 509, in __init__\n  File \"pykickstart.commands.network\", line 489, in __init__\n  File \"pykickstart.commands.network\", line 330, in __init__\n  File \"pykickstart.commands.network\", line 515, in _getParser\nTypeError: unorderable types: str() >= list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -384,7 +384,7 @@", "     def _getParser(self):", "         op = F9_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' >= action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'ibft' value was added.\" % versionToLongString(F16)))", "                 break", "         op.add_argument('--activate', action='store_true', version=F16, default=False, help='\\n                        As noted above, using this option ensures any matching\\n                        devices beyond the first will also be activated.')"]]]}, "20": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Gt", "8", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 8, "result-data": [{"occurrence": 8, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -58,7 +58,7 @@", "             retval += (' --hostname=%s' % self.hostname)", "         if (self.ip != ''):", "             retval += (' --ip=%s' % self.ip)", "-        if (self.mtu != ''):", "+        if (self.mtu > ''):", "             retval += (' --mtu=%s' % self.mtu)", "         if (self.nameserver != ''):", "             retval += (' --nameserver=%s' % self.nameserver)"]]]}, "162": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_Lt", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 6, "result-data": [{"occurrence": 6, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 295, in runTest\n    self.assert_parse_error(\"network --device bridge0 --bootproto dhcp \"\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -563,7 +563,7 @@", "             opts = retval.bridgeopts.split(',')", "             for opt in opts:", "                 (_key, _sep, value) = opt.partition('=')", "-                if ((not value) or ('=' in value)):", "+                if ((not value) or ('=' < value)):", "                     msg = formatErrorMsg(self.lineno, msg=_(\"Bad format of --bridgeopts, expecting key=value options separated by ','\"))", "                     raise KickstartParseError(msg)", "         return retval"]]]}, "238": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Is", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 2, "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n?                                            ++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -46,7 +46,7 @@", "             retval += (' --bootproto=%s' % self.bootProto)", "         if (self.dhcpclass != ''):", "             retval += (' --dhcpclass=%s' % self.dhcpclass)", "-        if (self.device != ''):", "+        if (self.device is ''):", "             retval += (' --device=%s' % self.device)", "         if (self.essid != ''):", "             retval += (' --essid=\"%s\"' % self.essid)"]]]}, "277": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "boolean_replacer", "13", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "boolean_replacer", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 13, "result-data": [{"occurrence": 13, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 463}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --noipv4\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --noipv4\n?                                                          ---------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -344,7 +344,7 @@", " ", "     def _getParser(self):", "         op = FC4_Network._getParser(self)", "-        op.add_argument('--noipv4', action='store_true', default=False, version=FC6, help='Disable IPv4 on this device.')", "+        op.add_argument('--noipv4', action='store_true', default=True, version=FC6, help='Disable IPv4 on this device.')", "         op.add_argument('--noipv6', action='store_true', default=False, version=FC6, help='Disable IPv6 on this device.')", "         return op", " "]]]}, "196": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_LtE_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_LtE_with_NotEq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtEWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 826, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nThe vlan id is out of the 0-4095 vlan id range.\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 275, in runTest\n    self.assert_parse(\"network --interfacename=vlan0\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: The following problem occurred on line 0 of the kickstart file:\n\nThe vlan id is out of the 0-4095 vlan id range.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -539,7 +539,7 @@", "         except ValueError:", "             return _(\"If network --interfacename starts with 'vlan', valid vlan id should follow.\")", "     if (vlan_id is not None):", "-        if (not (MIN_VLAN_ID <= vlan_id <= MAX_VLAN_ID)):", "+        if (not (MIN_VLAN_ID != vlan_id <= MAX_VLAN_ID)):", "             return (_('The vlan id is out of the %(minimum)d-%(maximum)d vlan id range.') % {'minimum': MIN_VLAN_ID, 'maximum': MAX_VLAN_ID})", "     return None", " "]]]}, "275": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "boolean_replacer", "11", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "boolean_replacer", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 11, "result-data": [{"occurrence": 11, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 419}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --nodns\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --nodns\n?                                                          --------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -308,7 +308,7 @@", "         op.add_argument('--mtu', version=FC3, help='The MTU of the device.')", "         op.add_argument('--nameserver', version=FC3, help='\\n                        Primary nameserver, as an IP address. Multiple\\n                        nameservers must be comma separated.')", "         op.add_argument('--netmask', version=FC3, help='Netmask for the installed system.')", "-        op.add_argument('--nodns', action='store_true', default=False, version=FC3, help='Do not configure any DNS server.')", "+        op.add_argument('--nodns', action='store_true', default=True, version=FC3, help='Do not configure any DNS server.')", "         op.add_argument('--onboot', type=ksboolean, version=FC3, help='\\n                        Whether or not to enable the device a boot time.')", "         op.add_argument('--wepkey', version=FC3, help='The WEP encryption key for wireless networks.')", "         return op"]]]}, "178": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_NotIn", "7", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 7, "result-data": [{"occurrence": 7, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -56,7 +56,7 @@", "             retval += (' --gateway=%s' % self.gateway)", "         if (self.hostname != ''):", "             retval += (' --hostname=%s' % self.hostname)", "-        if (self.ip != ''):", "+        if (self.ip not in ''):", "             retval += (' --ip=%s' % self.ip)", "         if (self.mtu != ''):", "             retval += (' --mtu=%s' % self.mtu)"]]]}, "185": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_NotIn", "14", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 14, "result-data": [{"occurrence": 14, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -155,7 +155,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = F16_NetworkData._getArgsAsStr(self)", "-        if (self.bondslaves != ''):", "+        if (self.bondslaves not in ''):", "             retval += (' --bondslaves=%s' % self.bondslaves)", "         if (self.bondopts != ''):", "             retval += (' --bondopts=%s' % self.bondopts)"]]]}, "121": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Lt", "19", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 19, "result-data": [{"occurrence": 19, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 285, in runTest\n    \"network  --bootproto=dhcp --device=bridge0 --bridgeslaves=ens3,ens7 --bridgeopts=priority=40000\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'netw[31 chars]bridge0 --bridgeslaves=ens3,ens7\\n' != 'netw[31 chars]bridge0 --bridgeslaves=ens3,ens7 --bridgeopts=priority=40000\\n'\n- network  --bootproto=dhcp --device=bridge0 --bridgeslaves=ens3,ens7\n+ network  --bootproto=dhcp --device=bridge0 --bridgeslaves=ens3,ens7 --bridgeopts=priority=40000\n?                                                                    ++++++++++++++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -272,7 +272,7 @@", "         retval = F21_NetworkData._getArgsAsStr(self)", "         if (self.bridgeslaves != ''):", "             retval += (' --bridgeslaves=%s' % self.bridgeslaves)", "-        if (self.bridgeopts != ''):", "+        if (self.bridgeopts < ''):", "             retval += (' --bridgeopts=%s' % self.bridgeopts)", "         return retval", " "]]]}, "323": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "number_replacer", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "number_replacer", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 4, "result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 508}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -377,7 +377,7 @@", "     removedKeywords = F9_Network.removedKeywords", "     removedAttrs = F9_Network.removedAttrs", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         F9_Network.__init__(self, writePriority, *args, **kwargs)", "         self.bootprotoList.append(BOOTPROTO_IBFT)", " "]]]}, "139": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_IsNot", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_IsNot", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 2, "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -384,7 +384,7 @@", "     def _getParser(self):", "         op = F9_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' is not action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'ibft' value was added.\" % versionToLongString(F16)))", "                 break", "         op.add_argument('--activate', action='store_true', version=F16, default=False, help='\\n                        As noted above, using this option ensures any matching\\n                        devices beyond the first will also be activated.')"]]]}, "46": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_In", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --dhcpclass=CLASS --device=eth0\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --dhcpclass=CLASS --device=eth0\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n?         +++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -42,7 +42,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = ''", "-        if (self.bootProto != ''):", "+        if (self.bootProto in ''):", "             retval += (' --bootproto=%s' % self.bootProto)", "         if (self.dhcpclass != ''):", "             retval += (' --dhcpclass=%s' % self.dhcpclass)"]]]}, "264": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "boolean_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "boolean_replacer", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 51}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -28,7 +28,7 @@", "         self.mtu = kwargs.get('mtu', '')", "         self.nameserver = kwargs.get('nameserver', '')", "         self.netmask = kwargs.get('netmask', '')", "-        self.nodns = kwargs.get('nodns', False)", "+        self.nodns = kwargs.get('nodns', True)", "         self.onboot = kwargs.get('onboot', True)", "         self.wepkey = kwargs.get('wepkey', '')", " "]]]}, "334": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Eq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Eq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 2, "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n?                                            ++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -46,7 +46,7 @@", "             retval += (' --bootproto=%s' % self.bootProto)", "         if (self.dhcpclass != ''):", "             retval += (' --dhcpclass=%s' % self.dhcpclass)", "-        if (self.device != ''):", "+        if (self.device == ''):", "             retval += (' --device=%s' % self.device)", "         if (self.essid != ''):", "             retval += (' --essid=\"%s\"' % self.essid)"]]]}, "160": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_Lt", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 4, "result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -495,7 +495,7 @@", "     def _getParser(self):", "         op = FC6_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' < action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'query' value was added.\" % versionToLongString(RHEL5)))", "                 break", "         return op"]]]}, "64": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_In", "18", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_In", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 18, "result-data": [{"occurrence": 18, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 251, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeslaves=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeslaves=\n?                                                          ----------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -270,7 +270,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = F21_NetworkData._getArgsAsStr(self)", "-        if (self.bridgeslaves != ''):", "+        if (self.bridgeslaves in ''):", "             retval += (' --bridgeslaves=%s' % self.bridgeslaves)", "         if (self.bridgeopts != ''):", "             retval += (' --bridgeopts=%s' % self.bridgeopts)"]]]}, "316": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_In", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_In", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 4, "result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -533,7 +533,7 @@", "         except ValueError:", "             return _(\"If network --interfacename contains a '.', valid vlan id should follow.\")", "     (empty, sep, id_candidate) = name.partition('vlan')", "-    if (sep and (empty == '')):", "+    if (sep and (empty in '')):", "         try:", "             vlan_id = int(id_candidate)", "         except ValueError:"]]]}, "213": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 33, in runTest\n    self.assertNotEqual(self.assert_parse(\"network --device=eth0\"), None)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 864, in assertNotEqual\n    if not first != second:\n  File \"pykickstart.commands.network\", line 62, in __ne__\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -38,7 +38,7 @@", "         return (self.device and (self.device == y.device))", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self not in y))", " ", "     def _getArgsAsStr(self):", "         retval = ''"]]]}, "44": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_LtE_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_LtE_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtEWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 826, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nThe vlan id is out of the 0-4095 vlan id range.\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 275, in runTest\n    self.assert_parse(\"network --interfacename=vlan0\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: The following problem occurred on line 0 of the kickstart file:\n\nThe vlan id is out of the 0-4095 vlan id range.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -539,7 +539,7 @@", "         except ValueError:", "             return _(\"If network --interfacename starts with 'vlan', valid vlan id should follow.\")", "     if (vlan_id is not None):", "-        if (not (MIN_VLAN_ID <= vlan_id <= MAX_VLAN_ID)):", "+        if (not (MIN_VLAN_ID < vlan_id <= MAX_VLAN_ID)):", "             return (_('The vlan id is out of the %(minimum)d-%(maximum)d vlan id range.') % {'minimum': MIN_VLAN_ID, 'maximum': MAX_VLAN_ID})", "     return None", " "]]]}, "75": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_LtE", "8", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_LtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 8, "result-data": [{"occurrence": 8, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --mtu=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --mtu=\n?                                                          -------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -58,7 +58,7 @@", "             retval += (' --hostname=%s' % self.hostname)", "         if (self.ip != ''):", "             retval += (' --ip=%s' % self.ip)", "-        if (self.mtu != ''):", "+        if (self.mtu <= ''):", "             retval += (' --mtu=%s' % self.mtu)", "         if (self.nameserver != ''):", "             retval += (' --nameserver=%s' % self.nameserver)"]]]}, "72": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_LtE", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_LtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 5, "result-data": [{"occurrence": 5, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --gateway=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --gateway=\n?                                                          -----------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -52,7 +52,7 @@", "             retval += (' --essid=\"%s\"' % self.essid)", "         if (self.ethtool != ''):", "             retval += (' --ethtool=\"%s\"' % self.ethtool)", "-        if (self.gateway != ''):", "+        if (self.gateway <= ''):", "             retval += (' --gateway=%s' % self.gateway)", "         if (self.hostname != ''):", "             retval += (' --hostname=%s' % self.hostname)"]]]}, "98": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_GtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 3, "result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 218, in runTest\n    \"network  --bootproto=dhcp --device=bridge0 --bridgeslaves=ens3,ens7 --bridgeopts=priority=40000\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 669, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nBad format of --bridgeopts, expecting key=value options separated by ','\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -460,7 +460,7 @@", "             opts = retval.bridgeopts.split(',')", "             for opt in opts:", "                 (_key, _sep, value) = opt.partition('=')", "-                if ((not value) or ('=' in value)):", "+                if ((not value) or ('=' >= value)):", "                     msg = formatErrorMsg(self.lineno, msg=_(\"Bad format of --bridgeopts, expecting key=value options separated by ','\"))", "                     raise KickstartParseError(msg)", "         return retval"]]]}, "179": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_NotIn", "8", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 8, "result-data": [{"occurrence": 8, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -58,7 +58,7 @@", "             retval += (' --hostname=%s' % self.hostname)", "         if (self.ip != ''):", "             retval += (' --ip=%s' % self.ip)", "-        if (self.mtu != ''):", "+        if (self.mtu not in ''):", "             retval += (' --mtu=%s' % self.mtu)", "         if (self.nameserver != ''):", "             retval += (' --nameserver=%s' % self.nameserver)"]]]}, "83": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_LtE", "16", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_LtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 16, "result-data": [{"occurrence": 16, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 213, in runTest\n    F21_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 206, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeslaves=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeslaves=\n?                                                          ----------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -213,7 +213,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = F21_NetworkData._getArgsAsStr(self)", "-        if (self.bridgeslaves != ''):", "+        if (self.bridgeslaves <= ''):", "             retval += (' --bridgeslaves=%s' % self.bridgeslaves)", "         if (self.bridgeopts != ''):", "             retval += (' --bridgeopts=%s' % self.bridgeopts)"]]]}, "102": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --dhcpclass=CLASS --device=eth0\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --dhcpclass=CLASS --device=eth0\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n?         +++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -42,7 +42,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = ''", "-        if (self.bootProto != ''):", "+        if (self.bootProto < ''):", "             retval += (' --bootproto=%s' % self.bootProto)", "         if (self.dhcpclass != ''):", "             retval += (' --dhcpclass=%s' % self.dhcpclass)"]]]}, "263": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_LtE_with_IsNot", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_LtE_with_IsNot", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtEWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 279, in runTest\n    self.assert_parse_error(\"network --interfacename=vlan9001\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -539,7 +539,7 @@", "         except ValueError:", "             return _(\"If network --interfacename starts with 'vlan', valid vlan id should follow.\")", "     if (vlan_id is not None):", "-        if (not (MIN_VLAN_ID <= vlan_id <= MAX_VLAN_ID)):", "+        if (not (MIN_VLAN_ID <= vlan_id is not MAX_VLAN_ID)):", "             return (_('The vlan id is out of the %(minimum)d-%(maximum)d vlan id range.') % {'minimum': MIN_VLAN_ID, 'maximum': MAX_VLAN_ID})", "     return None", " "]]]}, "126": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_IsNot_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_IsNot_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 825, in parse\nTypeError: unorderable types: NoneType() < NoneType()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 251, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: unorderable types: NoneType() < NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -554,7 +554,7 @@", "     def parse(self, args):", "         retval = F21_Network.parse(self, args)", "         error_message = validate_network_interface_name(retval.interfacename)", "-        if (error_message is not None):", "+        if (error_message < None):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=error_message))", "         if retval.bridgeopts:", "             if (not retval.bridgeslaves):"]]]}, "134": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "arithmetic_operator_deletion", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "arithmetic_operator_deletion", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.arithmetic_operator_deletion.ReverseUnarySub", "line_number": 597}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 195, in runTest\n    self.assertEqual(network_data.teamslaves, value)\nAssertionError: Lists differ: [] != [('eth1', ''), ('eth2', '{\"prio\": 100}')]\n\nSecond list contains 2 additional elements.\nFirst extra element 0:\n('eth1', '')\n\n- []\n+ [('eth1', ''), ('eth2', '{\"prio\": 100}')]\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -421,7 +421,7 @@", "                 parts = value.split(\"'\")", "                 if ((len(parts) % 2) == 1):", "                     if (not parts[(- 1)]):", "-                        parts = parts[:(- 1)]", "+                        parts = parts[:(+ 1)]", "                     else:", "                         parts.append('')", "                 it = iter(parts)"]]]}, "332": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Eq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --dhcpclass=CLASS --device=eth0\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --dhcpclass=CLASS --device=eth0\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n?         +++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -42,7 +42,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = ''", "-        if (self.bootProto != ''):", "+        if (self.bootProto == ''):", "             retval += (' --bootproto=%s' % self.bootProto)", "         if (self.dhcpclass != ''):", "             retval += (' --dhcpclass=%s' % self.dhcpclass)"]]]}, "257": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 69, in assert_parse\n    self.parser.readKickstartFromString(ks_string)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/parser.py\", line 776, in readKickstartFromString\n    self._stateMachine(i)\nUserWarning: A network device with the name eth1 has already been defined.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 72, in runTest\n    network --device=eth1\"\"\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 71, in assert_parse\n    self.fail(\"Failed while parsing commands %s: %s\" % (ks_string, e))\nAssertionError: Failed while parsing commands \nnetwork --device=eth0\nnetwork --device=eth1: A network device with the name eth1 has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -35,7 +35,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.device and (self.device == y.device))", "+        return (self.device and (self.device >= y.device))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]]}, "48": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_In", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_In", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 2, "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n?                                            ++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -46,7 +46,7 @@", "             retval += (' --bootproto=%s' % self.bootProto)", "         if (self.dhcpclass != ''):", "             retval += (' --dhcpclass=%s' % self.dhcpclass)", "-        if (self.device != ''):", "+        if (self.device in ''):", "             retval += (' --device=%s' % self.device)", "         if (self.essid != ''):", "             retval += (' --essid=\"%s\"' % self.essid)"]]]}, "21": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Gt", "9", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 9, "result-data": [{"occurrence": 9, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -60,7 +60,7 @@", "             retval += (' --ip=%s' % self.ip)", "         if (self.mtu != ''):", "             retval += (' --mtu=%s' % self.mtu)", "-        if (self.nameserver != ''):", "+        if (self.nameserver > ''):", "             retval += (' --nameserver=%s' % self.nameserver)", "         if (self.netmask != ''):", "             retval += (' --netmask=%s' % self.netmask)"]]]}, "315": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_In", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_In", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 3, "result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -526,7 +526,7 @@", "     vlan_id = None", "     (vlan, dot, id_candidate) = name.partition('.')", "     if dot:", "-        if (vlan == 'vlan'):", "+        if (vlan in 'vlan'):", "             return _(\"When using the <prefix>.<vlan id> interface name notation, <prefix> can't be equal to 'vlan'.\")", "         try:", "             vlan_id = int(id_candidate)"]]]}, "338": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Eq", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Eq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 6, "result-data": [{"occurrence": 6, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --hostname=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --hostname=\n?                                                          ------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -54,7 +54,7 @@", "             retval += (' --ethtool=\"%s\"' % self.ethtool)", "         if (self.gateway != ''):", "             retval += (' --gateway=%s' % self.gateway)", "-        if (self.hostname != ''):", "+        if (self.hostname == ''):", "             retval += (' --hostname=%s' % self.hostname)", "         if (self.ip != ''):", "             retval += (' --ip=%s' % self.ip)"]]]}, "305": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_GtE", "14", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 14, "result-data": [{"occurrence": 14, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bondslaves=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bondslaves=\n?                                                          --------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -155,7 +155,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = F16_NetworkData._getArgsAsStr(self)", "-        if (self.bondslaves != ''):", "+        if (self.bondslaves >= ''):", "             retval += (' --bondslaves=%s' % self.bondslaves)", "         if (self.bondopts != ''):", "             retval += (' --bondopts=%s' % self.bondopts)"]]]}, "228": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_Gt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 2, "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 169, in runTest\n    self.assert_parse(cmd, outputCmd)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'netw[49 chars]-teamconfig=\"{\\\\\"runner\\\\\": {\\\\\"name\\\\\": \\\\\"roundrobin\\\\\"}}\"\\n' != 'netw[49 chars]-teamslaves=\"p3p1,p3p2\" --teamconfig=\"{\\\\\"runn[37 chars]}\"\\n'\n- network  --bootproto=dhcp --device=team0 --activate --teamconfig=\"{\\\"runner\\\": {\\\"name\\\": \\\"roundrobin\\\"}}\"\n+ network  --bootproto=dhcp --device=team0 --activate --teamslaves=\"p3p1,p3p2\" --teamconfig=\"{\\\"runner\\\": {\\\"name\\\": \\\"roundrobin\\\"}}\"\n?                                                    +++++++++++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -419,7 +419,7 @@", "             teamslaves = []", "             if value:", "                 parts = value.split(\"'\")", "-                if ((len(parts) % 2) == 1):", "+                if ((len(parts) % 2) > 1):", "                     if (not parts[(- 1)]):", "                         parts = parts[:(- 1)]", "                     else:"]]]}, "150": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_LtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"pykickstart.commands.network\", line 509, in __init__\n  File \"pykickstart.commands.network\", line 489, in __init__\n  File \"pykickstart.commands.network\", line 330, in __init__\n  File \"pykickstart.commands.network\", line 513, in _getParser\n  File \"pykickstart.commands.network\", line 495, in _getParser\nTypeError: unorderable types: str() <= list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -368,7 +368,7 @@", "     def _getParser(self):", "         op = F8_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' <= action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'query' value was added.\" % versionToLongString(F9)))", "                 break", "         return op"]]]}, "18": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Gt", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 6, "result-data": [{"occurrence": 6, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -54,7 +54,7 @@", "             retval += (' --ethtool=\"%s\"' % self.ethtool)", "         if (self.gateway != ''):", "             retval += (' --gateway=%s' % self.gateway)", "-        if (self.hostname != ''):", "+        if (self.hostname > ''):", "             retval += (' --hostname=%s' % self.hostname)", "         if (self.ip != ''):", "             retval += (' --ip=%s' % self.ip)"]]]}, "325": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "number_replacer", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "number_replacer", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 6, "result-data": [{"occurrence": 6, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 591}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 169, in runTest\n    self.assert_parse(cmd, outputCmd)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'netw[49 chars]-teamconfig=\"{\\\\\"runner\\\\\": {\\\\\"name\\\\\": \\\\\"roundrobin\\\\\"}}\"\\n' != 'netw[49 chars]-teamslaves=\"p3p1,p3p2\" --teamconfig=\"{\\\\\"runn[37 chars]}\"\\n'\n- network  --bootproto=dhcp --device=team0 --activate --teamconfig=\"{\\\"runner\\\": {\\\"name\\\": \\\"roundrobin\\\"}}\"\n+ network  --bootproto=dhcp --device=team0 --activate --teamslaves=\"p3p1,p3p2\" --teamconfig=\"{\\\"runner\\\": {\\\"name\\\": \\\"roundrobin\\\"}}\"\n?                                                    +++++++++++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -419,7 +419,7 @@", "             teamslaves = []", "             if value:", "                 parts = value.split(\"'\")", "-                if ((len(parts) % 2) == 1):", "+                if ((len(parts) % 2) == 2):", "                     if (not parts[(- 1)]):", "                         parts = parts[:(- 1)]", "                     else:"]]]}, "16": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Gt", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 4, "result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -50,7 +50,7 @@", "             retval += (' --device=%s' % self.device)", "         if (self.essid != ''):", "             retval += (' --essid=\"%s\"' % self.essid)", "-        if (self.ethtool != ''):", "+        if (self.ethtool > ''):", "             retval += (' --ethtool=\"%s\"' % self.ethtool)", "         if (self.gateway != ''):", "             retval += (' --gateway=%s' % self.gateway)"]]]}, "297": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_GtE", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 6, "result-data": [{"occurrence": 6, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --hostname=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --hostname=\n?                                                          ------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -54,7 +54,7 @@", "             retval += (' --ethtool=\"%s\"' % self.ethtool)", "         if (self.gateway != ''):", "             retval += (' --gateway=%s' % self.gateway)", "-        if (self.hostname != ''):", "+        if (self.hostname >= ''):", "             retval += (' --hostname=%s' % self.hostname)", "         if (self.ip != ''):", "             retval += (' --ip=%s' % self.ip)"]]]}, "207": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_Is", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 4, "result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -495,7 +495,7 @@", "     def _getParser(self):", "         op = FC6_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' is action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'query' value was added.\" % versionToLongString(RHEL5)))", "                 break", "         return op"]]]}, "146": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_NotEq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_NotEq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 2, "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 169, in runTest\n    self.assert_parse(cmd, outputCmd)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'netw[49 chars]-teamconfig=\"{\\\\\"runner\\\\\": {\\\\\"name\\\\\": \\\\\"roundrobin\\\\\"}}\"\\n' != 'netw[49 chars]-teamslaves=\"p3p1,p3p2\" --teamconfig=\"{\\\\\"runn[37 chars]}\"\\n'\n- network  --bootproto=dhcp --device=team0 --activate --teamconfig=\"{\\\"runner\\\": {\\\"name\\\": \\\"roundrobin\\\"}}\"\n+ network  --bootproto=dhcp --device=team0 --activate --teamslaves=\"p3p1,p3p2\" --teamconfig=\"{\\\"runner\\\": {\\\"name\\\": \\\"roundrobin\\\"}}\"\n?                                                    +++++++++++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -419,7 +419,7 @@", "             teamslaves = []", "             if value:", "                 parts = value.split(\"'\")", "-                if ((len(parts) % 2) == 1):", "+                if ((len(parts) % 2) != 1):", "                     if (not parts[(- 1)]):", "                         parts = parts[:(- 1)]", "                     else:"]]]}, "299": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_GtE", "8", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 8, "result-data": [{"occurrence": 8, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --mtu=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --mtu=\n?                                                          -------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -58,7 +58,7 @@", "             retval += (' --hostname=%s' % self.hostname)", "         if (self.ip != ''):", "             retval += (' --ip=%s' % self.ip)", "-        if (self.mtu != ''):", "+        if (self.mtu >= ''):", "             retval += (' --mtu=%s' % self.mtu)", "         if (self.nameserver != ''):", "             retval += (' --nameserver=%s' % self.nameserver)"]]]}, "170": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "break_continue_replacement", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "break_continue_replacement", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 3, "result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.break_continue.ReplaceBreakWithContinue", "line_number": 734}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -513,7 +513,7 @@", "         for action in op._actions:", "             if ('--bootproto' in action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'ibft' value was added.\" % versionToLongString(RHEL6)))", "-                break", "+                continue", "         op.add_argument('--activate', action='store_true', version=RHEL6, default=False, help='\\n                        As noted above, using this option ensures any matching\\n                        devices beyond the first will also be activated.')", "         op.add_argument('--nodefroute', action='store_true', version=RHEL6, default=False, help='\\n                        Prevents grabbing of the default route by the device.\\n                        It can be useful when activating additional devices in\\n                        installer using ``--activate`` option.')", "         op.add_argument('--vlanid', version=RHEL6, help='\\n                        Id (802.1q tag) of vlan device to be created using parent\\n                        device specified by ``--device`` option. For example::\\n\\n                            ``network --device=eth0 --vlanid=171``\\n\\n                        will create vlan device ``eth0.171``.')"]]]}, "346": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Eq", "14", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Eq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 14, "result-data": [{"occurrence": 14, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bondslaves=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bondslaves=\n?                                                          --------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -155,7 +155,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = F16_NetworkData._getArgsAsStr(self)", "-        if (self.bondslaves != ''):", "+        if (self.bondslaves == ''):", "             retval += (' --bondslaves=%s' % self.bondslaves)", "         if (self.bondopts != ''):", "             retval += (' --bondopts=%s' % self.bondopts)"]]]}, "303": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_GtE", "12", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 12, "result-data": [{"occurrence": 12, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --ipv6=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --ipv6=\n?                                                          --------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -118,7 +118,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = FC6_NetworkData._getArgsAsStr(self)", "-        if (self.ipv6 != ''):", "+        if (self.ipv6 >= ''):", "             retval += (' --ipv6=%s' % self.ipv6)", "         return retval", " "]]]}, "37": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_IsNot_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_IsNot_with_NotEq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -538,7 +538,7 @@", "             vlan_id = int(id_candidate)", "         except ValueError:", "             return _(\"If network --interfacename starts with 'vlan', valid vlan id should follow.\")", "-    if (vlan_id is not None):", "+    if (vlan_id != None):", "         if (not (MIN_VLAN_ID <= vlan_id <= MAX_VLAN_ID)):", "             return (_('The vlan id is out of the %(minimum)d-%(maximum)d vlan id range.') % {'minimum': MIN_VLAN_ID, 'maximum': MAX_VLAN_ID})", "     return None"]]]}, "347": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Eq", "15", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Eq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 15, "result-data": [{"occurrence": 15, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bondopts=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bondopts=\n?                                                          ------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -157,7 +157,7 @@", "         retval = F16_NetworkData._getArgsAsStr(self)", "         if (self.bondslaves != ''):", "             retval += (' --bondslaves=%s' % self.bondslaves)", "-        if (self.bondopts != ''):", "+        if (self.bondopts == ''):", "             retval += (' --bondopts=%s' % self.bondopts)", "         if self.vlanid:", "             retval += (' --vlanid=%s' % self.vlanid)"]]]}, "283": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "boolean_replacer", "19", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "boolean_replacer", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 19, "result-data": [{"occurrence": 19, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 740}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 116, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --nodefroute\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --nodefroute\n?                                                          -------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -515,7 +515,7 @@", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'ibft' value was added.\" % versionToLongString(RHEL6)))", "                 break", "         op.add_argument('--activate', action='store_true', version=RHEL6, default=False, help='\\n                        As noted above, using this option ensures any matching\\n                        devices beyond the first will also be activated.')", "-        op.add_argument('--nodefroute', action='store_true', version=RHEL6, default=False, help='\\n                        Prevents grabbing of the default route by the device.\\n                        It can be useful when activating additional devices in\\n                        installer using ``--activate`` option.')", "+        op.add_argument('--nodefroute', action='store_true', version=RHEL6, default=True, help='\\n                        Prevents grabbing of the default route by the device.\\n                        It can be useful when activating additional devices in\\n                        installer using ``--activate`` option.')", "         op.add_argument('--vlanid', version=RHEL6, help='\\n                        Id (802.1q tag) of vlan device to be created using parent\\n                        device specified by ``--device`` option. For example::\\n\\n                            ``network --device=eth0 --vlanid=171``\\n\\n                        will create vlan device ``eth0.171``.')", "         op.add_argument('--bondslaves', version=RHEL6, help='\\n                        Bonded device with name specified by ``--device`` option\\n                        will be created using slaves specified in this option.\\n                        Example::\\n\\n                            ``--bondslaves=eth0,eth1``.\\n                        ')", "         op.add_argument('--bondopts', version=RHEL6, help='\\n                        A comma-separated list of optional parameters for bonded\\n                        interface specified by ``--bondslaves`` and ``--device``\\n                        options. Example::\\n\\n                            ``--bondopts=mode=active-backup,primary=eth1``.\\n\\n                        If an option itself contains comma as separator use\\n                        semicolon to separate the options.')"]]]}, "329": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "number_replacer", "10", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "number_replacer", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 10, "result-data": [{"occurrence": 10, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 614}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 428, in parse\nIndexError: list index out of range\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 165, in runTest\n    self.assert_parse(cmd)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: list index out of range\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -429,7 +429,7 @@", "                     devs = devs.strip(',').split(',')", "                     for d in devs[:(- 1)]:", "                         teamslaves.append((d, ''))", "-                    teamslaves.append((devs[(- 1)], cfg))", "+                    teamslaves.append((devs[(- 2)], cfg))", "             return teamslaves", "         op = F19_Network._getParser(self)", "         op.add_argument('--teamslaves', type=teamslaves_cb, version=F20, help='\\n                        Team device with name specified by ``--device`` option\\n                        will be created using slaves specified in this option.\\n                        Slaves are separated by comma. A slave can be followed\\n                        by its configuration which is a single-quoted json format\\n                        string with double qoutes escaped by ``\\'\\'`` character.\\n                        Example::\\n\\n                            ``--teamslaves=\"p3p1\\'{\"prio\": -10, \"sticky\": true}\\',p3p2\\'{\"prio\": 100}\\'\"``.\\n\\n                        See also ``--teamconfig`` option.')"]]]}, "168": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "break_continue_replacement", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "break_continue_replacement", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.break_continue.ReplaceBreakWithContinue", "line_number": 521}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -386,7 +386,7 @@", "         for action in op._actions:", "             if ('--bootproto' in action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'ibft' value was added.\" % versionToLongString(F16)))", "-                break", "+                continue", "         op.add_argument('--activate', action='store_true', version=F16, default=False, help='\\n                        As noted above, using this option ensures any matching\\n                        devices beyond the first will also be activated.')", "         op.add_argument('--nodefroute', action='store_true', version=F16, default=False, help='\\n                        Prevents grabbing of the default route by the device.\\n                        It can be useful when activating additional devices in\\n                        installer using ``--activate`` option.')", "         op.add_argument('--wpakey', default='', version=F16, help='\\n                        The WPA encryption key for wireless networks.')"]]]}, "286": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_NotIn", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 2, "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -384,7 +384,7 @@", "     def _getParser(self):", "         op = F9_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' not in action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'ibft' value was added.\" % versionToLongString(F16)))", "                 break", "         op.add_argument('--activate', action='store_true', version=F16, default=False, help='\\n                        As noted above, using this option ensures any matching\\n                        devices beyond the first will also be activated.')"]]]}, "291": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 236, in runTest\n    F22_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 213, in runTest\n    F21_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 206, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 99, in runTest\n    \"network  --device=eth0 --noipv4\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto= --device=eth0 --noipv4\\n' != 'network  --device=eth0 --noipv4\\n'\n- network  --bootproto= --device=eth0 --noipv4\n?         -------------\n+ network  --device=eth0 --noipv4\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -42,7 +42,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = ''", "-        if (self.bootProto != ''):", "+        if (self.bootProto >= ''):", "             retval += (' --bootproto=%s' % self.bootProto)", "         if (self.dhcpclass != ''):", "             retval += (' --dhcpclass=%s' % self.dhcpclass)"]]]}, "278": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "boolean_replacer", "14", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "boolean_replacer", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 14, "result-data": [{"occurrence": 14, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 465}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --noipv6\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --noipv6\n?                                                          ---------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -345,7 +345,7 @@", "     def _getParser(self):", "         op = FC4_Network._getParser(self)", "         op.add_argument('--noipv4', action='store_true', default=False, version=FC6, help='Disable IPv4 on this device.')", "-        op.add_argument('--noipv6', action='store_true', default=False, version=FC6, help='Disable IPv6 on this device.')", "+        op.add_argument('--noipv6', action='store_true', default=True, version=FC6, help='Disable IPv6 on this device.')", "         return op", " ", " class F8_Network(FC6_Network):"]]]}, "105": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Lt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 3, "result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 40, in runTest\n    \"network  --bootproto=dhcp --device=eth0 --essid=\\\"ESSID\\\" --wepkey=WEPKEY\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --device=eth0 --wepkey=WEPKEY\\n' != 'network  --bootproto=dhcp --device=eth0 --essid=\"ESSID\" --wepkey=WEPKEY\\n'\n- network  --bootproto=dhcp --device=eth0 --wepkey=WEPKEY\n+ network  --bootproto=dhcp --device=eth0 --essid=\"ESSID\" --wepkey=WEPKEY\n?                                        ++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -48,7 +48,7 @@", "             retval += (' --dhcpclass=%s' % self.dhcpclass)", "         if (self.device != ''):", "             retval += (' --device=%s' % self.device)", "-        if (self.essid != ''):", "+        if (self.essid < ''):", "             retval += (' --essid=\"%s\"' % self.essid)", "         if (self.ethtool != ''):", "             retval += (' --ethtool=\"%s\"' % self.ethtool)"]]]}, "335": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Eq", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Eq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 3, "result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --essid=\"\"\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --essid=\"\"\n?                                                          -----------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -48,7 +48,7 @@", "             retval += (' --dhcpclass=%s' % self.dhcpclass)", "         if (self.device != ''):", "             retval += (' --device=%s' % self.device)", "-        if (self.essid != ''):", "+        if (self.essid == ''):", "             retval += (' --essid=\"%s\"' % self.essid)", "         if (self.ethtool != ''):", "             retval += (' --ethtool=\"%s\"' % self.ethtool)"]]]}, "2": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_LtE_with_Eq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_LtE_with_Eq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtEWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 826, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nThe vlan id is out of the 0-4095 vlan id range.\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 263, in runTest\n    self.assert_parse(\"network --interfacename=abc.123\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: The following problem occurred on line 0 of the kickstart file:\n\nThe vlan id is out of the 0-4095 vlan id range.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -539,7 +539,7 @@", "         except ValueError:", "             return _(\"If network --interfacename starts with 'vlan', valid vlan id should follow.\")", "     if (vlan_id is not None):", "-        if (not (MIN_VLAN_ID <= vlan_id <= MAX_VLAN_ID)):", "+        if (not (MIN_VLAN_ID <= vlan_id == MAX_VLAN_ID)):", "             return (_('The vlan id is out of the %(minimum)d-%(maximum)d vlan id range.') % {'minimum': MIN_VLAN_ID, 'maximum': MAX_VLAN_ID})", "     return None", " "]]]}, "5": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_Gt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 2, "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"pykickstart.commands.network\", line 509, in __init__\n  File \"pykickstart.commands.network\", line 489, in __init__\n  File \"pykickstart.commands.network\", line 330, in __init__\n  File \"pykickstart.commands.network\", line 515, in _getParser\nTypeError: unorderable types: str() > list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -384,7 +384,7 @@", "     def _getParser(self):", "         op = F9_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' > action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'ibft' value was added.\" % versionToLongString(F16)))", "                 break", "         op.add_argument('--activate', action='store_true', version=F16, default=False, help='\\n                        As noted above, using this option ensures any matching\\n                        devices beyond the first will also be activated.')"]]]}, "12": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -42,7 +42,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = ''", "-        if (self.bootProto != ''):", "+        if (self.bootProto > ''):", "             retval += (' --bootproto=%s' % self.bootProto)", "         if (self.dhcpclass != ''):", "             retval += (' --dhcpclass=%s' % self.dhcpclass)"]]]}, "135": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "arithmetic_operator_deletion", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "arithmetic_operator_deletion", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.arithmetic_operator_deletion.ReverseUnarySub", "line_number": 610}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 195, in runTest\n    self.assertEqual(network_data.teamslaves, value)\nAssertionError: Lists differ: [('eth1', ''), ('eth1', '{\"prio\": -10, \"sticky\": tru[28 chars] '')] != [('eth1', '{\"prio\": -10, \"sticky\": true}'), ('eth2', '')]\n\nFirst differing element 0:\n('eth1', '')\n('eth1', '{\"prio\": -10, \"sticky\": true}')\n\nFirst list contains 2 additional elements.\nFirst extra element 2:\n('eth2', '')\n\n- [('eth1', ''),\n-  ('eth1', '{\"prio\": -10, \"sticky\": true}'),\n? ^\n\n+ [('eth1', '{\"prio\": -10, \"sticky\": true}'), ('eth2', '')]\n? ^                                          ++++++++++++++\n\n-  ('eth2', ''),\n-  ('eth2', '')]\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -427,7 +427,7 @@", "                 it = iter(parts)", "                 for (devs, cfg) in zip(it, it):", "                     devs = devs.strip(',').split(',')", "-                    for d in devs[:(- 1)]:", "+                    for d in devs[:(+ 1)]:", "                         teamslaves.append((d, ''))", "                     teamslaves.append((devs[(- 1)], cfg))", "             return teamslaves"]]]}, "36": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_IsNot_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_IsNot_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 825, in parse\nTypeError: argument of type 'NoneType' is not iterable\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 251, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -554,7 +554,7 @@", "     def parse(self, args):", "         retval = F21_Network.parse(self, args)", "         error_message = validate_network_interface_name(retval.interfacename)", "-        if (error_message is not None):", "+        if (error_message not in None):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=error_message))", "         if retval.bridgeopts:", "             if (not retval.bridgeslaves):"]]]}, "317": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_LtE_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_LtE_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtEWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 826, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nThe vlan id is out of the 0-4095 vlan id range.\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 263, in runTest\n    self.assert_parse(\"network --interfacename=abc.123\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: The following problem occurred on line 0 of the kickstart file:\n\nThe vlan id is out of the 0-4095 vlan id range.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -539,7 +539,7 @@", "         except ValueError:", "             return _(\"If network --interfacename starts with 'vlan', valid vlan id should follow.\")", "     if (vlan_id is not None):", "-        if (not (MIN_VLAN_ID <= vlan_id <= MAX_VLAN_ID)):", "+        if (not (MIN_VLAN_ID > vlan_id <= MAX_VLAN_ID)):", "             return (_('The vlan id is out of the %(minimum)d-%(maximum)d vlan id range.') % {'minimum': MIN_VLAN_ID, 'maximum': MAX_VLAN_ID})", "     return None", " "]]]}, "258": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 33, in runTest\n    self.assertNotEqual(self.assert_parse(\"network --device=eth0\"), None)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 864, in assertNotEqual\n    if not first != second:\n  File \"pykickstart.commands.network\", line 62, in __ne__\nTypeError: unorderable types: F16_NetworkData() >= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -38,7 +38,7 @@", "         return (self.device and (self.device == y.device))", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self >= y))", " ", "     def _getArgsAsStr(self):", "         retval = ''"]]]}, "47": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_In", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --device=eth0\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --device=eth0\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n?                           ++++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -44,7 +44,7 @@", "         retval = ''", "         if (self.bootProto != ''):", "             retval += (' --bootproto=%s' % self.bootProto)", "-        if (self.dhcpclass != ''):", "+        if (self.dhcpclass in ''):", "             retval += (' --dhcpclass=%s' % self.dhcpclass)", "         if (self.device != ''):", "             retval += (' --device=%s' % self.device)"]]]}, "172": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -44,7 +44,7 @@", "         retval = ''", "         if (self.bootProto != ''):", "             retval += (' --bootproto=%s' % self.bootProto)", "-        if (self.dhcpclass != ''):", "+        if (self.dhcpclass not in ''):", "             retval += (' --dhcpclass=%s' % self.dhcpclass)", "         if (self.device != ''):", "             retval += (' --device=%s' % self.device)"]]]}, "252": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Is", "16", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 16, "result-data": [{"occurrence": 16, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 213, in runTest\n    F21_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 206, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeslaves=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeslaves=\n?                                                          ----------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -213,7 +213,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = F21_NetworkData._getArgsAsStr(self)", "-        if (self.bridgeslaves != ''):", "+        if (self.bridgeslaves is ''):", "             retval += (' --bridgeslaves=%s' % self.bridgeslaves)", "         if (self.bridgeopts != ''):", "             retval += (' --bridgeopts=%s' % self.bridgeopts)"]]]}, "107": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Lt", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 5, "result-data": [{"occurrence": 5, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 44, in runTest\n    \"network  --bootproto=dhcp --device=eth0 --gateway=gateway.wherever.com --hostname=server.wherever.com\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'netw[33 chars]h0 --hostname=server.wherever.com\\n' != 'netw[33 chars]h0 --gateway=gateway.wherever.com --hostname=s[16 chars]om\\n'\n- network  --bootproto=dhcp --device=eth0 --hostname=server.wherever.com\n+ network  --bootproto=dhcp --device=eth0 --gateway=gateway.wherever.com --hostname=server.wherever.com\n?                                        +++++++++++++++++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -52,7 +52,7 @@", "             retval += (' --essid=\"%s\"' % self.essid)", "         if (self.ethtool != ''):", "             retval += (' --ethtool=\"%s\"' % self.ethtool)", "-        if (self.gateway != ''):", "+        if (self.gateway < ''):", "             retval += (' --gateway=%s' % self.gateway)", "         if (self.hostname != ''):", "             retval += (' --hostname=%s' % self.hostname)"]]]}, "282": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "boolean_replacer", "18", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "boolean_replacer", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 18, "result-data": [{"occurrence": 18, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 736}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 116, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --activate\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --activate\n?                                                          -----------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -514,7 +514,7 @@", "             if ('--bootproto' in action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'ibft' value was added.\" % versionToLongString(RHEL6)))", "                 break", "-        op.add_argument('--activate', action='store_true', version=RHEL6, default=False, help='\\n                        As noted above, using this option ensures any matching\\n                        devices beyond the first will also be activated.')", "+        op.add_argument('--activate', action='store_true', version=RHEL6, default=True, help='\\n                        As noted above, using this option ensures any matching\\n                        devices beyond the first will also be activated.')", "         op.add_argument('--nodefroute', action='store_true', version=RHEL6, default=False, help='\\n                        Prevents grabbing of the default route by the device.\\n                        It can be useful when activating additional devices in\\n                        installer using ``--activate`` option.')", "         op.add_argument('--vlanid', version=RHEL6, help='\\n                        Id (802.1q tag) of vlan device to be created using parent\\n                        device specified by ``--device`` option. For example::\\n\\n                            ``network --device=eth0 --vlanid=171``\\n\\n                        will create vlan device ``eth0.171``.')", "         op.add_argument('--bondslaves', version=RHEL6, help='\\n                        Bonded device with name specified by ``--device`` option\\n                        will be created using slaves specified in this option.\\n                        Example::\\n\\n                            ``--bondslaves=eth0,eth1``.\\n                        ')"]]]}, "330": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "number_replacer", "11", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "number_replacer", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 11, "result-data": [{"occurrence": 11, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 701}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -488,7 +488,7 @@", "     removedKeywords = FC6_Network.removedKeywords", "     removedAttrs = FC6_Network.removedAttrs", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         FC6_Network.__init__(self, writePriority, *args, **kwargs)", "         self.bootprotoList.append(BOOTPROTO_QUERY)", " "]]]}, "292": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 40, in runTest\n    \"network  --bootproto=dhcp --device=eth0 --essid=\\\"ESSID\\\" --wepkey=WEPKEY\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'netw[20 chars]p --dhcpclass= --device=eth0 --essid=\"ESSID\" --wepkey=WEPKEY\\n' != 'netw[20 chars]p --device=eth0 --essid=\"ESSID\" --wepkey=WEPKEY\\n'\n- network  --bootproto=dhcp --dhcpclass= --device=eth0 --essid=\"ESSID\" --wepkey=WEPKEY\n?                           -------------\n+ network  --bootproto=dhcp --device=eth0 --essid=\"ESSID\" --wepkey=WEPKEY\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -44,7 +44,7 @@", "         retval = ''", "         if (self.bootProto != ''):", "             retval += (' --bootproto=%s' % self.bootProto)", "-        if (self.dhcpclass != ''):", "+        if (self.dhcpclass >= ''):", "             retval += (' --dhcpclass=%s' % self.dhcpclass)", "         if (self.device != ''):", "             retval += (' --device=%s' % self.device)"]]]}, "43": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_IsNot", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_IsNot", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 4, "result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 266, in runTest\n    self.assert_parse_error(\"network --interfacename=vlan\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -533,7 +533,7 @@", "         except ValueError:", "             return _(\"If network --interfacename contains a '.', valid vlan id should follow.\")", "     (empty, sep, id_candidate) = name.partition('vlan')", "-    if (sep and (empty == '')):", "+    if (sep and (empty is not '')):", "         try:", "             vlan_id = int(id_candidate)", "         except ValueError:"]]]}, "222": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_Is", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 3, "result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -526,7 +526,7 @@", "     vlan_id = None", "     (vlan, dot, id_candidate) = name.partition('.')", "     if dot:", "-        if (vlan == 'vlan'):", "+        if (vlan is 'vlan'):", "             return _(\"When using the <prefix>.<vlan id> interface name notation, <prefix> can't be equal to 'vlan'.\")", "         try:", "             vlan_id = int(id_candidate)"]]]}, "53": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_In", "7", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_In", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 7, "result-data": [{"occurrence": 7, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --ip=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --ip=\n?                                                          ------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -56,7 +56,7 @@", "             retval += (' --gateway=%s' % self.gateway)", "         if (self.hostname != ''):", "             retval += (' --hostname=%s' % self.hostname)", "-        if (self.ip != ''):", "+        if (self.ip in ''):", "             retval += (' --ip=%s' % self.ip)", "         if (self.mtu != ''):", "             retval += (' --mtu=%s' % self.mtu)"]]]}, "231": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\nAssertionError: <pykickstart.commands.network.F16_NetworkData object at 0x7fab89b3bf98> != <pykickstart.commands.network.F16_NetworkData object at 0x7fab89b6acc0>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -35,7 +35,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.device and (self.device == y.device))", "+        return (self.device and (self.device < y.device))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]]}, "31": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Gt", "19", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 19, "result-data": [{"occurrence": 19, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -272,7 +272,7 @@", "         retval = F21_NetworkData._getArgsAsStr(self)", "         if (self.bridgeslaves != ''):", "             retval += (' --bridgeslaves=%s' % self.bridgeslaves)", "-        if (self.bridgeopts != ''):", "+        if (self.bridgeopts > ''):", "             retval += (' --bridgeopts=%s' % self.bridgeopts)", "         return retval", " "]]]}, "94": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_NotEq", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_NotEq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 6, "result-data": [{"occurrence": 6, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 285, in runTest\n    \"network  --bootproto=dhcp --device=bridge0 --bridgeslaves=ens3,ens7 --bridgeopts=priority=40000\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 837, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nBad format of --bridgeopts, expecting key=value options separated by ','\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -563,7 +563,7 @@", "             opts = retval.bridgeopts.split(',')", "             for opt in opts:", "                 (_key, _sep, value) = opt.partition('=')", "-                if ((not value) or ('=' in value)):", "+                if ((not value) or ('=' != value)):", "                     msg = formatErrorMsg(self.lineno, msg=_(\"Bad format of --bridgeopts, expecting key=value options separated by ','\"))", "                     raise KickstartParseError(msg)", "         return retval"]]]}, "337": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Eq", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Eq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 5, "result-data": [{"occurrence": 5, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --gateway=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --gateway=\n?                                                          -----------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -52,7 +52,7 @@", "             retval += (' --essid=\"%s\"' % self.essid)", "         if (self.ethtool != ''):", "             retval += (' --ethtool=\"%s\"' % self.ethtool)", "-        if (self.gateway != ''):", "+        if (self.gateway == ''):", "             retval += (' --gateway=%s' % self.gateway)", "         if (self.hostname != ''):", "             retval += (' --hostname=%s' % self.hostname)"]]]}, "15": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Gt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 3, "result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -48,7 +48,7 @@", "             retval += (' --dhcpclass=%s' % self.dhcpclass)", "         if (self.device != ''):", "             retval += (' --device=%s' % self.device)", "-        if (self.essid != ''):", "+        if (self.essid > ''):", "             retval += (' --essid=\"%s\"' % self.essid)", "         if (self.ethtool != ''):", "             retval += (' --ethtool=\"%s\"' % self.ethtool)"]]]}, "200": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_LtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_LtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 2, "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -419,7 +419,7 @@", "             teamslaves = []", "             if value:", "                 parts = value.split(\"'\")", "-                if ((len(parts) % 2) == 1):", "+                if ((len(parts) % 2) <= 1):", "                     if (not parts[(- 1)]):", "                         parts = parts[:(- 1)]", "                     else:"]]]}, "91": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_NotEq", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_NotEq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 3, "result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 218, in runTest\n    \"network  --bootproto=dhcp --device=bridge0 --bridgeslaves=ens3,ens7 --bridgeopts=priority=40000\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 669, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nBad format of --bridgeopts, expecting key=value options separated by ','\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -460,7 +460,7 @@", "             opts = retval.bridgeopts.split(',')", "             for opt in opts:", "                 (_key, _sep, value) = opt.partition('=')", "-                if ((not value) or ('=' in value)):", "+                if ((not value) or ('=' != value)):", "                     msg = formatErrorMsg(self.lineno, msg=_(\"Bad format of --bridgeopts, expecting key=value options separated by ','\"))", "                     raise KickstartParseError(msg)", "         return retval"]]]}, "232": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 33, in runTest\n    self.assertNotEqual(self.assert_parse(\"network --device=eth0\"), None)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 864, in assertNotEqual\n    if not first != second:\n  File \"pykickstart.commands.network\", line 62, in __ne__\nTypeError: unorderable types: F16_NetworkData() < NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -38,7 +38,7 @@", "         return (self.device and (self.device == y.device))", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self < y))", " ", "     def _getArgsAsStr(self):", "         retval = ''"]]]}, "78": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_LtE", "11", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_LtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 11, "result-data": [{"occurrence": 11, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --wepkey=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --wepkey=\n?                                                          ----------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -68,7 +68,7 @@", "             retval += ' --nodns'", "         if (not self.onboot):", "             retval += ' --onboot=off'", "-        if (self.wepkey != ''):", "+        if (self.wepkey <= ''):", "             retval += (' --wepkey=%s' % self.wepkey)", "         return retval", " "]]]}, "227": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 33, in runTest\n    self.assertNotEqual(self.assert_parse(\"network --device=eth0\"), None)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 864, in assertNotEqual\n    if not first != second:\n  File \"pykickstart.commands.network\", line 62, in __ne__\nTypeError: unorderable types: F16_NetworkData() > NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -38,7 +38,7 @@", "         return (self.device and (self.device == y.device))", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self > y))", " ", "     def _getArgsAsStr(self):", "         retval = ''"]]]}, "304": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_GtE", "13", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 13, "result-data": [{"occurrence": 13, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --wpakey=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --wpakey=\n?                                                          ----------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -138,7 +138,7 @@", "             retval += ' --activate'", "         if self.nodefroute:", "             retval += ' --nodefroute'", "-        if (self.wpakey != ''):", "+        if (self.wpakey >= ''):", "             retval += (' --wpakey=%s' % self.wpakey)", "         return retval", " "]]]}, "301": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_GtE", "10", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 10, "result-data": [{"occurrence": 10, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --netmask=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --netmask=\n?                                                          -----------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -62,7 +62,7 @@", "             retval += (' --mtu=%s' % self.mtu)", "         if (self.nameserver != ''):", "             retval += (' --nameserver=%s' % self.nameserver)", "-        if (self.netmask != ''):", "+        if (self.netmask >= ''):", "             retval += (' --netmask=%s' % self.netmask)", "         if self.nodns:", "             retval += ' --nodns'"]]]}, "124": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_IsNot_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_IsNot_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 826, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nNone\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 251, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: The following problem occurred on line 0 of the kickstart file:\n\nNone\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -554,7 +554,7 @@", "     def parse(self, args):", "         retval = F21_Network.parse(self, args)", "         error_message = validate_network_interface_name(retval.interfacename)", "-        if (error_message is not None):", "+        if (error_message is None):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=error_message))", "         if retval.bridgeopts:", "             if (not retval.bridgeslaves):"]]]}, "309": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_GtE", "18", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 18, "result-data": [{"occurrence": 18, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 251, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeslaves=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeslaves=\n?                                                          ----------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -270,7 +270,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = F21_NetworkData._getArgsAsStr(self)", "-        if (self.bridgeslaves != ''):", "+        if (self.bridgeslaves >= ''):", "             retval += (' --bridgeslaves=%s' % self.bridgeslaves)", "         if (self.bridgeopts != ''):", "             retval += (' --bridgeopts=%s' % self.bridgeopts)"]]]}, "298": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_GtE", "7", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 7, "result-data": [{"occurrence": 7, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --ip=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --ip=\n?                                                          ------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -56,7 +56,7 @@", "             retval += (' --gateway=%s' % self.gateway)", "         if (self.hostname != ''):", "             retval += (' --hostname=%s' % self.hostname)", "-        if (self.ip != ''):", "+        if (self.ip >= ''):", "             retval += (' --ip=%s' % self.ip)", "         if (self.mtu != ''):", "             retval += (' --mtu=%s' % self.mtu)"]]]}, "68": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_LtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --device=eth0\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --device=eth0\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n?                           ++++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -44,7 +44,7 @@", "         retval = ''", "         if (self.bootProto != ''):", "             retval += (' --bootproto=%s' % self.bootProto)", "-        if (self.dhcpclass != ''):", "+        if (self.dhcpclass <= ''):", "             retval += (' --dhcpclass=%s' % self.dhcpclass)", "         if (self.device != ''):", "             retval += (' --device=%s' % self.device)"]]]}, "288": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_NotIn", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 4, "result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -495,7 +495,7 @@", "     def _getParser(self):", "         op = FC6_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' not in action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'query' value was added.\" % versionToLongString(RHEL5)))", "                 break", "         return op"]]]}, "272": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "boolean_replacer", "8", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "boolean_replacer", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 8, "result-data": [{"occurrence": 8, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 265}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -225,7 +225,7 @@", " ", "     def __init__(self, *args, **kwargs):", "         FC3_NetworkData.__init__(self, *args, **kwargs)", "-        self.notksdevice = kwargs.get('notksdevice', False)", "+        self.notksdevice = kwargs.get('notksdevice', True)", " ", "     def _getArgsAsStr(self):", "         retval = FC3_NetworkData._getArgsAsStr(self)"]]]}, "65": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_In", "19", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_In", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 19, "result-data": [{"occurrence": 19, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 251, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeopts=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeopts=\n?                                                          --------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -272,7 +272,7 @@", "         retval = F21_NetworkData._getArgsAsStr(self)", "         if (self.bridgeslaves != ''):", "             retval += (' --bridgeslaves=%s' % self.bridgeslaves)", "-        if (self.bridgeopts != ''):", "+        if (self.bridgeopts in ''):", "             retval += (' --bridgeopts=%s' % self.bridgeopts)", "         return retval", " "]]]}, "34": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_IsNot_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_IsNot_with_LtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 825, in parse\nTypeError: unorderable types: NoneType() <= NoneType()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 251, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: unorderable types: NoneType() <= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -554,7 +554,7 @@", "     def parse(self, args):", "         retval = F21_Network.parse(self, args)", "         error_message = validate_network_interface_name(retval.interfacename)", "-        if (error_message is not None):", "+        if (error_message <= None):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=error_message))", "         if retval.bridgeopts:", "             if (not retval.bridgeslaves):"]]]}, "352": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Eq", "20", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Eq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 20, "result-data": [{"occurrence": 20, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -290,7 +290,7 @@", "         retval = ''", "         for nic in self.network:", "             retval += nic.__str__()", "-        if (retval != ''):", "+        if (retval == ''):", "             return ('# Network information\\n' + retval)", "         else:", "             return ''"]]]}, "76": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_LtE", "9", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_LtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 9, "result-data": [{"occurrence": 9, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --nameserver=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --nameserver=\n?                                                          --------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -60,7 +60,7 @@", "             retval += (' --ip=%s' % self.ip)", "         if (self.mtu != ''):", "             retval += (' --mtu=%s' % self.mtu)", "-        if (self.nameserver != ''):", "+        if (self.nameserver <= ''):", "             retval += (' --nameserver=%s' % self.nameserver)", "         if (self.netmask != ''):", "             retval += (' --netmask=%s' % self.netmask)"]]]}, "163": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_IsNot_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_IsNot_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 823, in parse\n  File \"pykickstart.commands.network\", line 804, in validate_network_interface_name\nTypeError: unorderable types: NoneType() > NoneType()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 251, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: unorderable types: NoneType() > NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -538,7 +538,7 @@", "             vlan_id = int(id_candidate)", "         except ValueError:", "             return _(\"If network --interfacename starts with 'vlan', valid vlan id should follow.\")", "-    if (vlan_id is not None):", "+    if (vlan_id > None):", "         if (not (MIN_VLAN_ID <= vlan_id <= MAX_VLAN_ID)):", "             return (_('The vlan id is out of the %(minimum)d-%(maximum)d vlan id range.') % {'minimum': MIN_VLAN_ID, 'maximum': MAX_VLAN_ID})", "     return None"]]]}, "240": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Is", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 4, "result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --ethtool=\"\"\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --ethtool=\"\"\n?                                                          -------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -50,7 +50,7 @@", "             retval += (' --device=%s' % self.device)", "         if (self.essid != ''):", "             retval += (' --essid=\"%s\"' % self.essid)", "-        if (self.ethtool != ''):", "+        if (self.ethtool is ''):", "             retval += (' --ethtool=\"%s\"' % self.ethtool)", "         if (self.gateway != ''):", "             retval += (' --gateway=%s' % self.gateway)"]]]}, "284": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 435, in parse\nUserWarning: A network device with the name eth0 has already been defined.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: A network device with the name eth0 has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -318,7 +318,7 @@", "         nd = self.dataClass()", "         self.set_to_obj(ns, nd)", "         nd.lineno = self.lineno", "-        if (nd in self.dataList()):", "+        if (nd not in self.dataList()):", "             warnings.warn((_('A network device with the name %s has already been defined.') % nd.device))", "         return nd", " "]]]}, "14": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Gt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 2, "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -46,7 +46,7 @@", "             retval += (' --bootproto=%s' % self.bootProto)", "         if (self.dhcpclass != ''):", "             retval += (' --dhcpclass=%s' % self.dhcpclass)", "-        if (self.device != ''):", "+        if (self.device > ''):", "             retval += (' --device=%s' % self.device)", "         if (self.essid != ''):", "             retval += (' --essid=\"%s\"' % self.essid)"]]]}, "209": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_Is", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 6, "result-data": [{"occurrence": 6, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 295, in runTest\n    self.assert_parse_error(\"network --device bridge0 --bootproto dhcp \"\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -563,7 +563,7 @@", "             opts = retval.bridgeopts.split(',')", "             for opt in opts:", "                 (_key, _sep, value) = opt.partition('=')", "-                if ((not value) or ('=' in value)):", "+                if ((not value) or ('=' is value)):", "                     msg = formatErrorMsg(self.lineno, msg=_(\"Bad format of --bridgeopts, expecting key=value options separated by ','\"))", "                     raise KickstartParseError(msg)", "         return retval"]]]}, "142": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_IsNot", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_IsNot", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 5, "result-data": [{"occurrence": 5, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -511,7 +511,7 @@", "     def _getParser(self):", "         op = F9_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' is not action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'ibft' value was added.\" % versionToLongString(RHEL6)))", "                 break", "         op.add_argument('--activate', action='store_true', version=RHEL6, default=False, help='\\n                        As noted above, using this option ensures any matching\\n                        devices beyond the first will also be activated.')"]]]}, "285": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -368,7 +368,7 @@", "     def _getParser(self):", "         op = F8_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' not in action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'query' value was added.\" % versionToLongString(F9)))", "                 break", "         return op"]]]}, "174": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_NotIn", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 3, "result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -48,7 +48,7 @@", "             retval += (' --dhcpclass=%s' % self.dhcpclass)", "         if (self.device != ''):", "             retval += (' --device=%s' % self.device)", "-        if (self.essid != ''):", "+        if (self.essid not in ''):", "             retval += (' --essid=\"%s\"' % self.essid)", "         if (self.ethtool != ''):", "             retval += (' --ethtool=\"%s\"' % self.ethtool)"]]]}, "57": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_In", "11", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_In", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 11, "result-data": [{"occurrence": 11, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --wepkey=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --wepkey=\n?                                                          ----------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -68,7 +68,7 @@", "             retval += ' --nodns'", "         if (not self.onboot):", "             retval += ' --onboot=off'", "-        if (self.wepkey != ''):", "+        if (self.wepkey in ''):", "             retval += (' --wepkey=%s' % self.wepkey)", "         return retval", " "]]]}, "191": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_NotIn", "20", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 20, "result-data": [{"occurrence": 20, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -290,7 +290,7 @@", "         retval = ''", "         for nic in self.network:", "             retval += nic.__str__()", "-        if (retval != ''):", "+        if (retval not in ''):", "             return ('# Network information\\n' + retval)", "         else:", "             return ''"]]]}, "223": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_Is", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 4, "result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -533,7 +533,7 @@", "         except ValueError:", "             return _(\"If network --interfacename contains a '.', valid vlan id should follow.\")", "     (empty, sep, id_candidate) = name.partition('vlan')", "-    if (sep and (empty == '')):", "+    if (sep and (empty is '')):", "         try:", "             vlan_id = int(id_candidate)", "         except ValueError:"]]]}, "233": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_Lt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 2, "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 169, in runTest\n    self.assert_parse(cmd, outputCmd)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'netw[49 chars]-teamconfig=\"{\\\\\"runner\\\\\": {\\\\\"name\\\\\": \\\\\"roundrobin\\\\\"}}\"\\n' != 'netw[49 chars]-teamslaves=\"p3p1,p3p2\" --teamconfig=\"{\\\\\"runn[37 chars]}\"\\n'\n- network  --bootproto=dhcp --device=team0 --activate --teamconfig=\"{\\\"runner\\\": {\\\"name\\\": \\\"roundrobin\\\"}}\"\n+ network  --bootproto=dhcp --device=team0 --activate --teamslaves=\"p3p1,p3p2\" --teamconfig=\"{\\\"runner\\\": {\\\"name\\\": \\\"roundrobin\\\"}}\"\n?                                                    +++++++++++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -419,7 +419,7 @@", "             teamslaves = []", "             if value:", "                 parts = value.split(\"'\")", "-                if ((len(parts) % 2) == 1):", "+                if ((len(parts) % 2) < 1):", "                     if (not parts[(- 1)]):", "                         parts = parts[:(- 1)]", "                     else:"]]]}, "131": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_Eq", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_Eq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 4, "result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -495,7 +495,7 @@", "     def _getParser(self):", "         op = FC6_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' == action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'query' value was added.\" % versionToLongString(RHEL5)))", "                 break", "         return op"]]]}, "176": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_NotIn", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 5, "result-data": [{"occurrence": 5, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -52,7 +52,7 @@", "             retval += (' --essid=\"%s\"' % self.essid)", "         if (self.ethtool != ''):", "             retval += (' --ethtool=\"%s\"' % self.ethtool)", "-        if (self.gateway != ''):", "+        if (self.gateway not in ''):", "             retval += (' --gateway=%s' % self.gateway)", "         if (self.hostname != ''):", "             retval += (' --hostname=%s' % self.hostname)"]]]}, "138": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_IsNot", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_IsNot", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -368,7 +368,7 @@", "     def _getParser(self):", "         op = F8_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' is not action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'query' value was added.\" % versionToLongString(F9)))", "                 break", "         return op"]]]}, "152": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_LtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_LtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 3, "result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 227, in runTest\n    self.assert_parse_error(\"network --device bridge0 --bootproto dhcp \"\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -460,7 +460,7 @@", "             opts = retval.bridgeopts.split(',')", "             for opt in opts:", "                 (_key, _sep, value) = opt.partition('=')", "-                if ((not value) or ('=' in value)):", "+                if ((not value) or ('=' <= value)):", "                     msg = formatErrorMsg(self.lineno, msg=_(\"Bad format of --bridgeopts, expecting key=value options separated by ','\"))", "                     raise KickstartParseError(msg)", "         return retval"]]]}, "141": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_IsNot", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_IsNot", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 4, "result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -495,7 +495,7 @@", "     def _getParser(self):", "         op = FC6_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' is not action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'query' value was added.\" % versionToLongString(RHEL5)))", "                 break", "         return op"]]]}, "117": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Lt", "15", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 15, "result-data": [{"occurrence": 15, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 152, in runTest\n    \"network  --bootproto=dhcp --device=eth0 --bondslaves=A,B --bondopts=opt1,opt2\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'netw[13 chars]oto=dhcp --device=eth0 --bondslaves=A,B\\n' != 'netw[13 chars]oto=dhcp --device=eth0 --bondslaves=A,B --bondopts=opt1,opt2\\n'\n- network  --bootproto=dhcp --device=eth0 --bondslaves=A,B\n+ network  --bootproto=dhcp --device=eth0 --bondslaves=A,B --bondopts=opt1,opt2\n?                                                         +++++++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -157,7 +157,7 @@", "         retval = F16_NetworkData._getArgsAsStr(self)", "         if (self.bondslaves != ''):", "             retval += (' --bondslaves=%s' % self.bondslaves)", "-        if (self.bondopts != ''):", "+        if (self.bondopts < ''):", "             retval += (' --bondopts=%s' % self.bondopts)", "         if self.vlanid:", "             retval += (' --vlanid=%s' % self.vlanid)"]]]}, "273": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "boolean_replacer", "9", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "boolean_replacer", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 9, "result-data": [{"occurrence": 9, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 281}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -239,7 +239,7 @@", " ", "     def __init__(self, *args, **kwargs):", "         F8_NetworkData.__init__(self, *args, **kwargs)", "-        self.activate = kwargs.get('activate', False)", "+        self.activate = kwargs.get('activate', True)", "         self.nodefroute = kwargs.get('nodefroute', False)", "         self.vlanid = kwargs.get('vlanid', '')", "         self.bondslaves = kwargs.get('bondslaves', '')"]]]}, "103": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --device=eth0\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --device=eth0\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n?                           ++++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -44,7 +44,7 @@", "         retval = ''", "         if (self.bootProto != ''):", "             retval += (' --bootproto=%s' % self.bootProto)", "-        if (self.dhcpclass != ''):", "+        if (self.dhcpclass < ''):", "             retval += (' --dhcpclass=%s' % self.dhcpclass)", "         if (self.device != ''):", "             retval += (' --device=%s' % self.device)"]]]}, "151": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_LtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_LtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 2, "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"pykickstart.commands.network\", line 509, in __init__\n  File \"pykickstart.commands.network\", line 489, in __init__\n  File \"pykickstart.commands.network\", line 330, in __init__\n  File \"pykickstart.commands.network\", line 515, in _getParser\nTypeError: unorderable types: str() <= list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -384,7 +384,7 @@", "     def _getParser(self):", "         op = F9_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' <= action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'ibft' value was added.\" % versionToLongString(F16)))", "                 break", "         op.add_argument('--activate', action='store_true', version=F16, default=False, help='\\n                        As noted above, using this option ensures any matching\\n                        devices beyond the first will also be activated.')"]]]}, "331": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "number_replacer", "12", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "number_replacer", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 12, "result-data": [{"occurrence": 12, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 721}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -504,7 +504,7 @@", "     removedKeywords = F9_Network.removedKeywords", "     removedAttrs = F9_Network.removedAttrs", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         F9_Network.__init__(self, writePriority, *args, **kwargs)", "         self.bootprotoList.append(BOOTPROTO_IBFT)", " "]]]}, "199": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_LtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 33, in runTest\n    self.assertNotEqual(self.assert_parse(\"network --device=eth0\"), None)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 864, in assertNotEqual\n    if not first != second:\n  File \"pykickstart.commands.network\", line 62, in __ne__\nTypeError: unorderable types: F16_NetworkData() <= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -38,7 +38,7 @@", "         return (self.device and (self.device == y.device))", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self <= y))", " ", "     def _getArgsAsStr(self):", "         retval = ''"]]]}, "92": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_NotEq", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_NotEq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 4, "result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -495,7 +495,7 @@", "     def _getParser(self):", "         op = FC6_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' != action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'query' value was added.\" % versionToLongString(RHEL5)))", "                 break", "         return op"]]]}, "260": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_GtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 3, "result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -526,7 +526,7 @@", "     vlan_id = None", "     (vlan, dot, id_candidate) = name.partition('.')", "     if dot:", "-        if (vlan == 'vlan'):", "+        if (vlan >= 'vlan'):", "             return _(\"When using the <prefix>.<vlan id> interface name notation, <prefix> can't be equal to 'vlan'.\")", "         try:", "             vlan_id = int(id_candidate)"]]]}, "235": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_Lt", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 4, "result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 266, in runTest\n    self.assert_parse_error(\"network --interfacename=vlan\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -533,7 +533,7 @@", "         except ValueError:", "             return _(\"If network --interfacename contains a '.', valid vlan id should follow.\")", "     (empty, sep, id_candidate) = name.partition('vlan')", "-    if (sep and (empty == '')):", "+    if (sep and (empty < '')):", "         try:", "             vlan_id = int(id_candidate)", "         except ValueError:"]]]}, "217": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_LtE_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_LtE_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtEWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 826, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nThe vlan id is out of the 0-4095 vlan id range.\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 263, in runTest\n    self.assert_parse(\"network --interfacename=abc.123\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: The following problem occurred on line 0 of the kickstart file:\n\nThe vlan id is out of the 0-4095 vlan id range.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -539,7 +539,7 @@", "         except ValueError:", "             return _(\"If network --interfacename starts with 'vlan', valid vlan id should follow.\")", "     if (vlan_id is not None):", "-        if (not (MIN_VLAN_ID <= vlan_id <= MAX_VLAN_ID)):", "+        if (not (MIN_VLAN_ID is vlan_id <= MAX_VLAN_ID)):", "             return (_('The vlan id is out of the %(minimum)d-%(maximum)d vlan id range.') % {'minimum': MIN_VLAN_ID, 'maximum': MAX_VLAN_ID})", "     return None", " "]]]}, "155": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_LtE", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_LtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 6, "result-data": [{"occurrence": 6, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 295, in runTest\n    self.assert_parse_error(\"network --device bridge0 --bootproto dhcp \"\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -563,7 +563,7 @@", "             opts = retval.bridgeopts.split(',')", "             for opt in opts:", "                 (_key, _sep, value) = opt.partition('=')", "-                if ((not value) or ('=' in value)):", "+                if ((not value) or ('=' <= value)):", "                     msg = formatErrorMsg(self.lineno, msg=_(\"Bad format of --bridgeopts, expecting key=value options separated by ','\"))", "                     raise KickstartParseError(msg)", "         return retval"]]]}, "327": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "number_replacer", "8", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "number_replacer", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 8, "result-data": [{"occurrence": 8, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 597}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 195, in runTest\n    self.assertEqual(network_data.teamslaves, value)\nAssertionError: Lists differ: [] != [('eth1', ''), ('eth2', '{\"prio\": 100}')]\n\nSecond list contains 2 additional elements.\nFirst extra element 0:\n('eth1', '')\n\n- []\n+ [('eth1', ''), ('eth2', '{\"prio\": 100}')]\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -421,7 +421,7 @@", "                 parts = value.split(\"'\")", "                 if ((len(parts) % 2) == 1):", "                     if (not parts[(- 1)]):", "-                        parts = parts[:(- 1)]", "+                        parts = parts[:(- 2)]", "                     else:", "                         parts.append('')", "                 it = iter(parts)"]]]}, "221": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_Is", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 2, "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -419,7 +419,7 @@", "             teamslaves = []", "             if value:", "                 parts = value.split(\"'\")", "-                if ((len(parts) % 2) == 1):", "+                if ((len(parts) % 2) is 1):", "                     if (not parts[(- 1)]):", "                         parts = parts[:(- 1)]", "                     else:"]]]}, "171": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -42,7 +42,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = ''", "-        if (self.bootProto != ''):", "+        if (self.bootProto not in ''):", "             retval += (' --bootproto=%s' % self.bootProto)", "         if (self.dhcpclass != ''):", "             retval += (' --dhcpclass=%s' % self.dhcpclass)"]]]}, "9": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_Gt", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 6, "result-data": [{"occurrence": 6, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 285, in runTest\n    \"network  --bootproto=dhcp --device=bridge0 --bridgeslaves=ens3,ens7 --bridgeopts=priority=40000\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 837, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nBad format of --bridgeopts, expecting key=value options separated by ','\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -563,7 +563,7 @@", "             opts = retval.bridgeopts.split(',')", "             for opt in opts:", "                 (_key, _sep, value) = opt.partition('=')", "-                if ((not value) or ('=' in value)):", "+                if ((not value) or ('=' > value)):", "                     msg = formatErrorMsg(self.lineno, msg=_(\"Bad format of --bridgeopts, expecting key=value options separated by ','\"))", "                     raise KickstartParseError(msg)", "         return retval"]]]}, "167": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "break_continue_replacement", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "break_continue_replacement", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.break_continue.ReplaceBreakWithContinue", "line_number": 501}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -370,7 +370,7 @@", "         for action in op._actions:", "             if ('--bootproto' in action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'query' value was added.\" % versionToLongString(F9)))", "-                break", "+                continue", "         return op", " ", " class F16_Network(F9_Network):"]]]}, "120": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Lt", "18", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 18, "result-data": [{"occurrence": 18, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 285, in runTest\n    \"network  --bootproto=dhcp --device=bridge0 --bridgeslaves=ens3,ens7 --bridgeopts=priority=40000\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'netw[31 chars]bridge0 --bridgeopts=priority=40000\\n' != 'netw[31 chars]bridge0 --bridgeslaves=ens3,ens7 --bridgeopts=priority=40000\\n'\n- network  --bootproto=dhcp --device=bridge0 --bridgeopts=priority=40000\n+ network  --bootproto=dhcp --device=bridge0 --bridgeslaves=ens3,ens7 --bridgeopts=priority=40000\n?                                           +++++++++++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -270,7 +270,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = F21_NetworkData._getArgsAsStr(self)", "-        if (self.bridgeslaves != ''):", "+        if (self.bridgeslaves < ''):", "             retval += (' --bridgeslaves=%s' % self.bridgeslaves)", "         if (self.bridgeopts != ''):", "             retval += (' --bridgeopts=%s' % self.bridgeopts)"]]]}, "289": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_NotIn", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 5, "result-data": [{"occurrence": 5, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -511,7 +511,7 @@", "     def _getParser(self):", "         op = F9_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' not in action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'ibft' value was added.\" % versionToLongString(RHEL6)))", "                 break", "         op.add_argument('--activate', action='store_true', version=RHEL6, default=False, help='\\n                        As noted above, using this option ensures any matching\\n                        devices beyond the first will also be activated.')"]]]}, "344": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Eq", "12", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Eq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 12, "result-data": [{"occurrence": 12, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --ipv6=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --ipv6=\n?                                                          --------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -118,7 +118,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = FC6_NetworkData._getArgsAsStr(self)", "-        if (self.ipv6 != ''):", "+        if (self.ipv6 == ''):", "             retval += (' --ipv6=%s' % self.ipv6)", "         return retval", " "]]]}, "333": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Eq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Eq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --device=eth0\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --device=eth0\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n?                           ++++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -44,7 +44,7 @@", "         retval = ''", "         if (self.bootProto != ''):", "             retval += (' --bootproto=%s' % self.bootProto)", "-        if (self.dhcpclass != ''):", "+        if (self.dhcpclass == ''):", "             retval += (' --dhcpclass=%s' % self.dhcpclass)", "         if (self.device != ''):", "             retval += (' --device=%s' % self.device)"]]]}, "169": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "break_continue_replacement", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "break_continue_replacement", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 2, "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.break_continue.ReplaceBreakWithContinue", "line_number": 714}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -497,7 +497,7 @@", "         for action in op._actions:", "             if ('--bootproto' in action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'query' value was added.\" % versionToLongString(RHEL5)))", "-                break", "+                continue", "         return op", " ", " class RHEL6_Network(F9_Network):"]]]}, "85": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_LtE", "18", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_LtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 18, "result-data": [{"occurrence": 18, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 251, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeslaves=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeslaves=\n?                                                          ----------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -270,7 +270,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = F21_NetworkData._getArgsAsStr(self)", "-        if (self.bridgeslaves != ''):", "+        if (self.bridgeslaves <= ''):", "             retval += (' --bridgeslaves=%s' % self.bridgeslaves)", "         if (self.bridgeopts != ''):", "             retval += (' --bridgeopts=%s' % self.bridgeopts)"]]]}, "351": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Eq", "19", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Eq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 19, "result-data": [{"occurrence": 19, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 251, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeopts=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeopts=\n?                                                          --------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -272,7 +272,7 @@", "         retval = F21_NetworkData._getArgsAsStr(self)", "         if (self.bridgeslaves != ''):", "             retval += (' --bridgeslaves=%s' % self.bridgeslaves)", "-        if (self.bridgeopts != ''):", "+        if (self.bridgeopts == ''):", "             retval += (' --bridgeopts=%s' % self.bridgeopts)", "         return retval", " "]]]}, "269": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "boolean_replacer", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "boolean_replacer", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 5, "result-data": [{"occurrence": 5, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 126}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -98,7 +98,7 @@", "     def __init__(self, *args, **kwargs):", "         FC4_NetworkData.__init__(self, *args, **kwargs)", "         self.noipv4 = kwargs.get('noipv4', False)", "-        self.noipv6 = kwargs.get('noipv6', False)", "+        self.noipv6 = kwargs.get('noipv6', True)", " ", "     def _getArgsAsStr(self):", "         retval = FC4_NetworkData._getArgsAsStr(self)"]]]}, "345": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Eq", "13", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Eq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 13, "result-data": [{"occurrence": 13, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --wpakey=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --wpakey=\n?                                                          ----------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -138,7 +138,7 @@", "             retval += ' --activate'", "         if self.nodefroute:", "             retval += ' --nodefroute'", "-        if (self.wpakey != ''):", "+        if (self.wpakey == ''):", "             retval += (' --wpakey=%s' % self.wpakey)", "         return retval", " "]]]}, "218": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_LtE_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_LtE_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtEWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 826, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nThe vlan id is out of the 0-4095 vlan id range.\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 263, in runTest\n    self.assert_parse(\"network --interfacename=abc.123\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: The following problem occurred on line 0 of the kickstart file:\n\nThe vlan id is out of the 0-4095 vlan id range.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -539,7 +539,7 @@", "         except ValueError:", "             return _(\"If network --interfacename starts with 'vlan', valid vlan id should follow.\")", "     if (vlan_id is not None):", "-        if (not (MIN_VLAN_ID <= vlan_id <= MAX_VLAN_ID)):", "+        if (not (MIN_VLAN_ID <= vlan_id is MAX_VLAN_ID)):", "             return (_('The vlan id is out of the %(minimum)d-%(maximum)d vlan id range.') % {'minimum': MIN_VLAN_ID, 'maximum': MAX_VLAN_ID})", "     return None", " "]]]}, "110": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Lt", "8", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 8, "result-data": [{"occurrence": 8, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 42, in runTest\n    \"network  --bootproto=dhcp --device=eth0 --ethtool=\\\"gro on\\\" --mtu=1200\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --device=eth0 --ethtool=\"gro on\"\\n' != 'network  --bootproto=dhcp --device=eth0 --ethtool=\"gro on\" --mtu=1200\\n'\n- network  --bootproto=dhcp --device=eth0 --ethtool=\"gro on\"\n+ network  --bootproto=dhcp --device=eth0 --ethtool=\"gro on\" --mtu=1200\n?                                                           +++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -58,7 +58,7 @@", "             retval += (' --hostname=%s' % self.hostname)", "         if (self.ip != ''):", "             retval += (' --ip=%s' % self.ip)", "-        if (self.mtu != ''):", "+        if (self.mtu < ''):", "             retval += (' --mtu=%s' % self.mtu)", "         if (self.nameserver != ''):", "             retval += (' --nameserver=%s' % self.nameserver)"]]]}, "340": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Eq", "8", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Eq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 8, "result-data": [{"occurrence": 8, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --mtu=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --mtu=\n?                                                          -------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -58,7 +58,7 @@", "             retval += (' --hostname=%s' % self.hostname)", "         if (self.ip != ''):", "             retval += (' --ip=%s' % self.ip)", "-        if (self.mtu != ''):", "+        if (self.mtu == ''):", "             retval += (' --mtu=%s' % self.mtu)", "         if (self.nameserver != ''):", "             retval += (' --nameserver=%s' % self.nameserver)"]]]}, "8": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_Gt", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 5, "result-data": [{"occurrence": 5, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 116, in runTest\n    F8_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"pykickstart.commands.network\", line 722, in __init__\n  File \"pykickstart.commands.network\", line 489, in __init__\n  File \"pykickstart.commands.network\", line 330, in __init__\n  File \"pykickstart.commands.network\", line 728, in _getParser\nTypeError: unorderable types: str() > list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -511,7 +511,7 @@", "     def _getParser(self):", "         op = F9_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' > action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'ibft' value was added.\" % versionToLongString(RHEL6)))", "                 break", "         op.add_argument('--activate', action='store_true', version=RHEL6, default=False, help='\\n                        As noted above, using this option ensures any matching\\n                        devices beyond the first will also be activated.')"]]]}, "28": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Gt", "16", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 16, "result-data": [{"occurrence": 16, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -213,7 +213,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = F21_NetworkData._getArgsAsStr(self)", "-        if (self.bridgeslaves != ''):", "+        if (self.bridgeslaves > ''):", "             retval += (' --bridgeslaves=%s' % self.bridgeslaves)", "         if (self.bridgeopts != ''):", "             retval += (' --bridgeopts=%s' % self.bridgeopts)"]]]}, "312": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_In", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -35,7 +35,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.device and (self.device == y.device))", "+        return (self.device and (self.device in y.device))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]]}, "50": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_In", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_In", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 4, "result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --ethtool=\"\"\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --ethtool=\"\"\n?                                                          -------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -50,7 +50,7 @@", "             retval += (' --device=%s' % self.device)", "         if (self.essid != ''):", "             retval += (' --essid=\"%s\"' % self.essid)", "-        if (self.ethtool != ''):", "+        if (self.ethtool in ''):", "             retval += (' --ethtool=\"%s\"' % self.ethtool)", "         if (self.gateway != ''):", "             retval += (' --gateway=%s' % self.gateway)"]]]}, "40": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_IsNot", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_IsNot", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 33, in runTest\n    self.assertNotEqual(self.assert_parse(\"network --device=eth0\"), None)\nAssertionError: <pykickstart.commands.network.F16_NetworkData object at 0x7f92b70d8630> == None\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -38,7 +38,7 @@", "         return (self.device and (self.device == y.device))", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self is not y))", " ", "     def _getArgsAsStr(self):", "         retval = ''"]]]}, "52": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_In", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_In", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 6, "result-data": [{"occurrence": 6, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --hostname=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --hostname=\n?                                                          ------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -54,7 +54,7 @@", "             retval += (' --ethtool=\"%s\"' % self.ethtool)", "         if (self.gateway != ''):", "             retval += (' --gateway=%s' % self.gateway)", "-        if (self.hostname != ''):", "+        if (self.hostname in ''):", "             retval += (' --hostname=%s' % self.hostname)", "         if (self.ip != ''):", "             retval += (' --ip=%s' % self.ip)"]]]}, "114": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Lt", "12", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 12, "result-data": [{"occurrence": 12, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 112, in runTest\n    \"network  --bootproto=dhcp --device=eth0 --ipv6=1:2:3:4\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --device=eth0\\n' != 'network  --bootproto=dhcp --device=eth0 --ipv6=1:2:3:4\\n'\n- network  --bootproto=dhcp --device=eth0\n+ network  --bootproto=dhcp --device=eth0 --ipv6=1:2:3:4\n?                                        +++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -118,7 +118,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = FC6_NetworkData._getArgsAsStr(self)", "-        if (self.ipv6 != ''):", "+        if (self.ipv6 < ''):", "             retval += (' --ipv6=%s' % self.ipv6)", "         return retval", " "]]]}, "259": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_GtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 2, "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -419,7 +419,7 @@", "             teamslaves = []", "             if value:", "                 parts = value.split(\"'\")", "-                if ((len(parts) % 2) == 1):", "+                if ((len(parts) % 2) >= 1):", "                     if (not parts[(- 1)]):", "                         parts = parts[:(- 1)]", "                     else:"]]]}, "19": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Gt", "7", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 7, "result-data": [{"occurrence": 7, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -56,7 +56,7 @@", "             retval += (' --gateway=%s' % self.gateway)", "         if (self.hostname != ''):", "             retval += (' --hostname=%s' % self.hostname)", "-        if (self.ip != ''):", "+        if (self.ip > ''):", "             retval += (' --ip=%s' % self.ip)", "         if (self.mtu != ''):", "             retval += (' --mtu=%s' % self.mtu)"]]]}, "320": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "number_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "number_replacer", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 32}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -9,7 +9,7 @@", " import warnings", " from pykickstart.i18n import _", " MIN_VLAN_ID = 0", "-MAX_VLAN_ID = 4095", "+MAX_VLAN_ID = 4096", " ", " class FC3_NetworkData(BaseData):", "     removedKeywords = BaseData.removedKeywords"]]]}, "7": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_Gt", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 4, "result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -495,7 +495,7 @@", "     def _getParser(self):", "         op = FC6_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' > action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'query' value was added.\" % versionToLongString(RHEL5)))", "                 break", "         return op"]]]}, "173": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_NotIn", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 2, "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -46,7 +46,7 @@", "             retval += (' --bootproto=%s' % self.bootProto)", "         if (self.dhcpclass != ''):", "             retval += (' --dhcpclass=%s' % self.dhcpclass)", "-        if (self.device != ''):", "+        if (self.device not in ''):", "             retval += (' --device=%s' % self.device)", "         if (self.essid != ''):", "             retval += (' --essid=\"%s\"' % self.essid)"]]]}, "256": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Is", "20", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 20, "result-data": [{"occurrence": 20, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -290,7 +290,7 @@", "         retval = ''", "         for nic in self.network:", "             retval += nic.__str__()", "-        if (retval != ''):", "+        if (retval is ''):", "             return ('# Network information\\n' + retval)", "         else:", "             return ''"]]]}, "58": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_In", "12", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_In", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 12, "result-data": [{"occurrence": 12, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --ipv6=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --ipv6=\n?                                                          --------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -118,7 +118,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = FC6_NetworkData._getArgsAsStr(self)", "-        if (self.ipv6 != ''):", "+        if (self.ipv6 in ''):", "             retval += (' --ipv6=%s' % self.ipv6)", "         return retval", " "]]]}, "254": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Is", "18", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 18, "result-data": [{"occurrence": 18, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 251, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeslaves=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeslaves=\n?                                                          ----------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -270,7 +270,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = F21_NetworkData._getArgsAsStr(self)", "-        if (self.bridgeslaves != ''):", "+        if (self.bridgeslaves is ''):", "             retval += (' --bridgeslaves=%s' % self.bridgeslaves)", "         if (self.bridgeopts != ''):", "             retval += (' --bridgeopts=%s' % self.bridgeopts)"]]]}, "159": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_Lt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 3, "result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 227, in runTest\n    self.assert_parse_error(\"network --device bridge0 --bootproto dhcp \"\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -460,7 +460,7 @@", "             opts = retval.bridgeopts.split(',')", "             for opt in opts:", "                 (_key, _sep, value) = opt.partition('=')", "-                if ((not value) or ('=' in value)):", "+                if ((not value) or ('=' < value)):", "                     msg = formatErrorMsg(self.lineno, msg=_(\"Bad format of --bridgeopts, expecting key=value options separated by ','\"))", "                     raise KickstartParseError(msg)", "         return retval"]]]}, "229": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_Gt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 3, "result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -526,7 +526,7 @@", "     vlan_id = None", "     (vlan, dot, id_candidate) = name.partition('.')", "     if dot:", "-        if (vlan == 'vlan'):", "+        if (vlan > 'vlan'):", "             return _(\"When using the <prefix>.<vlan id> interface name notation, <prefix> can't be equal to 'vlan'.\")", "         try:", "             vlan_id = int(id_candidate)"]]]}, "226": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\nAssertionError: <pykickstart.commands.network.F16_NetworkData object at 0x7f8bc6ef0f28> != <pykickstart.commands.network.F16_NetworkData object at 0x7f8bc6ea0c18>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -35,7 +35,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.device and (self.device == y.device))", "+        return (self.device and (self.device > y.device))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]]}, "339": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Eq", "7", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Eq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 7, "result-data": [{"occurrence": 7, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --ip=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --ip=\n?                                                          ------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -56,7 +56,7 @@", "             retval += (' --gateway=%s' % self.gateway)", "         if (self.hostname != ''):", "             retval += (' --hostname=%s' % self.hostname)", "-        if (self.ip != ''):", "+        if (self.ip == ''):", "             retval += (' --ip=%s' % self.ip)", "         if (self.mtu != ''):", "             retval += (' --mtu=%s' % self.mtu)"]]]}, "132": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_Eq", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_Eq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 5, "result-data": [{"occurrence": 5, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -511,7 +511,7 @@", "     def _getParser(self):", "         op = F9_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' == action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'ibft' value was added.\" % versionToLongString(RHEL6)))", "                 break", "         op.add_argument('--activate', action='store_true', version=RHEL6, default=False, help='\\n                        As noted above, using this option ensures any matching\\n                        devices beyond the first will also be activated.')"]]]}, "125": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_IsNot_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_IsNot_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 823, in parse\n  File \"pykickstart.commands.network\", line 804, in validate_network_interface_name\nTypeError: unorderable types: NoneType() < NoneType()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 251, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: unorderable types: NoneType() < NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -538,7 +538,7 @@", "             vlan_id = int(id_candidate)", "         except ValueError:", "             return _(\"If network --interfacename starts with 'vlan', valid vlan id should follow.\")", "-    if (vlan_id is not None):", "+    if (vlan_id < None):", "         if (not (MIN_VLAN_ID <= vlan_id <= MAX_VLAN_ID)):", "             return (_('The vlan id is out of the %(minimum)d-%(maximum)d vlan id range.') % {'minimum': MIN_VLAN_ID, 'maximum': MAX_VLAN_ID})", "     return None"]]]}, "66": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_In", "20", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_In", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 20, "result-data": [{"occurrence": 20, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -290,7 +290,7 @@", "         retval = ''", "         for nic in self.network:", "             retval += nic.__str__()", "-        if (retval != ''):", "+        if (retval in ''):", "             return ('# Network information\\n' + retval)", "         else:", "             return ''"]]]}, "287": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_NotIn", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 3, "result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 218, in runTest\n    \"network  --bootproto=dhcp --device=bridge0 --bridgeslaves=ens3,ens7 --bridgeopts=priority=40000\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 669, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nBad format of --bridgeopts, expecting key=value options separated by ','\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -460,7 +460,7 @@", "             opts = retval.bridgeopts.split(',')", "             for opt in opts:", "                 (_key, _sep, value) = opt.partition('=')", "-                if ((not value) or ('=' in value)):", "+                if ((not value) or ('=' not in value)):", "                     msg = formatErrorMsg(self.lineno, msg=_(\"Bad format of --bridgeopts, expecting key=value options separated by ','\"))", "                     raise KickstartParseError(msg)", "         return retval"]]]}, "311": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_GtE", "20", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 20, "result-data": [{"occurrence": 20, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -290,7 +290,7 @@", "         retval = ''", "         for nic in self.network:", "             retval += nic.__str__()", "-        if (retval != ''):", "+        if (retval >= ''):", "             return ('# Network information\\n' + retval)", "         else:", "             return ''"]]]}, "158": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_Lt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 2, "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"pykickstart.commands.network\", line 509, in __init__\n  File \"pykickstart.commands.network\", line 489, in __init__\n  File \"pykickstart.commands.network\", line 330, in __init__\n  File \"pykickstart.commands.network\", line 515, in _getParser\nTypeError: unorderable types: str() < list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -384,7 +384,7 @@", "     def _getParser(self):", "         op = F9_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' < action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'ibft' value was added.\" % versionToLongString(F16)))", "                 break", "         op.add_argument('--activate', action='store_true', version=F16, default=False, help='\\n                        As noted above, using this option ensures any matching\\n                        devices beyond the first will also be activated.')"]]]}, "140": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_IsNot", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_IsNot", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 3, "result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 218, in runTest\n    \"network  --bootproto=dhcp --device=bridge0 --bridgeslaves=ens3,ens7 --bridgeopts=priority=40000\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 669, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nBad format of --bridgeopts, expecting key=value options separated by ','\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -460,7 +460,7 @@", "             opts = retval.bridgeopts.split(',')", "             for opt in opts:", "                 (_key, _sep, value) = opt.partition('=')", "-                if ((not value) or ('=' in value)):", "+                if ((not value) or ('=' is not value)):", "                     msg = formatErrorMsg(self.lineno, msg=_(\"Bad format of --bridgeopts, expecting key=value options separated by ','\"))", "                     raise KickstartParseError(msg)", "         return retval"]]]}, "38": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_IsNot_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_IsNot_with_NotEq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -554,7 +554,7 @@", "     def parse(self, args):", "         retval = F21_Network.parse(self, args)", "         error_message = validate_network_interface_name(retval.interfacename)", "-        if (error_message is not None):", "+        if (error_message != None):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=error_message))", "         if retval.bridgeopts:", "             if (not retval.bridgeslaves):"]]]}, "203": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 76, in runTest\n    network --device=eth0\"\"\", UserWarning)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 62, in assert_parse_error\n    self.parser.readKickstartFromString(ks_string)\nAssertionError: UserWarning not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -318,7 +318,7 @@", "         nd = self.dataClass()", "         self.set_to_obj(ns, nd)", "         nd.lineno = self.lineno", "-        if (nd in self.dataList()):", "+        if (nd is self.dataList()):", "             warnings.warn((_('A network device with the name %s has already been defined.') % nd.device))", "         return nd", " "]]]}, "300": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_GtE", "9", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 9, "result-data": [{"occurrence": 9, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --nameserver=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --nameserver=\n?                                                          --------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -60,7 +60,7 @@", "             retval += (' --ip=%s' % self.ip)", "         if (self.mtu != ''):", "             retval += (' --mtu=%s' % self.mtu)", "-        if (self.nameserver != ''):", "+        if (self.nameserver >= ''):", "             retval += (' --nameserver=%s' % self.nameserver)", "         if (self.netmask != ''):", "             retval += (' --netmask=%s' % self.netmask)"]]]}, "276": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "boolean_replacer", "12", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "boolean_replacer", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 12, "result-data": [{"occurrence": 12, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 452}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --notksdevice\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --notksdevice\n?                                                          --------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -335,7 +335,7 @@", " ", "     def _getParser(self):", "         op = FC3_Network._getParser(self)", "-        op.add_argument('--notksdevice', action='store_true', default=False, version=FC4, help='\\n                        This network device is not used for kickstart.')", "+        op.add_argument('--notksdevice', action='store_true', default=True, version=FC4, help='\\n                        This network device is not used for kickstart.')", "         return op", " ", " class FC6_Network(FC4_Network):"]]]}, "181": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_NotIn", "10", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 10, "result-data": [{"occurrence": 10, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -62,7 +62,7 @@", "             retval += (' --mtu=%s' % self.mtu)", "         if (self.nameserver != ''):", "             retval += (' --nameserver=%s' % self.nameserver)", "-        if (self.netmask != ''):", "+        if (self.netmask not in ''):", "             retval += (' --netmask=%s' % self.netmask)", "         if self.nodns:", "             retval += ' --nodns'"]]]}, "237": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --device=eth0\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --device=eth0\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n?                           ++++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -44,7 +44,7 @@", "         retval = ''", "         if (self.bootProto != ''):", "             retval += (' --bootproto=%s' % self.bootProto)", "-        if (self.dhcpclass != ''):", "+        if (self.dhcpclass is ''):", "             retval += (' --dhcpclass=%s' % self.dhcpclass)", "         if (self.device != ''):", "             retval += (' --device=%s' % self.device)"]]]}, "112": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Lt", "10", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 10, "result-data": [{"occurrence": 10, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 46, in runTest\n    \"network  --bootproto=dhcp --device=eth0 --ip=1.2.3.4 --netmask=255.255.255.0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --device=eth0 --ip=1.2.3.4\\n' != 'network  --bootproto=dhcp --device=eth0 --ip=1.2.3.4 --netmask=255.255.255.0\\n'\n- network  --bootproto=dhcp --device=eth0 --ip=1.2.3.4\n+ network  --bootproto=dhcp --device=eth0 --ip=1.2.3.4 --netmask=255.255.255.0\n?                                                     ++++++++++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -62,7 +62,7 @@", "             retval += (' --mtu=%s' % self.mtu)", "         if (self.nameserver != ''):", "             retval += (' --nameserver=%s' % self.nameserver)", "-        if (self.netmask != ''):", "+        if (self.netmask < ''):", "             retval += (' --netmask=%s' % self.netmask)", "         if self.nodns:", "             retval += ' --nodns'"]]]}, "99": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_GtE", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 4, "result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -495,7 +495,7 @@", "     def _getParser(self):", "         op = FC6_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' >= action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'query' value was added.\" % versionToLongString(RHEL5)))", "                 break", "         return op"]]]}, "225": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_IsNot_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_IsNot_with_In", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 825, in parse\nTypeError: argument of type 'NoneType' is not iterable\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 251, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -554,7 +554,7 @@", "     def parse(self, args):", "         retval = F21_Network.parse(self, args)", "         error_message = validate_network_interface_name(retval.interfacename)", "-        if (error_message is not None):", "+        if (error_message in None):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=error_message))", "         if retval.bridgeopts:", "             if (not retval.bridgeslaves):"]]]}, "321": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "number_replacer", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "number_replacer", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 2, "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "line_number": 325}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -280,7 +280,7 @@", "     removedKeywords = KickstartCommand.removedKeywords", "     removedAttrs = KickstartCommand.removedAttrs", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         KickstartCommand.__init__(self, writePriority, *args, **kwargs)", "         self.bootprotoList = [BOOTPROTO_DHCP, BOOTPROTO_BOOTP, BOOTPROTO_STATIC]", "         self.op = self._getParser()"]]]}, "192": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_LtE_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_LtE_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtEWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 823, in parse\nTypeError: argument of type 'int' is not iterable\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 263, in runTest\n    self.assert_parse(\"network --interfacename=abc.123\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -539,7 +539,7 @@", "         except ValueError:", "             return _(\"If network --interfacename starts with 'vlan', valid vlan id should follow.\")", "     if (vlan_id is not None):", "-        if (not (MIN_VLAN_ID <= vlan_id <= MAX_VLAN_ID)):", "+        if (not (MIN_VLAN_ID not in vlan_id <= MAX_VLAN_ID)):", "             return (_('The vlan id is out of the %(minimum)d-%(maximum)d vlan id range.') % {'minimum': MIN_VLAN_ID, 'maximum': MAX_VLAN_ID})", "     return None", " "]]]}, "308": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_GtE", "17", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 17, "result-data": [{"occurrence": 17, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 213, in runTest\n    F21_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 206, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeopts=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeopts=\n?                                                          --------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -215,7 +215,7 @@", "         retval = F21_NetworkData._getArgsAsStr(self)", "         if (self.bridgeslaves != ''):", "             retval += (' --bridgeslaves=%s' % self.bridgeslaves)", "-        if (self.bridgeopts != ''):", "+        if (self.bridgeopts >= ''):", "             retval += (' --bridgeopts=%s' % self.bridgeopts)", "         return retval", " "]]]}, "350": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Eq", "18", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Eq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 18, "result-data": [{"occurrence": 18, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 251, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeslaves=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeslaves=\n?                                                          ----------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -270,7 +270,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = F21_NetworkData._getArgsAsStr(self)", "-        if (self.bridgeslaves != ''):", "+        if (self.bridgeslaves == ''):", "             retval += (' --bridgeslaves=%s' % self.bridgeslaves)", "         if (self.bridgeopts != ''):", "             retval += (' --bridgeopts=%s' % self.bridgeopts)"]]]}, "234": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_Lt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 3, "result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 826, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nWhen using the <prefix>.<vlan id> interface name notation, <prefix> can't be equal to 'vlan'.\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 263, in runTest\n    self.assert_parse(\"network --interfacename=abc.123\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: The following problem occurred on line 0 of the kickstart file:\n\nWhen using the <prefix>.<vlan id> interface name notation, <prefix> can't be equal to 'vlan'.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -526,7 +526,7 @@", "     vlan_id = None", "     (vlan, dot, id_candidate) = name.partition('.')", "     if dot:", "-        if (vlan == 'vlan'):", "+        if (vlan < 'vlan'):", "             return _(\"When using the <prefix>.<vlan id> interface name notation, <prefix> can't be equal to 'vlan'.\")", "         try:", "             vlan_id = int(id_candidate)"]]]}, "270": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "boolean_replacer", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "boolean_replacer", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 6, "result-data": [{"occurrence": 6, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 160}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -128,7 +128,7 @@", " ", "     def __init__(self, *args, **kwargs):", "         F8_NetworkData.__init__(self, *args, **kwargs)", "-        self.activate = kwargs.get('activate', False)", "+        self.activate = kwargs.get('activate', True)", "         self.nodefroute = kwargs.get('nodefroute', False)", "         self.wpakey = kwargs.get('wpakey', '')", " "]]]}, "111": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Lt", "9", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 9, "result-data": [{"occurrence": 9, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 48, in runTest\n    \"network  --bootproto=dhcp --device=eth0 --nameserver=ns.wherever.com\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --device=eth0\\n' != 'network  --bootproto=dhcp --device=eth0 --nameserver=ns.wherever.com\\n'\n- network  --bootproto=dhcp --device=eth0\n+ network  --bootproto=dhcp --device=eth0 --nameserver=ns.wherever.com\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -60,7 +60,7 @@", "             retval += (' --ip=%s' % self.ip)", "         if (self.mtu != ''):", "             retval += (' --mtu=%s' % self.mtu)", "-        if (self.nameserver != ''):", "+        if (self.nameserver < ''):", "             retval += (' --nameserver=%s' % self.nameserver)", "         if (self.netmask != ''):", "             retval += (' --netmask=%s' % self.netmask)"]]]}, "262": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_LtE_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_LtE_with_IsNot", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtEWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 826, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nThe vlan id is out of the 0-4095 vlan id range.\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 275, in runTest\n    self.assert_parse(\"network --interfacename=vlan0\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: The following problem occurred on line 0 of the kickstart file:\n\nThe vlan id is out of the 0-4095 vlan id range.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -539,7 +539,7 @@", "         except ValueError:", "             return _(\"If network --interfacename starts with 'vlan', valid vlan id should follow.\")", "     if (vlan_id is not None):", "-        if (not (MIN_VLAN_ID <= vlan_id <= MAX_VLAN_ID)):", "+        if (not (MIN_VLAN_ID is not vlan_id <= MAX_VLAN_ID)):", "             return (_('The vlan id is out of the %(minimum)d-%(maximum)d vlan id range.') % {'minimum': MIN_VLAN_ID, 'maximum': MAX_VLAN_ID})", "     return None", " "]]]}, "294": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_GtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 3, "result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --essid=\"\"\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --essid=\"\"\n?                                                          -----------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -48,7 +48,7 @@", "             retval += (' --dhcpclass=%s' % self.dhcpclass)", "         if (self.device != ''):", "             retval += (' --device=%s' % self.device)", "-        if (self.essid != ''):", "+        if (self.essid >= ''):", "             retval += (' --essid=\"%s\"' % self.essid)", "         if (self.ethtool != ''):", "             retval += (' --ethtool=\"%s\"' % self.ethtool)"]]]}, "348": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Eq", "16", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Eq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 16, "result-data": [{"occurrence": 16, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 213, in runTest\n    F21_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 206, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeslaves=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeslaves=\n?                                                          ----------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -213,7 +213,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = F21_NetworkData._getArgsAsStr(self)", "-        if (self.bridgeslaves != ''):", "+        if (self.bridgeslaves == ''):", "             retval += (' --bridgeslaves=%s' % self.bridgeslaves)", "         if (self.bridgeopts != ''):", "             retval += (' --bridgeopts=%s' % self.bridgeopts)"]]]}, "341": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Eq", "9", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Eq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 9, "result-data": [{"occurrence": 9, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --nameserver=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --nameserver=\n?                                                          --------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -60,7 +60,7 @@", "             retval += (' --ip=%s' % self.ip)", "         if (self.mtu != ''):", "             retval += (' --mtu=%s' % self.mtu)", "-        if (self.nameserver != ''):", "+        if (self.nameserver == ''):", "             retval += (' --nameserver=%s' % self.nameserver)", "         if (self.netmask != ''):", "             retval += (' --netmask=%s' % self.netmask)"]]]}, "302": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_GtE", "11", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 11, "result-data": [{"occurrence": 11, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --wepkey=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --wepkey=\n?                                                          ----------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -68,7 +68,7 @@", "             retval += ' --nodns'", "         if (not self.onboot):", "             retval += ' --onboot=off'", "-        if (self.wepkey != ''):", "+        if (self.wepkey >= ''):", "             retval += (' --wepkey=%s' % self.wepkey)", "         return retval", " "]]]}, "145": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_NotEq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 33, in runTest\n    self.assertNotEqual(self.assert_parse(\"network --device=eth0\"), None)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/unittest/case.py\", line 864, in assertNotEqual\n    if not first != second:\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\n  File \"pykickstart.commands.network\", line 62, in __ne__\nRecursionError: maximum recursion depth exceeded while calling a Python object\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -38,7 +38,7 @@", "         return (self.device and (self.device == y.device))", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self != y))", " ", "     def _getArgsAsStr(self):", "         retval = ''"]]]}, "220": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -38,7 +38,7 @@", "         return (self.device and (self.device == y.device))", " ", "     def __ne__(self, y):", "-        return (not (self == y))", "+        return (not (self is y))", " ", "     def _getArgsAsStr(self):", "         retval = ''"]]]}, "274": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "boolean_replacer", "10", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "boolean_replacer", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 10, "result-data": [{"occurrence": 10, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 282}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -240,7 +240,7 @@", "     def __init__(self, *args, **kwargs):", "         F8_NetworkData.__init__(self, *args, **kwargs)", "         self.activate = kwargs.get('activate', False)", "-        self.nodefroute = kwargs.get('nodefroute', False)", "+        self.nodefroute = kwargs.get('nodefroute', True)", "         self.vlanid = kwargs.get('vlanid', '')", "         self.bondslaves = kwargs.get('bondslaves', '')", "         self.bondopts = kwargs.get('bondopts', '')"]]]}, "45": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_LtE_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_LtE_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtEWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 826, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nThe vlan id is out of the 0-4095 vlan id range.\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 276, in runTest\n    self.assert_parse(\"network --interfacename=vlan4095\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: The following problem occurred on line 0 of the kickstart file:\n\nThe vlan id is out of the 0-4095 vlan id range.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -539,7 +539,7 @@", "         except ValueError:", "             return _(\"If network --interfacename starts with 'vlan', valid vlan id should follow.\")", "     if (vlan_id is not None):", "-        if (not (MIN_VLAN_ID <= vlan_id <= MAX_VLAN_ID)):", "+        if (not (MIN_VLAN_ID <= vlan_id < MAX_VLAN_ID)):", "             return (_('The vlan id is out of the %(minimum)d-%(maximum)d vlan id range.') % {'minimum': MIN_VLAN_ID, 'maximum': MAX_VLAN_ID})", "     return None", " "]]]}, "60": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_In", "14", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_In", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 14, "result-data": [{"occurrence": 14, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bondslaves=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bondslaves=\n?                                                          --------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -155,7 +155,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = F16_NetworkData._getArgsAsStr(self)", "-        if (self.bondslaves != ''):", "+        if (self.bondslaves in ''):", "             retval += (' --bondslaves=%s' % self.bondslaves)", "         if (self.bondopts != ''):", "             retval += (' --bondopts=%s' % self.bondopts)"]]]}, "183": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_NotIn", "12", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 12, "result-data": [{"occurrence": 12, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -118,7 +118,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = FC6_NetworkData._getArgsAsStr(self)", "-        if (self.ipv6 != ''):", "+        if (self.ipv6 not in ''):", "             retval += (' --ipv6=%s' % self.ipv6)", "         return retval", " "]]]}, "241": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Is", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 5, "result-data": [{"occurrence": 5, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --gateway=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --gateway=\n?                                                          -----------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -52,7 +52,7 @@", "             retval += (' --essid=\"%s\"' % self.essid)", "         if (self.ethtool != ''):", "             retval += (' --ethtool=\"%s\"' % self.ethtool)", "-        if (self.gateway != ''):", "+        if (self.gateway is ''):", "             retval += (' --gateway=%s' % self.gateway)", "         if (self.hostname != ''):", "             retval += (' --hostname=%s' % self.hostname)"]]]}, "119": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Lt", "17", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 17, "result-data": [{"occurrence": 17, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 218, in runTest\n    \"network  --bootproto=dhcp --device=bridge0 --bridgeslaves=ens3,ens7 --bridgeopts=priority=40000\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'netw[31 chars]bridge0 --bridgeslaves=ens3,ens7\\n' != 'netw[31 chars]bridge0 --bridgeslaves=ens3,ens7 --bridgeopts=priority=40000\\n'\n- network  --bootproto=dhcp --device=bridge0 --bridgeslaves=ens3,ens7\n+ network  --bootproto=dhcp --device=bridge0 --bridgeslaves=ens3,ens7 --bridgeopts=priority=40000\n?                                                                    ++++++++++++++++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -215,7 +215,7 @@", "         retval = F21_NetworkData._getArgsAsStr(self)", "         if (self.bridgeslaves != ''):", "             retval += (' --bridgeslaves=%s' % self.bridgeslaves)", "-        if (self.bridgeopts != ''):", "+        if (self.bridgeopts < ''):", "             retval += (' --bridgeopts=%s' % self.bridgeopts)", "         return retval", " "]]]}, "109": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Lt", "7", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 7, "result-data": [{"occurrence": 7, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 46, in runTest\n    \"network  --bootproto=dhcp --device=eth0 --ip=1.2.3.4 --netmask=255.255.255.0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --device=eth0 --netmask=255.255.255.0\\n' != 'network  --bootproto=dhcp --device=eth0 --ip=1.2.3.4 --netmask=255.255.255.0\\n'\n- network  --bootproto=dhcp --device=eth0 --netmask=255.255.255.0\n+ network  --bootproto=dhcp --device=eth0 --ip=1.2.3.4 --netmask=255.255.255.0\n?                                        +++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -56,7 +56,7 @@", "             retval += (' --gateway=%s' % self.gateway)", "         if (self.hostname != ''):", "             retval += (' --hostname=%s' % self.hostname)", "-        if (self.ip != ''):", "+        if (self.ip < ''):", "             retval += (' --ip=%s' % self.ip)", "         if (self.mtu != ''):", "             retval += (' --mtu=%s' % self.mtu)"]]]}, "55": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_In", "9", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_In", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 9, "result-data": [{"occurrence": 9, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --nameserver=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --nameserver=\n?                                                          --------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -60,7 +60,7 @@", "             retval += (' --ip=%s' % self.ip)", "         if (self.mtu != ''):", "             retval += (' --mtu=%s' % self.mtu)", "-        if (self.nameserver != ''):", "+        if (self.nameserver in ''):", "             retval += (' --nameserver=%s' % self.nameserver)", "         if (self.netmask != ''):", "             retval += (' --netmask=%s' % self.netmask)"]]]}, "281": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "boolean_replacer", "17", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "boolean_replacer", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 17, "result-data": [{"occurrence": 17, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 693}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 80, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --notksdevice\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --notksdevice\n?                                                          --------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -481,7 +481,7 @@", " ", "     def _getParser(self):", "         op = FC3_Network._getParser(self)", "-        op.add_argument('--notksdevice', action='store_true', default=False, version=RHEL4, help='')", "+        op.add_argument('--notksdevice', action='store_true', default=True, version=RHEL4, help='')", "         return op", " ", " class RHEL5_Network(FC6_Network):"]]]}, "39": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_IsNot", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 34, in runTest\n    self.assertNotEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth1\"))\nAssertionError: <pykickstart.commands.network.F16_NetworkData object at 0x7fd12495c438> == <pykickstart.commands.network.F16_NetworkData object at 0x7fd124a7d198>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -35,7 +35,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.device and (self.device == y.device))", "+        return (self.device and (self.device is not y.device))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]]}, "3": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 434, in parse\nTypeError: unorderable types: F16_NetworkData() > list()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: unorderable types: F16_NetworkData() > list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -318,7 +318,7 @@", "         nd = self.dataClass()", "         self.set_to_obj(ns, nd)", "         nd.lineno = self.lineno", "-        if (nd in self.dataList()):", "+        if (nd > self.dataList()):", "             warnings.warn((_('A network device with the name %s has already been defined.') % nd.device))", "         return nd", " "]]]}, "250": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Is", "14", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 14, "result-data": [{"occurrence": 14, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bondslaves=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bondslaves=\n?                                                          --------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -155,7 +155,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = F16_NetworkData._getArgsAsStr(self)", "-        if (self.bondslaves != ''):", "+        if (self.bondslaves is ''):", "             retval += (' --bondslaves=%s' % self.bondslaves)", "         if (self.bondopts != ''):", "             retval += (' --bondopts=%s' % self.bondopts)"]]]}, "144": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_NotEq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\nAssertionError: <pykickstart.commands.network.F16_NetworkData object at 0x7f7eebf10cc0> != <pykickstart.commands.network.F16_NetworkData object at 0x7f7eebf3fa90>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -35,7 +35,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.device and (self.device == y.device))", "+        return (self.device and (self.device != y.device))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]]}, "143": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_IsNot", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_IsNot", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 6, "result-data": [{"occurrence": 6, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 285, in runTest\n    \"network  --bootproto=dhcp --device=bridge0 --bridgeslaves=ens3,ens7 --bridgeopts=priority=40000\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 837, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nBad format of --bridgeopts, expecting key=value options separated by ','\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -563,7 +563,7 @@", "             opts = retval.bridgeopts.split(',')", "             for opt in opts:", "                 (_key, _sep, value) = opt.partition('=')", "-                if ((not value) or ('=' in value)):", "+                if ((not value) or ('=' is not value)):", "                     msg = formatErrorMsg(self.lineno, msg=_(\"Bad format of --bridgeopts, expecting key=value options separated by ','\"))", "                     raise KickstartParseError(msg)", "         return retval"]]]}, "314": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_In", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_In", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 2, "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/argparse.py\", line 2287, in _get_value\n    result = type_func(arg_string)\n  File \"pykickstart.commands.network\", line 591, in teamslaves_cb\nTypeError: argument of type 'int' is not iterable\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/argparse.py\", line 1759, in parse_known_args\n    namespace, args = self._parse_known_args(args, namespace)\n  File \"/opt/rh/rh-python35/root/usr/lib64/python3.5/argparse.py\", line 1965, in _parse_known_args\n    start_index = consume_optional(start_index)\nargparse.ArgumentError: argument --teamslaves: invalid teamslaves_cb value: 'p3p1\\'{\"prio\": -10, \"sticky\": true}\\',p3p2\\'{\"prio\": 100}\\''\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 428, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nargument --teamslaves: invalid teamslaves_cb value: 'p3p1\\'{\"prio\": -10, \"sticky\": true}\\',p3p2\\'{\"prio\": 100}\\''\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 165, in runTest\n    self.assert_parse(cmd)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: The following problem occurred on line 0 of the kickstart file:\n\nargument --teamslaves: invalid teamslaves_cb value: 'p3p1\\'{\"prio\": -10, \"sticky\": true}\\',p3p2\\'{\"prio\": 100}\\''\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -419,7 +419,7 @@", "             teamslaves = []", "             if value:", "                 parts = value.split(\"'\")", "-                if ((len(parts) % 2) == 1):", "+                if ((len(parts) % 2) in 1):", "                     if (not parts[(- 1)]):", "                         parts = parts[:(- 1)]", "                     else:"]]]}, "1": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_LtE_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_LtE_with_Eq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceLtEWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 826, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nThe vlan id is out of the 0-4095 vlan id range.\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 263, in runTest\n    self.assert_parse(\"network --interfacename=abc.123\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: The following problem occurred on line 0 of the kickstart file:\n\nThe vlan id is out of the 0-4095 vlan id range.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -539,7 +539,7 @@", "         except ValueError:", "             return _(\"If network --interfacename starts with 'vlan', valid vlan id should follow.\")", "     if (vlan_id is not None):", "-        if (not (MIN_VLAN_ID <= vlan_id <= MAX_VLAN_ID)):", "+        if (not (MIN_VLAN_ID == vlan_id <= MAX_VLAN_ID)):", "             return (_('The vlan id is out of the %(minimum)d-%(maximum)d vlan id range.') % {'minimum': MIN_VLAN_ID, 'maximum': MAX_VLAN_ID})", "     return None", " "]]]}, "30": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Gt", "18", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 18, "result-data": [{"occurrence": 18, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -270,7 +270,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = F21_NetworkData._getArgsAsStr(self)", "-        if (self.bridgeslaves != ''):", "+        if (self.bridgeslaves > ''):", "             retval += (' --bridgeslaves=%s' % self.bridgeslaves)", "         if (self.bridgeopts != ''):", "             retval += (' --bridgeopts=%s' % self.bridgeopts)"]]]}, "295": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_GtE", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 4, "result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --ethtool=\"\"\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --ethtool=\"\"\n?                                                          -------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -50,7 +50,7 @@", "             retval += (' --device=%s' % self.device)", "         if (self.essid != ''):", "             retval += (' --essid=\"%s\"' % self.essid)", "-        if (self.ethtool != ''):", "+        if (self.ethtool >= ''):", "             retval += (' --ethtool=\"%s\"' % self.ethtool)", "         if (self.gateway != ''):", "             retval += (' --gateway=%s' % self.gateway)"]]]}, "219": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\nAssertionError: <pykickstart.commands.network.F16_NetworkData object at 0x7f9910a07c18> != <pykickstart.commands.network.F16_NetworkData object at 0x7f99109b8400>\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -35,7 +35,7 @@", "     def __eq__(self, y):", "         if (not y):", "             return False", "-        return (self.device and (self.device == y.device))", "+        return (self.device and (self.device is y.device))", " ", "     def __ne__(self, y):", "         return (not (self == y))"]]]}, "187": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_NotIn", "16", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 16, "result-data": [{"occurrence": 16, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -213,7 +213,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = F21_NetworkData._getArgsAsStr(self)", "-        if (self.bridgeslaves != ''):", "+        if (self.bridgeslaves not in ''):", "             retval += (' --bridgeslaves=%s' % self.bridgeslaves)", "         if (self.bridgeopts != ''):", "             retval += (' --bridgeopts=%s' % self.bridgeopts)"]]]}, "310": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_GtE", "19", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 19, "result-data": [{"occurrence": 19, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 251, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeopts=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeopts=\n?                                                          --------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -272,7 +272,7 @@", "         retval = F21_NetworkData._getArgsAsStr(self)", "         if (self.bridgeslaves != ''):", "             retval += (' --bridgeslaves=%s' % self.bridgeslaves)", "-        if (self.bridgeopts != ''):", "+        if (self.bridgeopts >= ''):", "             retval += (' --bridgeopts=%s' % self.bridgeopts)", "         return retval", " "]]]}, "13": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -44,7 +44,7 @@", "         retval = ''", "         if (self.bootProto != ''):", "             retval += (' --bootproto=%s' % self.bootProto)", "-        if (self.dhcpclass != ''):", "+        if (self.dhcpclass > ''):", "             retval += (' --dhcpclass=%s' % self.dhcpclass)", "         if (self.device != ''):", "             retval += (' --device=%s' % self.device)"]]]}, "26": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Gt", "14", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 14, "result-data": [{"occurrence": 14, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -155,7 +155,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = F16_NetworkData._getArgsAsStr(self)", "-        if (self.bondslaves != ''):", "+        if (self.bondslaves > ''):", "             retval += (' --bondslaves=%s' % self.bondslaves)", "         if (self.bondopts != ''):", "             retval += (' --bondopts=%s' % self.bondopts)"]]]}, "202": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_LtE", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_LtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 4, "result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -533,7 +533,7 @@", "         except ValueError:", "             return _(\"If network --interfacename contains a '.', valid vlan id should follow.\")", "     (empty, sep, id_candidate) = name.partition('vlan')", "-    if (sep and (empty == '')):", "+    if (sep and (empty <= '')):", "         try:", "             vlan_id = int(id_candidate)", "         except ValueError:"]]]}, "74": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_LtE", "7", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_LtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 7, "result-data": [{"occurrence": 7, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --ip=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --ip=\n?                                                          ------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -56,7 +56,7 @@", "             retval += (' --gateway=%s' % self.gateway)", "         if (self.hostname != ''):", "             retval += (' --hostname=%s' % self.hostname)", "-        if (self.ip != ''):", "+        if (self.ip <= ''):", "             retval += (' --ip=%s' % self.ip)", "         if (self.mtu != ''):", "             retval += (' --mtu=%s' % self.mtu)"]]]}, "206": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_Is", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 3, "result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 227, in runTest\n    self.assert_parse_error(\"network --device bridge0 --bootproto dhcp \"\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -460,7 +460,7 @@", "             opts = retval.bridgeopts.split(',')", "             for opt in opts:", "                 (_key, _sep, value) = opt.partition('=')", "-                if ((not value) or ('=' in value)):", "+                if ((not value) or ('=' is value)):", "                     msg = formatErrorMsg(self.lineno, msg=_(\"Bad format of --bridgeopts, expecting key=value options separated by ','\"))", "                     raise KickstartParseError(msg)", "         return retval"]]]}, "261": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_GtE", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 4, "result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -533,7 +533,7 @@", "         except ValueError:", "             return _(\"If network --interfacename contains a '.', valid vlan id should follow.\")", "     (empty, sep, id_candidate) = name.partition('vlan')", "-    if (sep and (empty == '')):", "+    if (sep and (empty >= '')):", "         try:", "             vlan_id = int(id_candidate)", "         except ValueError:"]]]}, "271": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "boolean_replacer", "7", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "boolean_replacer", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 7, "result-data": [{"occurrence": 7, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 161}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -129,7 +129,7 @@", "     def __init__(self, *args, **kwargs):", "         F8_NetworkData.__init__(self, *args, **kwargs)", "         self.activate = kwargs.get('activate', False)", "-        self.nodefroute = kwargs.get('nodefroute', False)", "+        self.nodefroute = kwargs.get('nodefroute', True)", "         self.wpakey = kwargs.get('wpakey', '')", " ", "     def _getArgsAsStr(self):"]]]}, "11": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_IsNot_with_Eq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_IsNot_with_Eq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 826, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nNone\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 251, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: The following problem occurred on line 0 of the kickstart file:\n\nNone\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -554,7 +554,7 @@", "     def parse(self, args):", "         retval = F21_Network.parse(self, args)", "         error_message = validate_network_interface_name(retval.interfacename)", "-        if (error_message is not None):", "+        if (error_message == None):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=error_message))", "         if retval.bridgeopts:", "             if (not retval.bridgeslaves):"]]]}, "243": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Is", "7", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 7, "result-data": [{"occurrence": 7, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --ip=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --ip=\n?                                                          ------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -56,7 +56,7 @@", "             retval += (' --gateway=%s' % self.gateway)", "         if (self.hostname != ''):", "             retval += (' --hostname=%s' % self.hostname)", "-        if (self.ip != ''):", "+        if (self.ip is ''):", "             retval += (' --ip=%s' % self.ip)", "         if (self.mtu != ''):", "             retval += (' --mtu=%s' % self.mtu)"]]]}, "123": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_IsNot_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_IsNot_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 823, in parse\n  File \"pykickstart.commands.network\", line 805, in validate_network_interface_name\nTypeError: unorderable types: int() <= NoneType()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 251, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: unorderable types: int() <= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -538,7 +538,7 @@", "             vlan_id = int(id_candidate)", "         except ValueError:", "             return _(\"If network --interfacename starts with 'vlan', valid vlan id should follow.\")", "-    if (vlan_id is not None):", "+    if (vlan_id is None):", "         if (not (MIN_VLAN_ID <= vlan_id <= MAX_VLAN_ID)):", "             return (_('The vlan id is out of the %(minimum)d-%(maximum)d vlan id range.') % {'minimum': MIN_VLAN_ID, 'maximum': MAX_VLAN_ID})", "     return None"]]]}, "293": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_GtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 2, "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 90, in runTest\n    \"network  --bootproto=dhcp --notksdevice\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --device= --notksdevice\\n' != 'network  --bootproto=dhcp --notksdevice\\n'\n- network  --bootproto=dhcp --device= --notksdevice\n?                           ----------\n+ network  --bootproto=dhcp --notksdevice\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -46,7 +46,7 @@", "             retval += (' --bootproto=%s' % self.bootProto)", "         if (self.dhcpclass != ''):", "             retval += (' --dhcpclass=%s' % self.dhcpclass)", "-        if (self.device != ''):", "+        if (self.device >= ''):", "             retval += (' --device=%s' % self.device)", "         if (self.essid != ''):", "             retval += (' --essid=\"%s\"' % self.essid)"]]]}, "230": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_Gt", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 4, "result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 266, in runTest\n    self.assert_parse_error(\"network --interfacename=vlan\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -533,7 +533,7 @@", "         except ValueError:", "             return _(\"If network --interfacename contains a '.', valid vlan id should follow.\")", "     (empty, sep, id_candidate) = name.partition('vlan')", "-    if (sep and (empty == '')):", "+    if (sep and (empty > '')):", "         try:", "             vlan_id = int(id_candidate)", "         except ValueError:"]]]}, "307": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_GtE", "16", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_GtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 16, "result-data": [{"occurrence": 16, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 213, in runTest\n    F21_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 206, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeslaves=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeslaves=\n?                                                          ----------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -213,7 +213,7 @@", " ", "     def _getArgsAsStr(self):", "         retval = F21_NetworkData._getArgsAsStr(self)", "-        if (self.bridgeslaves != ''):", "+        if (self.bridgeslaves >= ''):", "             retval += (' --bridgeslaves=%s' % self.bridgeslaves)", "         if (self.bridgeopts != ''):", "             retval += (' --bridgeopts=%s' % self.bridgeopts)"]]]}, "177": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_NotIn", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 6, "result-data": [{"occurrence": 6, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -54,7 +54,7 @@", "             retval += (' --ethtool=\"%s\"' % self.ethtool)", "         if (self.gateway != ''):", "             retval += (' --gateway=%s' % self.gateway)", "-        if (self.hostname != ''):", "+        if (self.hostname not in ''):", "             retval += (' --hostname=%s' % self.hostname)", "         if (self.ip != ''):", "             retval += (' --ip=%s' % self.ip)"]]]}, "255": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Is", "19", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 19, "result-data": [{"occurrence": 19, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 251, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeopts=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --bridgeopts=\n?                                                          --------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -272,7 +272,7 @@", "         retval = F21_NetworkData._getArgsAsStr(self)", "         if (self.bridgeslaves != ''):", "             retval += (' --bridgeslaves=%s' % self.bridgeslaves)", "-        if (self.bridgeopts != ''):", "+        if (self.bridgeopts is ''):", "             retval += (' --bridgeopts=%s' % self.bridgeopts)", "         return retval", " "]]]}, "73": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_LtE", "6", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_LtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 6, "result-data": [{"occurrence": 6, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --hostname=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --hostname=\n?                                                          ------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -54,7 +54,7 @@", "             retval += (' --ethtool=\"%s\"' % self.ethtool)", "         if (self.gateway != ''):", "             retval += (' --gateway=%s' % self.gateway)", "-        if (self.hostname != ''):", "+        if (self.hostname <= ''):", "             retval += (' --hostname=%s' % self.hostname)", "         if (self.ip != ''):", "             retval += (' --ip=%s' % self.ip)"]]]}, "239": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Is", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 3, "result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --essid=\"\"\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --essid=\"\"\n?                                                          -----------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -48,7 +48,7 @@", "             retval += (' --dhcpclass=%s' % self.dhcpclass)", "         if (self.device != ''):", "             retval += (' --device=%s' % self.device)", "-        if (self.essid != ''):", "+        if (self.essid is ''):", "             retval += (' --essid=\"%s\"' % self.essid)", "         if (self.ethtool != ''):", "             retval += (' --ethtool=\"%s\"' % self.ethtool)"]]]}, "71": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_LtE", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_LtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 4, "result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --ethtool=\"\"\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --ethtool=\"\"\n?                                                          -------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -50,7 +50,7 @@", "             retval += (' --device=%s' % self.device)", "         if (self.essid != ''):", "             retval += (' --essid=\"%s\"' % self.essid)", "-        if (self.ethtool != ''):", "+        if (self.ethtool <= ''):", "             retval += (' --ethtool=\"%s\"' % self.ethtool)", "         if (self.gateway != ''):", "             retval += (' --gateway=%s' % self.gateway)"]]]}, "267": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "boolean_replacer", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "boolean_replacer", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 3, "result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "line_number": 109}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -83,7 +83,7 @@", " ", "     def __init__(self, *args, **kwargs):", "         FC3_NetworkData.__init__(self, *args, **kwargs)", "-        self.notksdevice = kwargs.get('notksdevice', False)", "+        self.notksdevice = kwargs.get('notksdevice', True)", " ", "     def _getArgsAsStr(self):", "         retval = FC3_NetworkData._getArgsAsStr(self)"]]]}, "216": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_NotIn", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_NotIn", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 4, "result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 266, in runTest\n    self.assert_parse_error(\"network --interfacename=vlan\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -533,7 +533,7 @@", "         except ValueError:", "             return _(\"If network --interfacename contains a '.', valid vlan id should follow.\")", "     (empty, sep, id_candidate) = name.partition('vlan')", "-    if (sep and (empty == '')):", "+    if (sep and (empty not in '')):", "         try:", "             vlan_id = int(id_candidate)", "         except ValueError:"]]]}, "122": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Lt", "20", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 20, "result-data": [{"occurrence": 20, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -290,7 +290,7 @@", "         retval = ''", "         for nic in self.network:", "             retval += nic.__str__()", "-        if (retval != ''):", "+        if (retval < ''):", "             return ('# Network information\\n' + retval)", "         else:", "             return ''"]]]}, "205": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_Is", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 2, "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -384,7 +384,7 @@", "     def _getParser(self):", "         op = F9_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' is action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'ibft' value was added.\" % versionToLongString(F16)))", "                 break", "         op.add_argument('--activate', action='store_true', version=F16, default=False, help='\\n                        As noted above, using this option ensures any matching\\n                        devices beyond the first will also be activated.')"]]]}, "247": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Is", "11", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 11, "result-data": [{"occurrence": 11, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --wepkey=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --wepkey=\n?                                                          ----------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -68,7 +68,7 @@", "             retval += ' --nodns'", "         if (not self.onboot):", "             retval += ' --onboot=off'", "-        if (self.wepkey != ''):", "+        if (self.wepkey is ''):", "             retval += (' --wepkey=%s' % self.wepkey)", "         return retval", " "]]]}, "4": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 161, in assert_parse\n    parser = self.getParser(inputStr)\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 151, in getParser\n    parser = self.handler().commands[cmd]\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 290, in __init__\n    self._registerCommands(mapping, dataMapping, commandUpdates, dataUpdates)\n  File \"/home/atodorov/repos/git/pykickstart/pykickstart/base.py\", line 400, in _registerCommands\n    cmdObj = cmdClass()\n  File \"pykickstart.commands.network\", line 509, in __init__\n  File \"pykickstart.commands.network\", line 489, in __init__\n  File \"pykickstart.commands.network\", line 330, in __init__\n  File \"pykickstart.commands.network\", line 513, in _getParser\n  File \"pykickstart.commands.network\", line 495, in _getParser\nTypeError: unorderable types: str() > list()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -368,7 +368,7 @@", "     def _getParser(self):", "         op = F8_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' > action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'query' value was added.\" % versionToLongString(F9)))", "                 break", "         return op"]]]}, "164": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_IsNot_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_IsNot_with_Gt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 1, "result-data": [{"occurrence": 1, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithGt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 825, in parse\nTypeError: unorderable types: NoneType() > NoneType()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 251, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: unorderable types: NoneType() > NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -554,7 +554,7 @@", "     def parse(self, args):", "         retval = F21_Network.parse(self, args)", "         error_message = validate_network_interface_name(retval.interfacename)", "-        if (error_message is not None):", "+        if (error_message > None):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=error_message))", "         if retval.bridgeopts:", "             if (not retval.bridgeslaves):"]]]}, "208": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_Is", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_Is", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 5, "result-data": [{"occurrence": 5, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithIs", "line_number": "<UNKNOWN>"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -511,7 +511,7 @@", "     def _getParser(self):", "         op = F9_Network._getParser(self)", "         for action in op._actions:", "-            if ('--bootproto' in action.option_strings):", "+            if ('--bootproto' is action.option_strings):", "                 action.help += dedent((\"\\n\\n                        .. versionchanged:: %s\\n\\n                        The 'ibft' value was added.\" % versionToLongString(RHEL6)))", "                 break", "         op.add_argument('--activate', action='store_true', version=RHEL6, default=False, help='\\n                        As noted above, using this option ensures any matching\\n                        devices beyond the first will also be activated.')"]]]}, "104": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Lt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Lt", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 2, "result-data": [{"occurrence": 2, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n?                                            ++++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -46,7 +46,7 @@", "             retval += (' --bootproto=%s' % self.bootProto)", "         if (self.dhcpclass != ''):", "             retval += (' --dhcpclass=%s' % self.dhcpclass)", "-        if (self.device != ''):", "+        if (self.device < ''):", "             retval += (' --device=%s' % self.device)", "         if (self.essid != ''):", "             retval += (' --essid=\"%s\"' % self.essid)"]]]}, "336": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_Eq", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_Eq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 4, "result-data": [{"occurrence": 4, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --ethtool=\"\"\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --ethtool=\"\"\n?                                                          -------------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -50,7 +50,7 @@", "             retval += (' --device=%s' % self.device)", "         if (self.essid != ''):", "             retval += (' --essid=\"%s\"' % self.essid)", "-        if (self.ethtool != ''):", "+        if (self.ethtool == ''):", "             retval += (' --ethtool=\"%s\"' % self.ethtool)", "         if (self.gateway != ''):", "             retval += (' --gateway=%s' % self.gateway)"]]]}, "33": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_IsNot_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_IsNot_with_LtE", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithLtE", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 823, in parse\n  File \"pykickstart.commands.network\", line 804, in validate_network_interface_name\nTypeError: unorderable types: NoneType() <= NoneType()\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 251, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: unorderable types: NoneType() <= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -538,7 +538,7 @@", "             vlan_id = int(id_candidate)", "         except ValueError:", "             return _(\"If network --interfacename starts with 'vlan', valid vlan id should follow.\")", "-    if (vlan_id is not None):", "+    if (vlan_id <= None):", "         if (not (MIN_VLAN_ID <= vlan_id <= MAX_VLAN_ID)):", "             return (_('The vlan id is out of the %(minimum)d-%(maximum)d vlan id range.') % {'minimum': MIN_VLAN_ID, 'maximum': MAX_VLAN_ID})", "     return None"]]]}, "224": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_IsNot_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_IsNot_with_In", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 823, in parse\n  File \"pykickstart.commands.network\", line 804, in validate_network_interface_name\nTypeError: argument of type 'NoneType' is not iterable\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 251, in runTest\n    F20_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 160, in runTest\n    F19_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 149, in runTest\n    F16_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -538,7 +538,7 @@", "             vlan_id = int(id_candidate)", "         except ValueError:", "             return _(\"If network --interfacename starts with 'vlan', valid vlan id should follow.\")", "-    if (vlan_id is not None):", "+    if (vlan_id in None):", "         if (not (MIN_VLAN_ID <= vlan_id <= MAX_VLAN_ID)):", "             return (_('The vlan id is out of the %(minimum)d-%(maximum)d vlan id range.') % {'minimum': MIN_VLAN_ID, 'maximum': MAX_VLAN_ID})", "     return None"]]]}, "130": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_Eq", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_Eq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 3, "result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 227, in runTest\n    self.assert_parse_error(\"network --device bridge0 --bootproto dhcp \"\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -460,7 +460,7 @@", "             opts = retval.bridgeopts.split(',')", "             for opt in opts:", "                 (_key, _sep, value) = opt.partition('=')", "-                if ((not value) or ('=' in value)):", "+                if ((not value) or ('=' == value)):", "                     msg = formatErrorMsg(self.lineno, msg=_(\"Bad format of --bridgeopts, expecting key=value options separated by ','\"))", "                     raise KickstartParseError(msg)", "         return retval"]]]}, "51": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_NotEq_with_In", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_NotEq_with_In", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 5, "result-data": [{"occurrence": 5, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 38, in runTest\n    \"network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --gateway=\\n' != 'network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\\n'\n- network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0 --gateway=\n?                                                          -----------\n+ network  --bootproto=dhcp --dhcpclass=CLASS --device=eth0\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -52,7 +52,7 @@", "             retval += (' --essid=\"%s\"' % self.essid)", "         if (self.ethtool != ''):", "             retval += (' --ethtool=\"%s\"' % self.ethtool)", "-        if (self.gateway != ''):", "+        if (self.gateway in ''):", "             retval += (' --gateway=%s' % self.gateway)", "         if (self.hostname != ''):", "             retval += (' --hostname=%s' % self.hostname)"]]]}, "42": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_Eq_with_IsNot", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_Eq_with_IsNot", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 3, "result-data": [{"occurrence": 3, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 826, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nWhen using the <prefix>.<vlan id> interface name notation, <prefix> can't be equal to 'vlan'.\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 263, in runTest\n    self.assert_parse(\"network --interfacename=abc.123\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: The following problem occurred on line 0 of the kickstart file:\n\nWhen using the <prefix>.<vlan id> interface name notation, <prefix> can't be equal to 'vlan'.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -526,7 +526,7 @@", "     vlan_id = None", "     (vlan, dot, id_candidate) = name.partition('.')", "     if dot:", "-        if (vlan == 'vlan'):", "+        if (vlan is not 'vlan'):", "             return _(\"When using the <prefix>.<vlan id> interface name notation, <prefix> can't be equal to 'vlan'.\")", "         try:", "             vlan_id = int(id_candidate)"]]]}, "88": {"command": ["cosmic-ray", "worker", "pykickstart.commands.network", "replace_In_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "op-name": "replace_In_with_NotEq", "module-name": "pykickstart.commands.network", "result-type": "normal", "occurrence": 0, "result-data": [{"occurrence": 0, "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithNotEq", "line_number": "<UNKNOWN>"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.network\", line 435, in parse\nUserWarning: A network device with the name eth0 has already been defined.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 138, in runTest\n    F9_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 109, in runTest\n    FC6_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 94, in runTest\n    FC4_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 87, in runTest\n    FC3_TestCase.runTest(self)\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/network.py\", line 32, in runTest\n    self.assertEqual(self.assert_parse(\"network --device=eth0\"), self.assert_parse(\"network --device=eth0\"))\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: A network device with the name eth0 has already been defined.\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/network.py", "@@ -318,7 +318,7 @@", "         nd = self.dataClass()", "         self.set_to_obj(ns, nd)", "         nd.lineno = self.lineno", "-        if (nd in self.dataList()):", "+        if (nd != self.dataList()):", "             warnings.warn((_('A network device with the name %s has already been defined.') % nd.device))", "         return nd", " "]]]}}, "_default": {}, "work-parameters": {"1": {"test-runner": "nose", "test-args": ["-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/network.py"], "timeout": 126.77228}}}