{"work-parameters": {"1": {"test-args": ["-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "test-runner": "nose", "timeout": 5.66713}}, "_default": {}, "work-items": {"1": {"op-name": "replace_Gt_with_NotIn", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Gt_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 0, "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 28, in runTest\n    self.assert_parse(\"services --enabled=WHEEITSASTRING\", \"services --enabled=\\\"WHEEITSASTRING\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.services\", line 42, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -18,7 +18,7 @@", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "         args = ''", "-        if (len(self.disabled) > 0):", "+        if (len(self.disabled) not in 0):", "             args += (' --disabled=\"%s\"' % ','.join(self.disabled))", "         if (len(self.enabled) > 0):", "             args += (' --enabled=\"%s\"' % ','.join(self.enabled))"]]], "result-type": "normal"}, "35": {"op-name": "replace_Gt_with_Is", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Gt_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 0, "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 28, in runTest\n    self.assert_parse(\"services --enabled=WHEEITSASTRING\", \"services --enabled=\\\"WHEEITSASTRING\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'services --disabled=\"\" --enabled=\"WHEEITSASTRING\"\\n' != 'services --enabled=\"WHEEITSASTRING\"\\n'\n- services --disabled=\"\" --enabled=\"WHEEITSASTRING\"\n?         --------------\n+ services --enabled=\"WHEEITSASTRING\"\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -18,7 +18,7 @@", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "         args = ''", "-        if (len(self.disabled) > 0):", "+        if (len(self.disabled) is 0):", "             args += (' --disabled=\"%s\"' % ','.join(self.disabled))", "         if (len(self.enabled) > 0):", "             args += (' --enabled=\"%s\"' % ','.join(self.enabled))"]]], "result-type": "normal"}, "32": {"op-name": "replace_Gt_with_NotEq", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Gt_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 1, "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotEq"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -20,7 +20,7 @@", "         args = ''", "         if (len(self.disabled) > 0):", "             args += (' --disabled=\"%s\"' % ','.join(self.disabled))", "-        if (len(self.enabled) > 0):", "+        if (len(self.enabled) != 0):", "             args += (' --enabled=\"%s\"' % ','.join(self.enabled))", "         if (args != ''):", "             retval += ('# System services\\nservices%s\\n' % args)"]]], "result-type": "normal"}, "28": {"op-name": "replace_Eq_with_Gt", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Eq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 0, "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 29, in runTest\n    self.assert_parse(\"services --disabled=WHEEANOTHERSTRING\", \"services --disabled=\\\"WHEEANOTHERSTRING\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.services\", line 76, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --disabled or --enabled must be provided.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -35,7 +35,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if ((len(self.disabled) == 0) and (len(self.enabled) == 0)):", "+        if ((len(self.disabled) > 0) and (len(self.enabled) == 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --disabled or --enabled must be provided.')))", "         return self", " "]]], "result-type": "normal"}, "47": {"op-name": "replace_Eq_with_GtE", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Eq_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 1, "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 28, in runTest\n    self.assert_parse(\"services --enabled=WHEEITSASTRING\", \"services --enabled=\\\"WHEEITSASTRING\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.services\", line 76, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --disabled or --enabled must be provided.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -35,7 +35,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if ((len(self.disabled) == 0) and (len(self.enabled) == 0)):", "+        if ((len(self.disabled) == 0) and (len(self.enabled) >= 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --disabled or --enabled must be provided.')))", "         return self", " "]]], "result-type": "normal"}, "24": {"op-name": "number_replacer", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "number_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 1, "result-data": [{"occurrence": 1, "line_number": 42, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 29, in runTest\n    self.assert_parse(\"services --disabled=WHEEANOTHERSTRING\", \"services --disabled=\\\"WHEEANOTHERSTRING\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'services --disabled=\"WHEEANOTHERSTRING\"\\n'\n+ services --disabled=\"WHEEANOTHERSTRING\"\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -18,7 +18,7 @@", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "         args = ''", "-        if (len(self.disabled) > 0):", "+        if (len(self.disabled) > 1):", "             args += (' --disabled=\"%s\"' % ','.join(self.disabled))", "         if (len(self.enabled) > 0):", "             args += (' --enabled=\"%s\"' % ','.join(self.enabled))"]]], "result-type": "normal"}, "46": {"op-name": "replace_Eq_with_GtE", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Eq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 0, "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 29, in runTest\n    self.assert_parse(\"services --disabled=WHEEANOTHERSTRING\", \"services --disabled=\\\"WHEEANOTHERSTRING\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.services\", line 76, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --disabled or --enabled must be provided.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -35,7 +35,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if ((len(self.disabled) == 0) and (len(self.enabled) == 0)):", "+        if ((len(self.disabled) >= 0) and (len(self.enabled) == 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --disabled or --enabled must be provided.')))", "         return self", " "]]], "result-type": "normal"}, "3": {"op-name": "replace_Eq_with_IsNot", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Eq_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 0, "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 29, in runTest\n    self.assert_parse(\"services --disabled=WHEEANOTHERSTRING\", \"services --disabled=\\\"WHEEANOTHERSTRING\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.services\", line 76, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --disabled or --enabled must be provided.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -35,7 +35,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if ((len(self.disabled) == 0) and (len(self.enabled) == 0)):", "+        if ((len(self.disabled) is not 0) and (len(self.enabled) == 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --disabled or --enabled must be provided.')))", "         return self", " "]]], "result-type": "normal"}, "5": {"op-name": "replace_Eq_with_Lt", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Eq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 0, "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 36, in runTest\n    self.assert_parse_error(\"services\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -35,7 +35,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if ((len(self.disabled) == 0) and (len(self.enabled) == 0)):", "+        if ((len(self.disabled) < 0) and (len(self.enabled) == 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --disabled or --enabled must be provided.')))", "         return self", " "]]], "result-type": "normal"}, "22": {"op-name": "replace_NotEq_with_In", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_NotEq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 0, "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 28, in runTest\n    self.assert_parse(\"services --enabled=WHEEITSASTRING\", \"services --enabled=\\\"WHEEITSASTRING\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'services --enabled=\"WHEEITSASTRING\"\\n'\n+ services --enabled=\"WHEEITSASTRING\"\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -22,7 +22,7 @@", "             args += (' --disabled=\"%s\"' % ','.join(self.disabled))", "         if (len(self.enabled) > 0):", "             args += (' --enabled=\"%s\"' % ','.join(self.enabled))", "-        if (args != ''):", "+        if (args in ''):", "             retval += ('# System services\\nservices%s\\n' % args)", "         return retval", " "]]], "result-type": "normal"}, "43": {"op-name": "replace_Eq_with_Is", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Eq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 0, "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -35,7 +35,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if ((len(self.disabled) == 0) and (len(self.enabled) == 0)):", "+        if ((len(self.disabled) is 0) and (len(self.enabled) == 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --disabled or --enabled must be provided.')))", "         return self", " "]]], "result-type": "normal"}, "42": {"op-name": "replace_Gt_with_LtE", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Gt_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 1, "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 28, in runTest\n    self.assert_parse(\"services --enabled=WHEEITSASTRING\", \"services --enabled=\\\"WHEEITSASTRING\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'services --enabled=\"WHEEITSASTRING\"\\n'\n+ services --enabled=\"WHEEITSASTRING\"\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -20,7 +20,7 @@", "         args = ''", "         if (len(self.disabled) > 0):", "             args += (' --disabled=\"%s\"' % ','.join(self.disabled))", "-        if (len(self.enabled) > 0):", "+        if (len(self.enabled) <= 0):", "             args += (' --enabled=\"%s\"' % ','.join(self.enabled))", "         if (args != ''):", "             retval += ('# System services\\nservices%s\\n' % args)"]]], "result-type": "normal"}, "10": {"op-name": "replace_NotEq_with_Gt", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_NotEq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 0, "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -22,7 +22,7 @@", "             args += (' --disabled=\"%s\"' % ','.join(self.disabled))", "         if (len(self.enabled) > 0):", "             args += (' --enabled=\"%s\"' % ','.join(self.enabled))", "-        if (args != ''):", "+        if (args > ''):", "             retval += ('# System services\\nservices%s\\n' % args)", "         return retval", " "]]], "result-type": "normal"}, "29": {"op-name": "replace_Eq_with_Gt", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Eq_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 1, "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 28, in runTest\n    self.assert_parse(\"services --enabled=WHEEITSASTRING\", \"services --enabled=\\\"WHEEITSASTRING\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.services\", line 76, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --disabled or --enabled must be provided.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -35,7 +35,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if ((len(self.disabled) == 0) and (len(self.enabled) == 0)):", "+        if ((len(self.disabled) == 0) and (len(self.enabled) > 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --disabled or --enabled must be provided.')))", "         return self", " "]]], "result-type": "normal"}, "19": {"op-name": "replace_NotEq_with_Is", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_NotEq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 0, "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 28, in runTest\n    self.assert_parse(\"services --enabled=WHEEITSASTRING\", \"services --enabled=\\\"WHEEITSASTRING\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'services --enabled=\"WHEEITSASTRING\"\\n'\n+ services --enabled=\"WHEEITSASTRING\"\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -22,7 +22,7 @@", "             args += (' --disabled=\"%s\"' % ','.join(self.disabled))", "         if (len(self.enabled) > 0):", "             args += (' --enabled=\"%s\"' % ','.join(self.enabled))", "-        if (args != ''):", "+        if (args is ''):", "             retval += ('# System services\\nservices%s\\n' % args)", "         return retval", " "]]], "result-type": "normal"}, "9": {"op-name": "replace_NotEq_with_LtE", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_NotEq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 0, "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 28, in runTest\n    self.assert_parse(\"services --enabled=WHEEITSASTRING\", \"services --enabled=\\\"WHEEITSASTRING\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'services --enabled=\"WHEEITSASTRING\"\\n'\n+ services --enabled=\"WHEEITSASTRING\"\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -22,7 +22,7 @@", "             args += (' --disabled=\"%s\"' % ','.join(self.disabled))", "         if (len(self.enabled) > 0):", "             args += (' --enabled=\"%s\"' % ','.join(self.enabled))", "-        if (args != ''):", "+        if (args <= ''):", "             retval += ('# System services\\nservices%s\\n' % args)", "         return retval", " "]]], "result-type": "normal"}, "41": {"op-name": "replace_Gt_with_LtE", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Gt_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 0, "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 28, in runTest\n    self.assert_parse(\"services --enabled=WHEEITSASTRING\", \"services --enabled=\\\"WHEEITSASTRING\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'services --disabled=\"\" --enabled=\"WHEEITSASTRING\"\\n' != 'services --enabled=\"WHEEITSASTRING\"\\n'\n- services --disabled=\"\" --enabled=\"WHEEITSASTRING\"\n?         --------------\n+ services --enabled=\"WHEEITSASTRING\"\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -18,7 +18,7 @@", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "         args = ''", "-        if (len(self.disabled) > 0):", "+        if (len(self.disabled) <= 0):", "             args += (' --disabled=\"%s\"' % ','.join(self.disabled))", "         if (len(self.enabled) > 0):", "             args += (' --enabled=\"%s\"' % ','.join(self.enabled))"]]], "result-type": "normal"}, "49": {"op-name": "replace_Gt_with_Lt", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Gt_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 1, "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 28, in runTest\n    self.assert_parse(\"services --enabled=WHEEITSASTRING\", \"services --enabled=\\\"WHEEITSASTRING\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'services --enabled=\"WHEEITSASTRING\"\\n'\n+ services --enabled=\"WHEEITSASTRING\"\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -20,7 +20,7 @@", "         args = ''", "         if (len(self.disabled) > 0):", "             args += (' --disabled=\"%s\"' % ','.join(self.disabled))", "-        if (len(self.enabled) > 0):", "+        if (len(self.enabled) < 0):", "             args += (' --enabled=\"%s\"' % ','.join(self.enabled))", "         if (args != ''):", "             retval += ('# System services\\nservices%s\\n' % args)"]]], "result-type": "normal"}, "20": {"op-name": "replace_Gt_with_IsNot", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Gt_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 0, "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIsNot"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -18,7 +18,7 @@", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "         args = ''", "-        if (len(self.disabled) > 0):", "+        if (len(self.disabled) is not 0):", "             args += (' --disabled=\"%s\"' % ','.join(self.disabled))", "         if (len(self.enabled) > 0):", "             args += (' --enabled=\"%s\"' % ','.join(self.enabled))"]]], "result-type": "normal"}, "8": {"op-name": "replace_Eq_with_In", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Eq_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 1, "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 28, in runTest\n    self.assert_parse(\"services --enabled=WHEEITSASTRING\", \"services --enabled=\\\"WHEEITSASTRING\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.services\", line 75, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -35,7 +35,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if ((len(self.disabled) == 0) and (len(self.enabled) == 0)):", "+        if ((len(self.disabled) == 0) and (len(self.enabled) in 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --disabled or --enabled must be provided.')))", "         return self", " "]]], "result-type": "normal"}, "25": {"op-name": "number_replacer", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "number_replacer", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 2, "result-data": [{"occurrence": 2, "line_number": 44, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 28, in runTest\n    self.assert_parse(\"services --enabled=WHEEITSASTRING\", \"services --enabled=\\\"WHEEITSASTRING\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'services --enabled=\"WHEEITSASTRING\"\\n'\n+ services --enabled=\"WHEEITSASTRING\"\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -20,7 +20,7 @@", "         args = ''", "         if (len(self.disabled) > 0):", "             args += (' --disabled=\"%s\"' % ','.join(self.disabled))", "-        if (len(self.enabled) > 0):", "+        if (len(self.enabled) > 1):", "             args += (' --enabled=\"%s\"' % ','.join(self.enabled))", "         if (args != ''):", "             retval += ('# System services\\nservices%s\\n' % args)"]]], "result-type": "normal"}, "48": {"op-name": "replace_Gt_with_Lt", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Gt_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 0, "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 29, in runTest\n    self.assert_parse(\"services --disabled=WHEEANOTHERSTRING\", \"services --disabled=\\\"WHEEANOTHERSTRING\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'services --disabled=\"WHEEANOTHERSTRING\"\\n'\n+ services --disabled=\"WHEEANOTHERSTRING\"\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -18,7 +18,7 @@", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "         args = ''", "-        if (len(self.disabled) > 0):", "+        if (len(self.disabled) < 0):", "             args += (' --disabled=\"%s\"' % ','.join(self.disabled))", "         if (len(self.enabled) > 0):", "             args += (' --enabled=\"%s\"' % ','.join(self.enabled))"]]], "result-type": "normal"}, "23": {"op-name": "number_replacer", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "number_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 0, "result-data": [{"occurrence": 0, "line_number": 31, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -9,7 +9,7 @@", "     removedKeywords = KickstartCommand.removedKeywords", "     removedAttrs = KickstartCommand.removedAttrs", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         KickstartCommand.__init__(self, writePriority, *args, **kwargs)", "         self.op = self._getParser()", "         self.disabled = kwargs.get('disabled', [])"]]], "result-type": "normal"}, "12": {"op-name": "replace_Eq_with_NotEq", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Eq_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 1, "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 28, in runTest\n    self.assert_parse(\"services --enabled=WHEEITSASTRING\", \"services --enabled=\\\"WHEEITSASTRING\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.services\", line 76, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --disabled or --enabled must be provided.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -35,7 +35,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if ((len(self.disabled) == 0) and (len(self.enabled) == 0)):", "+        if ((len(self.disabled) == 0) and (len(self.enabled) != 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --disabled or --enabled must be provided.')))", "         return self", " "]]], "result-type": "normal"}, "18": {"op-name": "replace_Eq_with_LtE", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Eq_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 1, "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -35,7 +35,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if ((len(self.disabled) == 0) and (len(self.enabled) == 0)):", "+        if ((len(self.disabled) == 0) and (len(self.enabled) <= 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --disabled or --enabled must be provided.')))", "         return self", " "]]], "result-type": "normal"}, "13": {"op-name": "replace_Gt_with_GtE", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Gt_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 0, "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 28, in runTest\n    self.assert_parse(\"services --enabled=WHEEITSASTRING\", \"services --enabled=\\\"WHEEITSASTRING\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'services --disabled=\"\" --enabled=\"WHEEITSASTRING\"\\n' != 'services --enabled=\"WHEEITSASTRING\"\\n'\n- services --disabled=\"\" --enabled=\"WHEEITSASTRING\"\n?         --------------\n+ services --enabled=\"WHEEITSASTRING\"\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -18,7 +18,7 @@", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "         args = ''", "-        if (len(self.disabled) > 0):", "+        if (len(self.disabled) >= 0):", "             args += (' --disabled=\"%s\"' % ','.join(self.disabled))", "         if (len(self.enabled) > 0):", "             args += (' --enabled=\"%s\"' % ','.join(self.enabled))"]]], "result-type": "normal"}, "26": {"op-name": "number_replacer", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "number_replacer", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 3, "result-data": [{"occurrence": 3, "line_number": 75, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 29, in runTest\n    self.assert_parse(\"services --disabled=WHEEANOTHERSTRING\", \"services --disabled=\\\"WHEEANOTHERSTRING\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.services\", line 76, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --disabled or --enabled must be provided.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -35,7 +35,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if ((len(self.disabled) == 0) and (len(self.enabled) == 0)):", "+        if ((len(self.disabled) == 1) and (len(self.enabled) == 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --disabled or --enabled must be provided.')))", "         return self", " "]]], "result-type": "normal"}, "4": {"op-name": "replace_Eq_with_IsNot", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Eq_with_IsNot", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 1, "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 28, in runTest\n    self.assert_parse(\"services --enabled=WHEEITSASTRING\", \"services --enabled=\\\"WHEEITSASTRING\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.services\", line 76, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --disabled or --enabled must be provided.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -35,7 +35,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if ((len(self.disabled) == 0) and (len(self.enabled) == 0)):", "+        if ((len(self.disabled) == 0) and (len(self.enabled) is not 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --disabled or --enabled must be provided.')))", "         return self", " "]]], "result-type": "normal"}, "44": {"op-name": "replace_Eq_with_Is", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Eq_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 1, "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -35,7 +35,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if ((len(self.disabled) == 0) and (len(self.enabled) == 0)):", "+        if ((len(self.disabled) == 0) and (len(self.enabled) is 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --disabled or --enabled must be provided.')))", "         return self", " "]]], "result-type": "normal"}, "2": {"op-name": "replace_Gt_with_NotIn", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Gt_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 1, "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 28, in runTest\n    self.assert_parse(\"services --enabled=WHEEITSASTRING\", \"services --enabled=\\\"WHEEITSASTRING\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.services\", line 44, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -20,7 +20,7 @@", "         args = ''", "         if (len(self.disabled) > 0):", "             args += (' --disabled=\"%s\"' % ','.join(self.disabled))", "-        if (len(self.enabled) > 0):", "+        if (len(self.enabled) not in 0):", "             args += (' --enabled=\"%s\"' % ','.join(self.enabled))", "         if (args != ''):", "             retval += ('# System services\\nservices%s\\n' % args)"]]], "result-type": "normal"}, "34": {"op-name": "replace_NotEq_with_GtE", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_NotEq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 0, "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -22,7 +22,7 @@", "             args += (' --disabled=\"%s\"' % ','.join(self.disabled))", "         if (len(self.enabled) > 0):", "             args += (' --enabled=\"%s\"' % ','.join(self.enabled))", "-        if (args != ''):", "+        if (args >= ''):", "             retval += ('# System services\\nservices%s\\n' % args)", "         return retval", " "]]], "result-type": "normal"}, "30": {"op-name": "replace_NotEq_with_Lt", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_NotEq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 0, "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 28, in runTest\n    self.assert_parse(\"services --enabled=WHEEITSASTRING\", \"services --enabled=\\\"WHEEITSASTRING\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'services --enabled=\"WHEEITSASTRING\"\\n'\n+ services --enabled=\"WHEEITSASTRING\"\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -22,7 +22,7 @@", "             args += (' --disabled=\"%s\"' % ','.join(self.disabled))", "         if (len(self.enabled) > 0):", "             args += (' --enabled=\"%s\"' % ','.join(self.enabled))", "-        if (args != ''):", "+        if (args < ''):", "             retval += ('# System services\\nservices%s\\n' % args)", "         return retval", " "]]], "result-type": "normal"}, "11": {"op-name": "replace_Eq_with_NotEq", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Eq_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 0, "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 29, in runTest\n    self.assert_parse(\"services --disabled=WHEEANOTHERSTRING\", \"services --disabled=\\\"WHEEANOTHERSTRING\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.services\", line 76, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --disabled or --enabled must be provided.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -35,7 +35,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if ((len(self.disabled) == 0) and (len(self.enabled) == 0)):", "+        if ((len(self.disabled) != 0) and (len(self.enabled) == 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --disabled or --enabled must be provided.')))", "         return self", " "]]], "result-type": "normal"}, "15": {"op-name": "replace_Gt_with_In", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Gt_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 0, "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 28, in runTest\n    self.assert_parse(\"services --enabled=WHEEITSASTRING\", \"services --enabled=\\\"WHEEITSASTRING\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.services\", line 42, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -18,7 +18,7 @@", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "         args = ''", "-        if (len(self.disabled) > 0):", "+        if (len(self.disabled) in 0):", "             args += (' --disabled=\"%s\"' % ','.join(self.disabled))", "         if (len(self.enabled) > 0):", "             args += (' --enabled=\"%s\"' % ','.join(self.enabled))"]]], "result-type": "normal"}, "31": {"op-name": "replace_Gt_with_NotEq", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Gt_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 0, "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotEq"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -18,7 +18,7 @@", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "         args = ''", "-        if (len(self.disabled) > 0):", "+        if (len(self.disabled) != 0):", "             args += (' --disabled=\"%s\"' % ','.join(self.disabled))", "         if (len(self.enabled) > 0):", "             args += (' --enabled=\"%s\"' % ','.join(self.enabled))"]]], "result-type": "normal"}, "7": {"op-name": "replace_Eq_with_In", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Eq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 0, "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 28, in runTest\n    self.assert_parse(\"services --enabled=WHEEITSASTRING\", \"services --enabled=\\\"WHEEITSASTRING\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.services\", line 75, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -35,7 +35,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if ((len(self.disabled) == 0) and (len(self.enabled) == 0)):", "+        if ((len(self.disabled) in 0) and (len(self.enabled) == 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --disabled or --enabled must be provided.')))", "         return self", " "]]], "result-type": "normal"}, "17": {"op-name": "replace_Eq_with_LtE", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Eq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 0, "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -35,7 +35,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if ((len(self.disabled) == 0) and (len(self.enabled) == 0)):", "+        if ((len(self.disabled) <= 0) and (len(self.enabled) == 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --disabled or --enabled must be provided.')))", "         return self", " "]]], "result-type": "normal"}, "45": {"op-name": "replace_NotEq_with_NotIn", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_NotEq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 0, "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -22,7 +22,7 @@", "             args += (' --disabled=\"%s\"' % ','.join(self.disabled))", "         if (len(self.enabled) > 0):", "             args += (' --enabled=\"%s\"' % ','.join(self.enabled))", "-        if (args != ''):", "+        if (args not in ''):", "             retval += ('# System services\\nservices%s\\n' % args)", "         return retval", " "]]], "result-type": "normal"}, "14": {"op-name": "replace_Gt_with_GtE", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Gt_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 1, "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 29, in runTest\n    self.assert_parse(\"services --disabled=WHEEANOTHERSTRING\", \"services --disabled=\\\"WHEEANOTHERSTRING\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'services --disabled=\"WHEEANOTHERSTRING\" --enabled=\"\"\\n' != 'services --disabled=\"WHEEANOTHERSTRING\"\\n'\n- services --disabled=\"WHEEANOTHERSTRING\" --enabled=\"\"\n?                                        -------------\n+ services --disabled=\"WHEEANOTHERSTRING\"\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -20,7 +20,7 @@", "         args = ''", "         if (len(self.disabled) > 0):", "             args += (' --disabled=\"%s\"' % ','.join(self.disabled))", "-        if (len(self.enabled) > 0):", "+        if (len(self.enabled) >= 0):", "             args += (' --enabled=\"%s\"' % ','.join(self.enabled))", "         if (args != ''):", "             retval += ('# System services\\nservices%s\\n' % args)"]]], "result-type": "normal"}, "36": {"op-name": "replace_Gt_with_Is", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Gt_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 1, "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 28, in runTest\n    self.assert_parse(\"services --enabled=WHEEITSASTRING\", \"services --enabled=\\\"WHEEITSASTRING\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'services --enabled=\"WHEEITSASTRING\"\\n'\n+ services --enabled=\"WHEEITSASTRING\"\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -20,7 +20,7 @@", "         args = ''", "         if (len(self.disabled) > 0):", "             args += (' --disabled=\"%s\"' % ','.join(self.disabled))", "-        if (len(self.enabled) > 0):", "+        if (len(self.enabled) is 0):", "             args += (' --enabled=\"%s\"' % ','.join(self.enabled))", "         if (args != ''):", "             retval += ('# System services\\nservices%s\\n' % args)"]]], "result-type": "normal"}, "38": {"op-name": "replace_Eq_with_NotIn", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Eq_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 1, "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 28, in runTest\n    self.assert_parse(\"services --enabled=WHEEITSASTRING\", \"services --enabled=\\\"WHEEITSASTRING\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.services\", line 75, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -35,7 +35,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if ((len(self.disabled) == 0) and (len(self.enabled) == 0)):", "+        if ((len(self.disabled) == 0) and (len(self.enabled) not in 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --disabled or --enabled must be provided.')))", "         return self", " "]]], "result-type": "normal"}, "6": {"op-name": "replace_Eq_with_Lt", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Eq_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 1, "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 36, in runTest\n    self.assert_parse_error(\"services\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -35,7 +35,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if ((len(self.disabled) == 0) and (len(self.enabled) == 0)):", "+        if ((len(self.disabled) == 0) and (len(self.enabled) < 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --disabled or --enabled must be provided.')))", "         return self", " "]]], "result-type": "normal"}, "16": {"op-name": "replace_Gt_with_In", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Gt_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 1, "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 28, in runTest\n    self.assert_parse(\"services --enabled=WHEEITSASTRING\", \"services --enabled=\\\"WHEEITSASTRING\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.services\", line 44, in __str__\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -20,7 +20,7 @@", "         args = ''", "         if (len(self.disabled) > 0):", "             args += (' --disabled=\"%s\"' % ','.join(self.disabled))", "-        if (len(self.enabled) > 0):", "+        if (len(self.enabled) in 0):", "             args += (' --enabled=\"%s\"' % ','.join(self.enabled))", "         if (args != ''):", "             retval += ('# System services\\nservices%s\\n' % args)"]]], "result-type": "normal"}, "39": {"op-name": "replace_Gt_with_Eq", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Gt_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 0, "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 28, in runTest\n    self.assert_parse(\"services --enabled=WHEEITSASTRING\", \"services --enabled=\\\"WHEEITSASTRING\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'services --disabled=\"\" --enabled=\"WHEEITSASTRING\"\\n' != 'services --enabled=\"WHEEITSASTRING\"\\n'\n- services --disabled=\"\" --enabled=\"WHEEITSASTRING\"\n?         --------------\n+ services --enabled=\"WHEEITSASTRING\"\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -18,7 +18,7 @@", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "         args = ''", "-        if (len(self.disabled) > 0):", "+        if (len(self.disabled) == 0):", "             args += (' --disabled=\"%s\"' % ','.join(self.disabled))", "         if (len(self.enabled) > 0):", "             args += (' --enabled=\"%s\"' % ','.join(self.enabled))"]]], "result-type": "normal"}, "33": {"op-name": "replace_NotEq_with_Eq", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_NotEq_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 0, "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 28, in runTest\n    self.assert_parse(\"services --enabled=WHEEITSASTRING\", \"services --enabled=\\\"WHEEITSASTRING\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'services --enabled=\"WHEEITSASTRING\"\\n'\n+ services --enabled=\"WHEEITSASTRING\"\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -22,7 +22,7 @@", "             args += (' --disabled=\"%s\"' % ','.join(self.disabled))", "         if (len(self.enabled) > 0):", "             args += (' --enabled=\"%s\"' % ','.join(self.enabled))", "-        if (args != ''):", "+        if (args == ''):", "             retval += ('# System services\\nservices%s\\n' % args)", "         return retval", " "]]], "result-type": "normal"}, "37": {"op-name": "replace_Eq_with_NotIn", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Eq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 0, "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 28, in runTest\n    self.assert_parse(\"services --enabled=WHEEITSASTRING\", \"services --enabled=\\\"WHEEITSASTRING\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.services\", line 75, in parse\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -35,7 +35,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if ((len(self.disabled) == 0) and (len(self.enabled) == 0)):", "+        if ((len(self.disabled) not in 0) and (len(self.enabled) == 0)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --disabled or --enabled must be provided.')))", "         return self", " "]]], "result-type": "normal"}, "27": {"op-name": "number_replacer", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "number_replacer", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 4, "result-data": [{"occurrence": 4, "line_number": 75, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 28, in runTest\n    self.assert_parse(\"services --enabled=WHEEITSASTRING\", \"services --enabled=\\\"WHEEITSASTRING\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.services\", line 76, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of --disabled or --enabled must be provided.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -35,7 +35,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if ((len(self.disabled) == 0) and (len(self.enabled) == 0)):", "+        if ((len(self.disabled) == 0) and (len(self.enabled) == 1)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of --disabled or --enabled must be provided.')))", "         return self", " "]]], "result-type": "normal"}, "21": {"op-name": "replace_Gt_with_IsNot", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Gt_with_IsNot", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 1, "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIsNot"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -20,7 +20,7 @@", "         args = ''", "         if (len(self.disabled) > 0):", "             args += (' --disabled=\"%s\"' % ','.join(self.disabled))", "-        if (len(self.enabled) > 0):", "+        if (len(self.enabled) is not 0):", "             args += (' --enabled=\"%s\"' % ','.join(self.enabled))", "         if (args != ''):", "             retval += ('# System services\\nservices%s\\n' % args)"]]], "result-type": "normal"}, "40": {"op-name": "replace_Gt_with_Eq", "module-name": "pykickstart.commands.services", "command": ["cosmic-ray", "worker", "pykickstart.commands.services", "replace_Gt_with_Eq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/services.py"], "occurrence": 1, "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/services.py\", line 28, in runTest\n    self.assert_parse(\"services --enabled=WHEEITSASTRING\", \"services --enabled=\\\"WHEEITSASTRING\\\"\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'services --enabled=\"WHEEITSASTRING\"\\n'\n+ services --enabled=\"WHEEITSASTRING\"\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/services.py", "@@ -20,7 +20,7 @@", "         args = ''", "         if (len(self.disabled) > 0):", "             args += (' --disabled=\"%s\"' % ','.join(self.disabled))", "-        if (len(self.enabled) > 0):", "+        if (len(self.enabled) == 0):", "             args += (' --enabled=\"%s\"' % ','.join(self.enabled))", "         if (args != ''):", "             retval += ('# System services\\nservices%s\\n' % args)"]]], "result-type": "normal"}}}