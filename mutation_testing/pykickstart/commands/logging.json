{"work-items": {"30": {"module-name": "pykickstart.commands.logging", "op-name": "replace_NotEq_with_Gt", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "@@ -23,7 +23,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (self.level and self._levelProvided):", "             retval += ('# Installation logging level\\nlogging --level=%s' % self.level)", "-            if (self.host != ''):", "+            if (self.host > ''):", "                 retval += (' --host=%s' % self.host)", "                 if (self.port != ''):", "                     retval += (' --port=%s' % self.port)"]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.logging", "replace_NotEq_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/logging.py"], "occurrence": 1}, "28": {"module-name": "pykickstart.commands.logging", "op-name": "replace_NotEq_with_Lt", "result-data": [{"occurrence": 3, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/logging.py\", line 28, in runTest\n    self.assert_parse(\"logging\", \"logging --level=info\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '\\n' != 'logging --level=info\\n'\n- \n+ logging --level=info\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "@@ -41,7 +41,7 @@", "         self.set_to_self(ns)", "         if (self.port and (not self.host)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_(\"Can't specify --port without --host.\")))", "-        self._levelProvided = (self.level != '')", "+        self._levelProvided = (self.level < '')", "         if (not self._levelProvided):", "             self.level = 'info'", "         return self"]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.logging", "replace_NotEq_with_Lt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/logging.py"], "occurrence": 3}, "13": {"module-name": "pykickstart.commands.logging", "op-name": "replace_NotEq_with_Is", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/logging.py\", line 28, in runTest\n    self.assert_parse(\"logging\", \"logging --level=info\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '\\n' != 'logging --level=info\\n'\n- \n+ logging --level=info\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "@@ -15,7 +15,7 @@", "         self.host = kwargs.get('host', '')", "         self.level = kwargs.get('level', '')", "         self.port = kwargs.get('port', '')", "-        self._levelProvided = (self.level != '')", "+        self._levelProvided = (self.level is '')", "         if (not self._levelProvided):", "             self.level = 'info'", " "]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.logging", "replace_NotEq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/logging.py"], "occurrence": 0}, "10": {"module-name": "pykickstart.commands.logging", "op-name": "replace_NotEq_with_In", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/logging.py\", line 28, in runTest\n    self.assert_parse(\"logging\", \"logging --level=info\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'logging --level=info --host=\\n' != 'logging --level=info\\n'\n- logging --level=info --host=\n?                     --------\n+ logging --level=info\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "@@ -23,7 +23,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (self.level and self._levelProvided):", "             retval += ('# Installation logging level\\nlogging --level=%s' % self.level)", "-            if (self.host != ''):", "+            if (self.host in ''):", "                 retval += (' --host=%s' % self.host)", "                 if (self.port != ''):", "                     retval += (' --port=%s' % self.port)"]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.logging", "replace_NotEq_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/logging.py"], "occurrence": 1}, "8": {"module-name": "pykickstart.commands.logging", "op-name": "replace_NotEq_with_GtE", "result-data": [{"occurrence": 3, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "@@ -41,7 +41,7 @@", "         self.set_to_self(ns)", "         if (self.port and (not self.host)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_(\"Can't specify --port without --host.\")))", "-        self._levelProvided = (self.level != '')", "+        self._levelProvided = (self.level >= '')", "         if (not self._levelProvided):", "             self.level = 'info'", "         return self"]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.logging", "replace_NotEq_with_GtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/logging.py"], "occurrence": 3}, "16": {"module-name": "pykickstart.commands.logging", "op-name": "replace_NotEq_with_Is", "result-data": [{"occurrence": 3, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/logging.py\", line 28, in runTest\n    self.assert_parse(\"logging\", \"logging --level=info\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '\\n' != 'logging --level=info\\n'\n- \n+ logging --level=info\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "@@ -41,7 +41,7 @@", "         self.set_to_self(ns)", "         if (self.port and (not self.host)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_(\"Can't specify --port without --host.\")))", "-        self._levelProvided = (self.level != '')", "+        self._levelProvided = (self.level is '')", "         if (not self._levelProvided):", "             self.level = 'info'", "         return self"]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.logging", "replace_NotEq_with_Is", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/logging.py"], "occurrence": 3}, "19": {"module-name": "pykickstart.commands.logging", "op-name": "replace_NotEq_with_Eq", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/logging.py\", line 34, in runTest\n    self.assert_parse(\"logging --host=HOSTNAME\", \"logging --level=info --host=HOSTNAME\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'logging --level=info --host=HOSTNAME --port=\\n' != 'logging --level=info --host=HOSTNAME\\n'\n- logging --level=info --host=HOSTNAME --port=\n?                                     --------\n+ logging --level=info --host=HOSTNAME\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "@@ -25,7 +25,7 @@", "             retval += ('# Installation logging level\\nlogging --level=%s' % self.level)", "             if (self.host != ''):", "                 retval += (' --host=%s' % self.host)", "-                if (self.port != ''):", "+                if (self.port == ''):", "                     retval += (' --port=%s' % self.port)", "         return (retval + '\\n')", " "]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.logging", "replace_NotEq_with_Eq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/logging.py"], "occurrence": 2}, "24": {"module-name": "pykickstart.commands.logging", "op-name": "replace_NotEq_with_LtE", "result-data": [{"occurrence": 3, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/logging.py\", line 28, in runTest\n    self.assert_parse(\"logging\", \"logging --level=info\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '\\n' != 'logging --level=info\\n'\n- \n+ logging --level=info\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "@@ -41,7 +41,7 @@", "         self.set_to_self(ns)", "         if (self.port and (not self.host)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_(\"Can't specify --port without --host.\")))", "-        self._levelProvided = (self.level != '')", "+        self._levelProvided = (self.level <= '')", "         if (not self._levelProvided):", "             self.level = 'info'", "         return self"]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.logging", "replace_NotEq_with_LtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/logging.py"], "occurrence": 3}, "27": {"module-name": "pykickstart.commands.logging", "op-name": "replace_NotEq_with_Lt", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/logging.py\", line 35, in runTest\n    self.assert_parse(\"logging --host=HOSTNAME --port=PORT\", \"logging --level=info --host=HOSTNAME --port=PORT\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'logging --level=info --host=HOSTNAME\\n' != 'logging --level=info --host=HOSTNAME --port=PORT\\n'\n- logging --level=info --host=HOSTNAME\n+ logging --level=info --host=HOSTNAME --port=PORT\n?                                     ++++++++++++\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "@@ -25,7 +25,7 @@", "             retval += ('# Installation logging level\\nlogging --level=%s' % self.level)", "             if (self.host != ''):", "                 retval += (' --host=%s' % self.host)", "-                if (self.port != ''):", "+                if (self.port < ''):", "                     retval += (' --port=%s' % self.port)", "         return (retval + '\\n')", " "]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.logging", "replace_NotEq_with_Lt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/logging.py"], "occurrence": 2}, "9": {"module-name": "pykickstart.commands.logging", "op-name": "replace_NotEq_with_In", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/logging.py\", line 28, in runTest\n    self.assert_parse(\"logging\", \"logging --level=info\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '\\n' != 'logging --level=info\\n'\n- \n+ logging --level=info\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "@@ -15,7 +15,7 @@", "         self.host = kwargs.get('host', '')", "         self.level = kwargs.get('level', '')", "         self.port = kwargs.get('port', '')", "-        self._levelProvided = (self.level != '')", "+        self._levelProvided = (self.level in '')", "         if (not self._levelProvided):", "             self.level = 'info'", " "]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.logging", "replace_NotEq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/logging.py"], "occurrence": 0}, "23": {"module-name": "pykickstart.commands.logging", "op-name": "replace_NotEq_with_LtE", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/logging.py\", line 34, in runTest\n    self.assert_parse(\"logging --host=HOSTNAME\", \"logging --level=info --host=HOSTNAME\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'logging --level=info --host=HOSTNAME --port=\\n' != 'logging --level=info --host=HOSTNAME\\n'\n- logging --level=info --host=HOSTNAME --port=\n?                                     --------\n+ logging --level=info --host=HOSTNAME\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "@@ -25,7 +25,7 @@", "             retval += ('# Installation logging level\\nlogging --level=%s' % self.level)", "             if (self.host != ''):", "                 retval += (' --host=%s' % self.host)", "-                if (self.port != ''):", "+                if (self.port <= ''):", "                     retval += (' --port=%s' % self.port)", "         return (retval + '\\n')", " "]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.logging", "replace_NotEq_with_LtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/logging.py"], "occurrence": 2}, "1": {"module-name": "pykickstart.commands.logging", "op-name": "replace_NotEq_with_NotIn", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "@@ -15,7 +15,7 @@", "         self.host = kwargs.get('host', '')", "         self.level = kwargs.get('level', '')", "         self.port = kwargs.get('port', '')", "-        self._levelProvided = (self.level != '')", "+        self._levelProvided = (self.level not in '')", "         if (not self._levelProvided):", "             self.level = 'info'", " "]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.logging", "replace_NotEq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/logging.py"], "occurrence": 0}, "31": {"module-name": "pykickstart.commands.logging", "op-name": "replace_NotEq_with_Gt", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "@@ -25,7 +25,7 @@", "             retval += ('# Installation logging level\\nlogging --level=%s' % self.level)", "             if (self.host != ''):", "                 retval += (' --host=%s' % self.host)", "-                if (self.port != ''):", "+                if (self.port > ''):", "                     retval += (' --port=%s' % self.port)", "         return (retval + '\\n')", " "]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.logging", "replace_NotEq_with_Gt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/logging.py"], "occurrence": 2}, "17": {"module-name": "pykickstart.commands.logging", "op-name": "replace_NotEq_with_Eq", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/logging.py\", line 28, in runTest\n    self.assert_parse(\"logging\", \"logging --level=info\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '\\n' != 'logging --level=info\\n'\n- \n+ logging --level=info\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "@@ -15,7 +15,7 @@", "         self.host = kwargs.get('host', '')", "         self.level = kwargs.get('level', '')", "         self.port = kwargs.get('port', '')", "-        self._levelProvided = (self.level != '')", "+        self._levelProvided = (self.level == '')", "         if (not self._levelProvided):", "             self.level = 'info'", " "]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.logging", "replace_NotEq_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/logging.py"], "occurrence": 0}, "33": {"module-name": "pykickstart.commands.logging", "op-name": "number_replacer", "result-data": [{"occurrence": 0, "line_number": 31, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "@@ -9,7 +9,7 @@", "     removedKeywords = KickstartCommand.removedKeywords", "     removedAttrs = KickstartCommand.removedAttrs", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         KickstartCommand.__init__(self, writePriority, *args, **kwargs)", "         self.op = self._getParser()", "         self.host = kwargs.get('host', '')"]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.logging", "number_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/logging.py"], "occurrence": 0}, "14": {"module-name": "pykickstart.commands.logging", "op-name": "replace_NotEq_with_Is", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/logging.py\", line 28, in runTest\n    self.assert_parse(\"logging\", \"logging --level=info\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'logging --level=info --host=\\n' != 'logging --level=info\\n'\n- logging --level=info --host=\n?                     --------\n+ logging --level=info\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "@@ -23,7 +23,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (self.level and self._levelProvided):", "             retval += ('# Installation logging level\\nlogging --level=%s' % self.level)", "-            if (self.host != ''):", "+            if (self.host is ''):", "                 retval += (' --host=%s' % self.host)", "                 if (self.port != ''):", "                     retval += (' --port=%s' % self.port)"]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.logging", "replace_NotEq_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/logging.py"], "occurrence": 1}, "3": {"module-name": "pykickstart.commands.logging", "op-name": "replace_NotEq_with_NotIn", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "@@ -25,7 +25,7 @@", "             retval += ('# Installation logging level\\nlogging --level=%s' % self.level)", "             if (self.host != ''):", "                 retval += (' --host=%s' % self.host)", "-                if (self.port != ''):", "+                if (self.port not in ''):", "                     retval += (' --port=%s' % self.port)", "         return (retval + '\\n')", " "]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.logging", "replace_NotEq_with_NotIn", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/logging.py"], "occurrence": 2}, "20": {"module-name": "pykickstart.commands.logging", "op-name": "replace_NotEq_with_Eq", "result-data": [{"occurrence": 3, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/logging.py\", line 28, in runTest\n    self.assert_parse(\"logging\", \"logging --level=info\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '\\n' != 'logging --level=info\\n'\n- \n+ logging --level=info\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "@@ -41,7 +41,7 @@", "         self.set_to_self(ns)", "         if (self.port and (not self.host)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_(\"Can't specify --port without --host.\")))", "-        self._levelProvided = (self.level != '')", "+        self._levelProvided = (self.level == '')", "         if (not self._levelProvided):", "             self.level = 'info'", "         return self"]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.logging", "replace_NotEq_with_Eq", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/logging.py"], "occurrence": 3}, "11": {"module-name": "pykickstart.commands.logging", "op-name": "replace_NotEq_with_In", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/logging.py\", line 34, in runTest\n    self.assert_parse(\"logging --host=HOSTNAME\", \"logging --level=info --host=HOSTNAME\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'logging --level=info --host=HOSTNAME --port=\\n' != 'logging --level=info --host=HOSTNAME\\n'\n- logging --level=info --host=HOSTNAME --port=\n?                                     --------\n+ logging --level=info --host=HOSTNAME\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "@@ -25,7 +25,7 @@", "             retval += ('# Installation logging level\\nlogging --level=%s' % self.level)", "             if (self.host != ''):", "                 retval += (' --host=%s' % self.host)", "-                if (self.port != ''):", "+                if (self.port in ''):", "                     retval += (' --port=%s' % self.port)", "         return (retval + '\\n')", " "]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.logging", "replace_NotEq_with_In", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/logging.py"], "occurrence": 2}, "6": {"module-name": "pykickstart.commands.logging", "op-name": "replace_NotEq_with_GtE", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/logging.py\", line 28, in runTest\n    self.assert_parse(\"logging\", \"logging --level=info\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'logging --level=info --host=\\n' != 'logging --level=info\\n'\n- logging --level=info --host=\n?                     --------\n+ logging --level=info\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "@@ -23,7 +23,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (self.level and self._levelProvided):", "             retval += ('# Installation logging level\\nlogging --level=%s' % self.level)", "-            if (self.host != ''):", "+            if (self.host >= ''):", "                 retval += (' --host=%s' % self.host)", "                 if (self.port != ''):", "                     retval += (' --port=%s' % self.port)"]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.logging", "replace_NotEq_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/logging.py"], "occurrence": 1}, "15": {"module-name": "pykickstart.commands.logging", "op-name": "replace_NotEq_with_Is", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/logging.py\", line 34, in runTest\n    self.assert_parse(\"logging --host=HOSTNAME\", \"logging --level=info --host=HOSTNAME\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'logging --level=info --host=HOSTNAME --port=\\n' != 'logging --level=info --host=HOSTNAME\\n'\n- logging --level=info --host=HOSTNAME --port=\n?                                     --------\n+ logging --level=info --host=HOSTNAME\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "@@ -25,7 +25,7 @@", "             retval += ('# Installation logging level\\nlogging --level=%s' % self.level)", "             if (self.host != ''):", "                 retval += (' --host=%s' % self.host)", "-                if (self.port != ''):", "+                if (self.port is ''):", "                     retval += (' --port=%s' % self.port)", "         return (retval + '\\n')", " "]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.logging", "replace_NotEq_with_Is", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/logging.py"], "occurrence": 2}, "2": {"module-name": "pykickstart.commands.logging", "op-name": "replace_NotEq_with_NotIn", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "@@ -23,7 +23,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (self.level and self._levelProvided):", "             retval += ('# Installation logging level\\nlogging --level=%s' % self.level)", "-            if (self.host != ''):", "+            if (self.host not in ''):", "                 retval += (' --host=%s' % self.host)", "                 if (self.port != ''):", "                     retval += (' --port=%s' % self.port)"]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.logging", "replace_NotEq_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/logging.py"], "occurrence": 1}, "5": {"module-name": "pykickstart.commands.logging", "op-name": "replace_NotEq_with_GtE", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/logging.py\", line 28, in runTest\n    self.assert_parse(\"logging\", \"logging --level=info\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '\\n' != 'logging --level=info\\n'\n- \n+ logging --level=info\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "@@ -15,7 +15,7 @@", "         self.host = kwargs.get('host', '')", "         self.level = kwargs.get('level', '')", "         self.port = kwargs.get('port', '')", "-        self._levelProvided = (self.level != '')", "+        self._levelProvided = (self.level >= '')", "         if (not self._levelProvided):", "             self.level = 'info'", " "]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.logging", "replace_NotEq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/logging.py"], "occurrence": 0}, "7": {"module-name": "pykickstart.commands.logging", "op-name": "replace_NotEq_with_GtE", "result-data": [{"occurrence": 2, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/logging.py\", line 34, in runTest\n    self.assert_parse(\"logging --host=HOSTNAME\", \"logging --level=info --host=HOSTNAME\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'logging --level=info --host=HOSTNAME --port=\\n' != 'logging --level=info --host=HOSTNAME\\n'\n- logging --level=info --host=HOSTNAME --port=\n?                                     --------\n+ logging --level=info --host=HOSTNAME\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "@@ -25,7 +25,7 @@", "             retval += ('# Installation logging level\\nlogging --level=%s' % self.level)", "             if (self.host != ''):", "                 retval += (' --host=%s' % self.host)", "-                if (self.port != ''):", "+                if (self.port >= ''):", "                     retval += (' --port=%s' % self.port)", "         return (retval + '\\n')", " "]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.logging", "replace_NotEq_with_GtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/logging.py"], "occurrence": 2}, "26": {"module-name": "pykickstart.commands.logging", "op-name": "replace_NotEq_with_Lt", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/logging.py\", line 34, in runTest\n    self.assert_parse(\"logging --host=HOSTNAME\", \"logging --level=info --host=HOSTNAME\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'logging --level=info\\n' != 'logging --level=info --host=HOSTNAME\\n'\n- logging --level=info\n+ logging --level=info --host=HOSTNAME\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "@@ -23,7 +23,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (self.level and self._levelProvided):", "             retval += ('# Installation logging level\\nlogging --level=%s' % self.level)", "-            if (self.host != ''):", "+            if (self.host < ''):", "                 retval += (' --host=%s' % self.host)", "                 if (self.port != ''):", "                     retval += (' --port=%s' % self.port)"]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.logging", "replace_NotEq_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/logging.py"], "occurrence": 1}, "21": {"module-name": "pykickstart.commands.logging", "op-name": "replace_NotEq_with_LtE", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/logging.py\", line 28, in runTest\n    self.assert_parse(\"logging\", \"logging --level=info\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '\\n' != 'logging --level=info\\n'\n- \n+ logging --level=info\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "@@ -15,7 +15,7 @@", "         self.host = kwargs.get('host', '')", "         self.level = kwargs.get('level', '')", "         self.port = kwargs.get('port', '')", "-        self._levelProvided = (self.level != '')", "+        self._levelProvided = (self.level <= '')", "         if (not self._levelProvided):", "             self.level = 'info'", " "]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.logging", "replace_NotEq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/logging.py"], "occurrence": 0}, "4": {"module-name": "pykickstart.commands.logging", "op-name": "replace_NotEq_with_NotIn", "result-data": [{"occurrence": 3, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "@@ -41,7 +41,7 @@", "         self.set_to_self(ns)", "         if (self.port and (not self.host)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_(\"Can't specify --port without --host.\")))", "-        self._levelProvided = (self.level != '')", "+        self._levelProvided = (self.level not in '')", "         if (not self._levelProvided):", "             self.level = 'info'", "         return self"]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.logging", "replace_NotEq_with_NotIn", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/logging.py"], "occurrence": 3}, "32": {"module-name": "pykickstart.commands.logging", "op-name": "replace_NotEq_with_Gt", "result-data": [{"occurrence": 3, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "@@ -41,7 +41,7 @@", "         self.set_to_self(ns)", "         if (self.port and (not self.host)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_(\"Can't specify --port without --host.\")))", "-        self._levelProvided = (self.level != '')", "+        self._levelProvided = (self.level > '')", "         if (not self._levelProvided):", "             self.level = 'info'", "         return self"]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.logging", "replace_NotEq_with_Gt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/logging.py"], "occurrence": 3}, "22": {"module-name": "pykickstart.commands.logging", "op-name": "replace_NotEq_with_LtE", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/logging.py\", line 28, in runTest\n    self.assert_parse(\"logging\", \"logging --level=info\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'logging --level=info --host=\\n' != 'logging --level=info\\n'\n- logging --level=info --host=\n?                     --------\n+ logging --level=info\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "@@ -23,7 +23,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (self.level and self._levelProvided):", "             retval += ('# Installation logging level\\nlogging --level=%s' % self.level)", "-            if (self.host != ''):", "+            if (self.host <= ''):", "                 retval += (' --host=%s' % self.host)", "                 if (self.port != ''):", "                     retval += (' --port=%s' % self.port)"]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.logging", "replace_NotEq_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/logging.py"], "occurrence": 1}, "25": {"module-name": "pykickstart.commands.logging", "op-name": "replace_NotEq_with_Lt", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "@@ -15,7 +15,7 @@", "         self.host = kwargs.get('host', '')", "         self.level = kwargs.get('level', '')", "         self.port = kwargs.get('port', '')", "-        self._levelProvided = (self.level != '')", "+        self._levelProvided = (self.level < '')", "         if (not self._levelProvided):", "             self.level = 'info'", " "]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.logging", "replace_NotEq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/logging.py"], "occurrence": 0}, "18": {"module-name": "pykickstart.commands.logging", "op-name": "replace_NotEq_with_Eq", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/logging.py\", line 28, in runTest\n    self.assert_parse(\"logging\", \"logging --level=info\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'logging --level=info --host=\\n' != 'logging --level=info\\n'\n- logging --level=info --host=\n?                     --------\n+ logging --level=info\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "@@ -23,7 +23,7 @@", "         retval = KickstartCommand.__str__(self)", "         if (self.level and self._levelProvided):", "             retval += ('# Installation logging level\\nlogging --level=%s' % self.level)", "-            if (self.host != ''):", "+            if (self.host == ''):", "                 retval += (' --host=%s' % self.host)", "                 if (self.port != ''):", "                     retval += (' --port=%s' % self.port)"]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.logging", "replace_NotEq_with_Eq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/logging.py"], "occurrence": 1}, "12": {"module-name": "pykickstart.commands.logging", "op-name": "replace_NotEq_with_In", "result-data": [{"occurrence": 3, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/logging.py\", line 28, in runTest\n    self.assert_parse(\"logging\", \"logging --level=info\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '\\n' != 'logging --level=info\\n'\n- \n+ logging --level=info\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "@@ -41,7 +41,7 @@", "         self.set_to_self(ns)", "         if (self.port and (not self.host)):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_(\"Can't specify --port without --host.\")))", "-        self._levelProvided = (self.level != '')", "+        self._levelProvided = (self.level in '')", "         if (not self._levelProvided):", "             self.level = 'info'", "         return self"]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.logging", "replace_NotEq_with_In", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/logging.py"], "occurrence": 3}, "29": {"module-name": "pykickstart.commands.logging", "op-name": "replace_NotEq_with_Gt", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/logging.py", "@@ -15,7 +15,7 @@", "         self.host = kwargs.get('host', '')", "         self.level = kwargs.get('level', '')", "         self.port = kwargs.get('port', '')", "-        self._levelProvided = (self.level != '')", "+        self._levelProvided = (self.level > '')", "         if (not self._levelProvided):", "             self.level = 'info'", " "]]], "result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.logging", "replace_NotEq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/logging.py"], "occurrence": 0}}, "work-parameters": {"1": {"timeout": 6.3904499999999995, "test-runner": "nose", "test-args": ["-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/logging.py"]}}, "_default": {}}