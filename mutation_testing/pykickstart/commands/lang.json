{"_default": {}, "work-items": {"23": {"result-type": "normal", "module-name": "pykickstart.commands.lang", "op-name": "replace_NotEq_with_Lt", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/lang.py\", line 22, in runTest\n    \"lang en_US --addsupport=cs_CZ\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'lang en_US --addsupport=cs_CZ\\n'\n+ lang en_US --addsupport=cs_CZ\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "@@ -16,7 +16,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.lang != ''):", "+        if (self.lang < ''):", "             retval += ('# System language\\nlang %s\\n' % self.lang)", "         return retval", " "]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.lang", "replace_NotEq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/lang.py"]}, "6": {"result-type": "normal", "module-name": "pykickstart.commands.lang", "op-name": "replace_Gt_with_NotEq", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotEq"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "@@ -29,7 +29,7 @@", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(ns.lang) != 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'lang')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) != 0):", "             mapping = {'command': 'lang', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         self.set_to_self(ns)"]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.lang", "replace_Gt_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/lang.py"]}, "8": {"result-type": "normal", "module-name": "pykickstart.commands.lang", "op-name": "replace_NotEq_with_GtE", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.lang\", line 69, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nKickstart command lang requires one argument\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/lang.py\", line 20, in runTest\n    self.assert_parse(\"lang en_US\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: The following problem occurred on line 0 of the kickstart file:\n\nKickstart command lang requires one argument\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "@@ -27,7 +27,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(ns.lang) != 1):", "+        if (len(ns.lang) >= 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'lang')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'lang', 'options': extra}"]]], "occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.lang", "replace_NotEq_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/lang.py"]}, "5": {"result-type": "normal", "module-name": "pykickstart.commands.lang", "op-name": "replace_Gt_with_Eq", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.lang\", line 72, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nUnexpected arguments to lang command: []\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/lang.py\", line 20, in runTest\n    self.assert_parse(\"lang en_US\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: The following problem occurred on line 0 of the kickstart file:\n\nUnexpected arguments to lang command: []\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "@@ -29,7 +29,7 @@", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(ns.lang) != 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'lang')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) == 0):", "             mapping = {'command': 'lang', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         self.set_to_self(ns)"]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.lang", "replace_Gt_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/lang.py"]}, "27": {"result-type": "normal", "module-name": "pykickstart.commands.lang", "op-name": "number_replacer", "result-data": [{"occurrence": 1, "line_number": 61, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.lang\", line 66, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nthe following arguments are required: <lang>\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/lang.py\", line 20, in runTest\n    self.assert_parse(\"lang en_US\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: The following problem occurred on line 0 of the kickstart file:\n\nthe following arguments are required: <lang>\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "@@ -22,7 +22,7 @@", " ", "     def _getParser(self):", "         op = KSOptionParser(prog='lang', description='\\n            This required command sets the language to use during installation\\n            and the default language to use on the installed system to ``<id>``.\\n            This can be the same as any recognized setting for the $LANG\\n            environment variable, though not all languages are supported during\\n            installation.\\n\\n            Certain languages (mainly Chinese, Japanese, Korean, and Indic\\n            languages) are not supported during text mode installation. If one\\n            of these languages is specified using the lang command, installation\\n            will continue in English though the running system will have the\\n            specified langauge by default.\\n\\n            The file /usr/share/system-config-language/locale-list provides a\\n            list the valid language codes in the first column of each line and\\n            is part of the system-config-languages package.', version=FC3)", "-        op.add_argument('lang', metavar='<lang>', nargs=1, version=FC3, help='Language ID.')", "+        op.add_argument('lang', metavar='<lang>', nargs=2, version=FC3, help='Language ID.')", "         return op", " ", "     def parse(self, args):"]]], "occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.lang", "number_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/lang.py"]}, "17": {"result-type": "normal", "module-name": "pykickstart.commands.lang", "op-name": "replace_Gt_with_NotIn", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.lang\", line 70, in parse\nTypeError: argument of type 'int' is not iterable\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/lang.py\", line 20, in runTest\n    self.assert_parse(\"lang en_US\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "@@ -29,7 +29,7 @@", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(ns.lang) != 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'lang')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) not in 0):", "             mapping = {'command': 'lang', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         self.set_to_self(ns)"]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.lang", "replace_Gt_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/lang.py"]}, "11": {"result-type": "normal", "module-name": "pykickstart.commands.lang", "op-name": "replace_NotEq_with_Eq", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/lang.py\", line 22, in runTest\n    \"lang en_US --addsupport=cs_CZ\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'lang en_US --addsupport=cs_CZ\\n'\n+ lang en_US --addsupport=cs_CZ\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "@@ -16,7 +16,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.lang != ''):", "+        if (self.lang == ''):", "             retval += ('# System language\\nlang %s\\n' % self.lang)", "         return retval", " "]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.lang", "replace_NotEq_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/lang.py"]}, "31": {"result-type": "normal", "module-name": "pykickstart.commands.lang", "op-name": "number_replacer", "result-data": [{"occurrence": 5, "line_number": 82, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "@@ -40,7 +40,7 @@", "     removedKeywords = FC3_Lang.removedKeywords", "     removedAttrs = FC3_Lang.removedAttrs", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         FC3_Lang.__init__(self, writePriority, *args, **kwargs)", "         self.addsupport = kwargs.get('addsupport', [])", "         self.op = self._getParser()"]]], "occurrence": 5, "command": ["cosmic-ray", "worker", "pykickstart.commands.lang", "number_replacer", "5", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/lang.py"]}, "3": {"result-type": "normal", "module-name": "pykickstart.commands.lang", "op-name": "replace_NotEq_with_Is", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/lang.py\", line 22, in runTest\n    \"lang en_US --addsupport=cs_CZ\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'lang en_US --addsupport=cs_CZ\\n'\n+ lang en_US --addsupport=cs_CZ\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "@@ -16,7 +16,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.lang != ''):", "+        if (self.lang is ''):", "             retval += ('# System language\\nlang %s\\n' % self.lang)", "         return retval", " "]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.lang", "replace_NotEq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/lang.py"]}, "22": {"result-type": "normal", "module-name": "pykickstart.commands.lang", "op-name": "replace_NotEq_with_Gt", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "@@ -27,7 +27,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(ns.lang) != 1):", "+        if (len(ns.lang) > 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'lang')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'lang', 'options': extra}"]]], "occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.lang", "replace_NotEq_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/lang.py"]}, "13": {"result-type": "normal", "module-name": "pykickstart.commands.lang", "op-name": "replace_Gt_with_GtE", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithGtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.lang\", line 72, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nUnexpected arguments to lang command: []\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/lang.py\", line 20, in runTest\n    self.assert_parse(\"lang en_US\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: The following problem occurred on line 0 of the kickstart file:\n\nUnexpected arguments to lang command: []\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "@@ -29,7 +29,7 @@", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(ns.lang) != 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'lang')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) >= 0):", "             mapping = {'command': 'lang', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         self.set_to_self(ns)"]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.lang", "replace_Gt_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/lang.py"]}, "2": {"result-type": "normal", "module-name": "pykickstart.commands.lang", "op-name": "replace_NotEq_with_LtE", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.lang\", line 69, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nKickstart command lang requires one argument\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/lang.py\", line 20, in runTest\n    self.assert_parse(\"lang en_US\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: The following problem occurred on line 0 of the kickstart file:\n\nKickstart command lang requires one argument\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "@@ -27,7 +27,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(ns.lang) != 1):", "+        if (len(ns.lang) <= 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'lang')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'lang', 'options': extra}"]]], "occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.lang", "replace_NotEq_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/lang.py"]}, "4": {"result-type": "normal", "module-name": "pykickstart.commands.lang", "op-name": "replace_NotEq_with_Is", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.lang\", line 69, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nKickstart command lang requires one argument\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/lang.py\", line 20, in runTest\n    self.assert_parse(\"lang en_US\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: The following problem occurred on line 0 of the kickstart file:\n\nKickstart command lang requires one argument\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "@@ -27,7 +27,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(ns.lang) != 1):", "+        if (len(ns.lang) is 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'lang')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'lang', 'options': extra}"]]], "occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.lang", "replace_NotEq_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/lang.py"]}, "15": {"result-type": "normal", "module-name": "pykickstart.commands.lang", "op-name": "replace_NotEq_with_NotIn", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.lang\", line 68, in parse\nTypeError: argument of type 'int' is not iterable\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/lang.py\", line 20, in runTest\n    self.assert_parse(\"lang en_US\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "@@ -27,7 +27,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(ns.lang) != 1):", "+        if (len(ns.lang) not in 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'lang')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'lang', 'options': extra}"]]], "occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.lang", "replace_NotEq_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/lang.py"]}, "26": {"result-type": "normal", "module-name": "pykickstart.commands.lang", "op-name": "number_replacer", "result-data": [{"occurrence": 0, "line_number": 31, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "@@ -9,7 +9,7 @@", "     removedKeywords = KickstartCommand.removedKeywords", "     removedAttrs = KickstartCommand.removedAttrs", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         KickstartCommand.__init__(self, writePriority, *args, **kwargs)", "         self.op = self._getParser()", "         self.lang = kwargs.get('lang', '')"]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.lang", "number_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/lang.py"]}, "24": {"result-type": "normal", "module-name": "pykickstart.commands.lang", "op-name": "replace_NotEq_with_Lt", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "@@ -27,7 +27,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(ns.lang) != 1):", "+        if (len(ns.lang) < 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'lang')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'lang', 'options': extra}"]]], "occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.lang", "replace_NotEq_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/lang.py"]}, "19": {"result-type": "normal", "module-name": "pykickstart.commands.lang", "op-name": "replace_Gt_with_LtE", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.lang\", line 72, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nUnexpected arguments to lang command: []\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/lang.py\", line 20, in runTest\n    self.assert_parse(\"lang en_US\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: The following problem occurred on line 0 of the kickstart file:\n\nUnexpected arguments to lang command: []\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "@@ -29,7 +29,7 @@", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(ns.lang) != 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'lang')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) <= 0):", "             mapping = {'command': 'lang', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         self.set_to_self(ns)"]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.lang", "replace_Gt_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/lang.py"]}, "1": {"result-type": "normal", "module-name": "pykickstart.commands.lang", "op-name": "replace_NotEq_with_LtE", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/lang.py\", line 22, in runTest\n    \"lang en_US --addsupport=cs_CZ\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'lang en_US --addsupport=cs_CZ\\n'\n+ lang en_US --addsupport=cs_CZ\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "@@ -16,7 +16,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.lang != ''):", "+        if (self.lang <= ''):", "             retval += ('# System language\\nlang %s\\n' % self.lang)", "         return retval", " "]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.lang", "replace_NotEq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/lang.py"]}, "28": {"result-type": "normal", "module-name": "pykickstart.commands.lang", "op-name": "number_replacer", "result-data": [{"occurrence": 2, "line_number": 68, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.lang\", line 69, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nKickstart command lang requires one argument\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/lang.py\", line 20, in runTest\n    self.assert_parse(\"lang en_US\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: The following problem occurred on line 0 of the kickstart file:\n\nKickstart command lang requires one argument\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "@@ -27,7 +27,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(ns.lang) != 1):", "+        if (len(ns.lang) != 2):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'lang')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'lang', 'options': extra}"]]], "occurrence": 2, "command": ["cosmic-ray", "worker", "pykickstart.commands.lang", "number_replacer", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/lang.py"]}, "7": {"result-type": "normal", "module-name": "pykickstart.commands.lang", "op-name": "replace_NotEq_with_GtE", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "@@ -16,7 +16,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.lang != ''):", "+        if (self.lang >= ''):", "             retval += ('# System language\\nlang %s\\n' % self.lang)", "         return retval", " "]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.lang", "replace_NotEq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/lang.py"]}, "20": {"result-type": "normal", "module-name": "pykickstart.commands.lang", "op-name": "replace_Gt_with_Is", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIs"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.lang\", line 72, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nUnexpected arguments to lang command: []\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/lang.py\", line 20, in runTest\n    self.assert_parse(\"lang en_US\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: The following problem occurred on line 0 of the kickstart file:\n\nUnexpected arguments to lang command: []\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "@@ -29,7 +29,7 @@", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(ns.lang) != 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'lang')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) is 0):", "             mapping = {'command': 'lang', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         self.set_to_self(ns)"]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.lang", "replace_Gt_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/lang.py"]}, "14": {"result-type": "normal", "module-name": "pykickstart.commands.lang", "op-name": "replace_NotEq_with_NotIn", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "@@ -16,7 +16,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.lang != ''):", "+        if (self.lang not in ''):", "             retval += ('# System language\\nlang %s\\n' % self.lang)", "         return retval", " "]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.lang", "replace_NotEq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/lang.py"]}, "30": {"result-type": "normal", "module-name": "pykickstart.commands.lang", "op-name": "number_replacer", "result-data": [{"occurrence": 4, "line_number": 75, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.lang\", line 75, in parse\nIndexError: list index out of range\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/lang.py\", line 20, in runTest\n    self.assert_parse(\"lang en_US\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: list index out of range\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "@@ -33,7 +33,7 @@", "             mapping = {'command': 'lang', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         self.set_to_self(ns)", "-        self.lang = ns.lang[0]", "+        self.lang = ns.lang[1]", "         return self", " ", " class F19_Lang(FC3_Lang):"]]], "occurrence": 4, "command": ["cosmic-ray", "worker", "pykickstart.commands.lang", "number_replacer", "4", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/lang.py"]}, "21": {"result-type": "normal", "module-name": "pykickstart.commands.lang", "op-name": "replace_NotEq_with_Gt", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "@@ -16,7 +16,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.lang != ''):", "+        if (self.lang > ''):", "             retval += ('# System language\\nlang %s\\n' % self.lang)", "         return retval", " "]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.lang", "replace_NotEq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/lang.py"]}, "29": {"result-type": "normal", "module-name": "pykickstart.commands.lang", "op-name": "number_replacer", "result-data": [{"occurrence": 3, "line_number": 70, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/lang.py\", line 32, in runTest\n    self.assert_parse_error(\"lang en_US en_CA\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "@@ -29,7 +29,7 @@", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(ns.lang) != 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'lang')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) > 1):", "             mapping = {'command': 'lang', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         self.set_to_self(ns)"]]], "occurrence": 3, "command": ["cosmic-ray", "worker", "pykickstart.commands.lang", "number_replacer", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/lang.py"]}, "18": {"result-type": "normal", "module-name": "pykickstart.commands.lang", "op-name": "replace_Gt_with_In", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.lang\", line 70, in parse\nTypeError: argument of type 'int' is not iterable\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/lang.py\", line 20, in runTest\n    self.assert_parse(\"lang en_US\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "@@ -29,7 +29,7 @@", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(ns.lang) != 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'lang')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) in 0):", "             mapping = {'command': 'lang', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         self.set_to_self(ns)"]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.lang", "replace_Gt_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/lang.py"]}, "9": {"result-type": "normal", "module-name": "pykickstart.commands.lang", "op-name": "replace_NotEq_with_In", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/lang.py\", line 22, in runTest\n    \"lang en_US --addsupport=cs_CZ\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: '' != 'lang en_US --addsupport=cs_CZ\\n'\n+ lang en_US --addsupport=cs_CZ\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "@@ -16,7 +16,7 @@", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)", "-        if (self.lang != ''):", "+        if (self.lang in ''):", "             retval += ('# System language\\nlang %s\\n' % self.lang)", "         return retval", " "]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.lang", "replace_NotEq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/lang.py"]}, "16": {"result-type": "normal", "module-name": "pykickstart.commands.lang", "op-name": "replace_Gt_with_Lt", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithLt"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/lang.py\", line 32, in runTest\n    self.assert_parse_error(\"lang en_US en_CA\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 191, in assert_parse_error\n    parser.parse(args[1:])\nAssertionError: KickstartParseError not raised\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "@@ -29,7 +29,7 @@", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(ns.lang) != 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'lang')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) < 0):", "             mapping = {'command': 'lang', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         self.set_to_self(ns)"]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.lang", "replace_Gt_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/lang.py"]}, "12": {"result-type": "normal", "module-name": "pykickstart.commands.lang", "op-name": "replace_NotEq_with_Eq", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.lang\", line 69, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nKickstart command lang requires one argument\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/lang.py\", line 20, in runTest\n    self.assert_parse(\"lang en_US\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: The following problem occurred on line 0 of the kickstart file:\n\nKickstart command lang requires one argument\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "@@ -27,7 +27,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(ns.lang) != 1):", "+        if (len(ns.lang) == 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'lang')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'lang', 'options': extra}"]]], "occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.lang", "replace_NotEq_with_Eq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/lang.py"]}, "10": {"result-type": "normal", "module-name": "pykickstart.commands.lang", "op-name": "replace_NotEq_with_In", "result-data": [{"occurrence": 1, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn"}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 179, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.lang\", line 68, in parse\nTypeError: argument of type 'int' is not iterable\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/lang.py\", line 20, in runTest\n    self.assert_parse(\"lang en_US\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 181, in assert_parse\n    self.fail(\"Failed while parsing: %s\" % e)\nAssertionError: Failed while parsing: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "@@ -27,7 +27,7 @@", " ", "     def parse(self, args):", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "-        if (len(ns.lang) != 1):", "+        if (len(ns.lang) in 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'lang')))", "         elif (len(extra) > 0):", "             mapping = {'command': 'lang', 'options': extra}"]]], "occurrence": 1, "command": ["cosmic-ray", "worker", "pykickstart.commands.lang", "replace_NotEq_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/lang.py"]}, "25": {"result-type": "normal", "module-name": "pykickstart.commands.lang", "op-name": "replace_Gt_with_IsNot", "result-data": [{"occurrence": 0, "line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceGtWithIsNot"}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/lang.py", "@@ -29,7 +29,7 @@", "         (ns, extra) = self.op.parse_known_args(args=args, lineno=self.lineno)", "         if (len(ns.lang) != 1):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Kickstart command %s requires one argument') % 'lang')))", "-        elif (len(extra) > 0):", "+        elif (len(extra) is not 0):", "             mapping = {'command': 'lang', 'options': extra}", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=(_('Unexpected arguments to %(command)s command: %(options)s') % mapping)))", "         self.set_to_self(ns)"]]], "occurrence": 0, "command": ["cosmic-ray", "worker", "pykickstart.commands.lang", "replace_Gt_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/lang.py"]}}, "work-parameters": {"1": {"test-runner": "nose", "test-args": ["-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/lang.py"], "timeout": 15.35457}}}