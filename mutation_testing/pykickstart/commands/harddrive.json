{"work-items": {"68": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_Lt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 2, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_Lt", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 36, in runTest\n    self.assert_parse(\"harddrive --dir=/other-install --biospart=sda1\"))\nAssertionError: True is not false\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -19,7 +19,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", "+        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir < other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]]}, "53": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 0, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_Gt", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 32, in runTest\n    self.assert_parse(\"harddrive --dir=/install --partition=sda2\"))\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 43, in __eq__\nTypeError: unorderable types: NoneType() > NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -19,7 +19,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", "+        return ((self.biospart > other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]]}, "28": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_NotIn", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 3, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_NotIn", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 32, in runTest\n    self.assert_parse(\"harddrive --dir=/install --partition=sda2\"))\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\nTypeError: argument of type 'FC3_HardDrive' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -22,7 +22,7 @@", "         return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "-        return (not (self == other))", "+        return (not (self not in other))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]]}, "20": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Is_with_IsNot", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 1, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Is_with_IsNot", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithIsNot", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 28, in runTest\n    self.assert_parse(\"harddrive --dir=/install --partition=part\", \"harddrive --dir=/install --partition=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.harddrive\", line 88, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of biospart or partition options must be specified.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart is None) and (self.partition is not None)) or ((self.biospart is not None) and (self.partition is not None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "40": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_IsNot_with_Lt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 2, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_IsNot_with_Lt", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithLt", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 27, in runTest\n    self.assert_parse(\"harddrive --dir=/install --biospart=part\", \"harddrive --dir=/install --biospart=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.harddrive\", line 87, in parse\nTypeError: unorderable types: NoneType() < NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition < None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "4": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_IsNot_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 1, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_IsNot_with_LtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithLtE", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 27, in runTest\n    self.assert_parse(\"harddrive --dir=/install --biospart=part\", \"harddrive --dir=/install --biospart=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.harddrive\", line 87, in parse\nTypeError: unorderable types: str() <= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart <= None) and (self.partition is not None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "70": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Is_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 0, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Is_with_LtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithLtE", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 27, in runTest\n    self.assert_parse(\"harddrive --dir=/install --biospart=part\", \"harddrive --dir=/install --biospart=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.harddrive\", line 86, in parse\nTypeError: unorderable types: str() <= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart <= None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "31": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_LtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 2, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_LtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 36, in runTest\n    self.assert_parse(\"harddrive --dir=/other-install --biospart=sda1\"))\nAssertionError: True is not false\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -19,7 +19,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", "+        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir <= other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]]}, "50": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Is_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 0, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Is_with_Gt", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithGt", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 27, in runTest\n    self.assert_parse(\"harddrive --dir=/install --biospart=part\", \"harddrive --dir=/install --biospart=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.harddrive\", line 86, in parse\nTypeError: unorderable types: str() > NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart > None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "75": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_IsNot_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 0, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_IsNot_with_Gt", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithGt", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 27, in runTest\n    self.assert_parse(\"harddrive --dir=/install --biospart=part\", \"harddrive --dir=/install --biospart=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.harddrive\", line 55, in __str__\nTypeError: unorderable types: str() > NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -29,7 +29,7 @@", "         if (not self.seen):", "             return retval", "         retval += '# Use hard drive installation media\\n'", "-        if (self.biospart is not None):", "+        if (self.biospart > None):", "             retval += ('harddrive --dir=%s --biospart=%s\\n' % (self.dir, self.biospart))", "         else:", "             retval += ('harddrive --dir=%s --partition=%s\\n' % (self.dir, self.partition))"]]]}, "17": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_IsNot_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 1, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_IsNot_with_Is", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithIs", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 28, in runTest\n    self.assert_parse(\"harddrive --dir=/install --partition=part\", \"harddrive --dir=/install --partition=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.harddrive\", line 88, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of biospart or partition options must be specified.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is None) and (self.partition is not None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "36": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_IsNot_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 1, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_IsNot_with_GtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithGtE", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 27, in runTest\n    self.assert_parse(\"harddrive --dir=/install --biospart=part\", \"harddrive --dir=/install --biospart=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.harddrive\", line 87, in parse\nTypeError: unorderable types: str() >= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart >= None) and (self.partition is not None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "47": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_IsNot_with_Eq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 2, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_IsNot_with_Eq", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithEq", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 27, in runTest\n    self.assert_parse(\"harddrive --dir=/install --biospart=part\", \"harddrive --dir=/install --biospart=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.harddrive\", line 88, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of biospart or partition options must be specified.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition == None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "56": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_Gt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 3, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_Gt", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 32, in runTest\n    self.assert_parse(\"harddrive --dir=/install --partition=sda2\"))\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\nTypeError: unorderable types: FC3_HardDrive() > FC3_HardDrive()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -22,7 +22,7 @@", "         return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "-        return (not (self == other))", "+        return (not (self > other))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]]}, "59": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_IsNot", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 2, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_IsNot", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 36, in runTest\n    self.assert_parse(\"harddrive --dir=/other-install --biospart=sda1\"))\nAssertionError: True is not false\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -19,7 +19,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", "+        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir is not other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]]}, "16": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_IsNot_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 0, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_IsNot_with_Is", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithIs", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 27, in runTest\n    self.assert_parse(\"harddrive --dir=/install --biospart=part\", \"harddrive --dir=/install --biospart=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'harddrive --dir=/install --partition=None\\n' != 'harddrive --dir=/install --biospart=part\\n'\n- harddrive --dir=/install --partition=None\n?                                ^ --------\n+ harddrive --dir=/install --biospart=part\n?                            ++++    ^^^^\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -29,7 +29,7 @@", "         if (not self.seen):", "             return retval", "         retval += '# Use hard drive installation media\\n'", "-        if (self.biospart is not None):", "+        if (self.biospart is None):", "             retval += ('harddrive --dir=%s --biospart=%s\\n' % (self.dir, self.biospart))", "         else:", "             retval += ('harddrive --dir=%s --partition=%s\\n' % (self.dir, self.partition))"]]]}, "48": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "boolean_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 0, "module-name": "pykickstart.commands.harddrive", "op-name": "boolean_replacer", "result-data": [{"line_number": 41, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -18,7 +18,7 @@", " ", "     def __eq__(self, other):", "         if (not other):", "-            return False", "+            return True", "         return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", " ", "     def __ne__(self, other):"]]]}, "69": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_Lt", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 3, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_Lt", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 32, in runTest\n    self.assert_parse(\"harddrive --dir=/install --partition=sda2\"))\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\nTypeError: unorderable types: FC3_HardDrive() < FC3_HardDrive()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -22,7 +22,7 @@", "         return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "-        return (not (self == other))", "+        return (not (self < other))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]]}, "74": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_IsNot_with_NotEq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 2, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_IsNot_with_NotEq", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithNotEq", "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition != None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "6": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Is_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 0, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Is_with_NotEq", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithNotEq", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 27, in runTest\n    self.assert_parse(\"harddrive --dir=/install --biospart=part\", \"harddrive --dir=/install --biospart=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.harddrive\", line 88, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of biospart or partition options must be specified.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart != None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "1": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Is_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 0, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Is_with_GtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithGtE", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 27, in runTest\n    self.assert_parse(\"harddrive --dir=/install --biospart=part\", \"harddrive --dir=/install --biospart=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.harddrive\", line 86, in parse\nTypeError: unorderable types: str() >= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart >= None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "65": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Is_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 1, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Is_with_Lt", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithLt", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 28, in runTest\n    self.assert_parse(\"harddrive --dir=/install --partition=part\", \"harddrive --dir=/install --partition=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.harddrive\", line 86, in parse\nTypeError: unorderable types: str() < NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart is None) and (self.partition < None)) or ((self.biospart is not None) and (self.partition is not None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "25": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 0, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_NotIn", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 32, in runTest\n    self.assert_parse(\"harddrive --dir=/install --partition=sda2\"))\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 43, in __eq__\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -19,7 +19,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", "+        return ((self.biospart not in other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]]}, "57": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 0, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_IsNot", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 34, in runTest\n    self.assert_parse(\"harddrive --dir=/install --biospart=80p2\"))\nAssertionError: True is not false\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -19,7 +19,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", "+        return ((self.biospart is not other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]]}, "30": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 1, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_LtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 32, in runTest\n    self.assert_parse(\"harddrive --dir=/install --partition=sda2\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -19,7 +19,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", "+        return ((self.biospart == other.biospart) and (self.partition <= other.partition) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]]}, "67": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 1, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_Lt", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 32, in runTest\n    self.assert_parse(\"harddrive --dir=/install --partition=sda2\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -19,7 +19,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", "+        return ((self.biospart == other.biospart) and (self.partition < other.partition) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]]}, "54": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 1, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_Gt", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 36, in runTest\n    self.assert_parse(\"harddrive --dir=/other-install --biospart=sda1\"))\n  File \"pykickstart.commands.harddrive\", line 43, in __eq__\nTypeError: unorderable types: NoneType() > NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -19,7 +19,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", "+        return ((self.biospart == other.biospart) and (self.partition > other.partition) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]]}, "5": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_IsNot_with_LtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 2, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_IsNot_with_LtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithLtE", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 27, in runTest\n    self.assert_parse(\"harddrive --dir=/install --biospart=part\", \"harddrive --dir=/install --biospart=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.harddrive\", line 87, in parse\nTypeError: unorderable types: NoneType() <= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition <= None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "78": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 0, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_Is", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -19,7 +19,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", "+        return ((self.biospart is other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]]}, "64": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Is_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 0, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Is_with_Lt", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithLt", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 27, in runTest\n    self.assert_parse(\"harddrive --dir=/install --biospart=part\", \"harddrive --dir=/install --biospart=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.harddrive\", line 86, in parse\nTypeError: unorderable types: str() < NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart < None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "32": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_LtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 3, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_LtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 32, in runTest\n    self.assert_parse(\"harddrive --dir=/install --partition=sda2\"))\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\nTypeError: unorderable types: FC3_HardDrive() <= FC3_HardDrive()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -22,7 +22,7 @@", "         return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "-        return (not (self == other))", "+        return (not (self <= other))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]]}, "22": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 1, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_NotEq", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 32, in runTest\n    self.assert_parse(\"harddrive --dir=/install --partition=sda2\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -19,7 +19,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", "+        return ((self.biospart == other.biospart) and (self.partition != other.partition) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]]}, "62": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_IsNot_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 1, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_IsNot_with_In", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithIn", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 27, in runTest\n    self.assert_parse(\"harddrive --dir=/install --biospart=part\", \"harddrive --dir=/install --biospart=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.harddrive\", line 87, in parse\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart in None) and (self.partition is not None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "45": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_IsNot_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 0, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_IsNot_with_Eq", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithEq", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 27, in runTest\n    self.assert_parse(\"harddrive --dir=/install --biospart=part\", \"harddrive --dir=/install --biospart=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 174, in assert_parse\n    self.assertEqual(result, expectedStr)\nAssertionError: 'harddrive --dir=/install --partition=None\\n' != 'harddrive --dir=/install --biospart=part\\n'\n- harddrive --dir=/install --partition=None\n?                                ^ --------\n+ harddrive --dir=/install --biospart=part\n?                            ++++    ^^^^\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -29,7 +29,7 @@", "         if (not self.seen):", "             return retval", "         retval += '# Use hard drive installation media\\n'", "-        if (self.biospart is not None):", "+        if (self.biospart == None):", "             retval += ('harddrive --dir=%s --biospart=%s\\n' % (self.dir, self.biospart))", "         else:", "             retval += ('harddrive --dir=%s --partition=%s\\n' % (self.dir, self.partition))"]]]}, "34": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Is_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 1, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Is_with_In", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithIn", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 28, in runTest\n    self.assert_parse(\"harddrive --dir=/install --partition=part\", \"harddrive --dir=/install --partition=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.harddrive\", line 86, in parse\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart is None) and (self.partition in None)) or ((self.biospart is not None) and (self.partition is not None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "73": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_IsNot_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 1, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_IsNot_with_NotEq", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithNotEq", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart != None) and (self.partition is not None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "27": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_NotIn", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 2, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_NotIn", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 36, in runTest\n    self.assert_parse(\"harddrive --dir=/other-install --biospart=sda1\"))\nAssertionError: True is not false\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -19,7 +19,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", "+        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir not in other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]]}, "35": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_IsNot_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 0, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_IsNot_with_GtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithGtE", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 27, in runTest\n    self.assert_parse(\"harddrive --dir=/install --biospart=part\", \"harddrive --dir=/install --biospart=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.harddrive\", line 55, in __str__\nTypeError: unorderable types: str() >= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -29,7 +29,7 @@", "         if (not self.seen):", "             return retval", "         retval += '# Use hard drive installation media\\n'", "-        if (self.biospart is not None):", "+        if (self.biospart >= None):", "             retval += ('harddrive --dir=%s --biospart=%s\\n' % (self.dir, self.biospart))", "         else:", "             retval += ('harddrive --dir=%s --partition=%s\\n' % (self.dir, self.partition))"]]]}, "7": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Is_with_NotEq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 1, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Is_with_NotEq", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithNotEq", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 28, in runTest\n    self.assert_parse(\"harddrive --dir=/install --partition=part\", \"harddrive --dir=/install --partition=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.harddrive\", line 88, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of biospart or partition options must be specified.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart is None) and (self.partition != None)) or ((self.biospart is not None) and (self.partition is not None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "46": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_IsNot_with_Eq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 1, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_IsNot_with_Eq", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithEq", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 28, in runTest\n    self.assert_parse(\"harddrive --dir=/install --partition=part\", \"harddrive --dir=/install --partition=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.harddrive\", line 88, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of biospart or partition options must be specified.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart == None) and (self.partition is not None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "15": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Is_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 1, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Is_with_NotIn", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithNotIn", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 28, in runTest\n    self.assert_parse(\"harddrive --dir=/install --partition=part\", \"harddrive --dir=/install --partition=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.harddrive\", line 86, in parse\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart is None) and (self.partition not in None)) or ((self.biospart is not None) and (self.partition is not None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "3": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_IsNot_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 0, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_IsNot_with_LtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithLtE", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 27, in runTest\n    self.assert_parse(\"harddrive --dir=/install --biospart=part\", \"harddrive --dir=/install --biospart=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.harddrive\", line 55, in __str__\nTypeError: unorderable types: str() <= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -29,7 +29,7 @@", "         if (not self.seen):", "             return retval", "         retval += '# Use hard drive installation media\\n'", "-        if (self.biospart is not None):", "+        if (self.biospart <= None):", "             retval += ('harddrive --dir=%s --biospart=%s\\n' % (self.dir, self.biospart))", "         else:", "             retval += ('harddrive --dir=%s --partition=%s\\n' % (self.dir, self.partition))"]]]}, "52": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "number_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 0, "module-name": "pykickstart.commands.harddrive", "op-name": "number_replacer", "result-data": [{"line_number": 31, "operator": "cosmic_ray.operators.number_replacer.NumberReplacer", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -9,7 +9,7 @@", "     removedKeywords = KickstartCommand.removedKeywords", "     removedAttrs = KickstartCommand.removedAttrs", " ", "-    def __init__(self, writePriority=0, *args, **kwargs):", "+    def __init__(self, writePriority=1, *args, **kwargs):", "         KickstartCommand.__init__(self, writePriority, *args, **kwargs)", "         self.biospart = kwargs.get('biospart', None)", "         self.partition = kwargs.get('partition', None)"]]]}, "42": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_In", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 1, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_In", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 36, in runTest\n    self.assert_parse(\"harddrive --dir=/other-install --biospart=sda1\"))\n  File \"pykickstart.commands.harddrive\", line 43, in __eq__\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -19,7 +19,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", "+        return ((self.biospart == other.biospart) and (self.partition in other.partition) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]]}, "12": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_GtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 2, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_GtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -19,7 +19,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", "+        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir >= other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]]}, "44": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_In", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 3, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_In", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 32, in runTest\n    self.assert_parse(\"harddrive --dir=/install --partition=sda2\"))\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\nTypeError: argument of type 'FC3_HardDrive' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -22,7 +22,7 @@", "         return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "-        return (not (self == other))", "+        return (not (self in other))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]]}, "37": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_IsNot_with_GtE", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 2, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_IsNot_with_GtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithGtE", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 27, in runTest\n    self.assert_parse(\"harddrive --dir=/install --biospart=part\", \"harddrive --dir=/install --biospart=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.harddrive\", line 87, in parse\nTypeError: unorderable types: NoneType() >= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition >= None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "76": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_IsNot_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 1, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_IsNot_with_Gt", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithGt", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 27, in runTest\n    self.assert_parse(\"harddrive --dir=/install --biospart=part\", \"harddrive --dir=/install --biospart=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.harddrive\", line 87, in parse\nTypeError: unorderable types: str() > NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart > None) and (self.partition is not None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "38": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_IsNot_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 0, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_IsNot_with_Lt", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithLt", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 27, in runTest\n    self.assert_parse(\"harddrive --dir=/install --biospart=part\", \"harddrive --dir=/install --biospart=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.harddrive\", line 55, in __str__\nTypeError: unorderable types: str() < NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -29,7 +29,7 @@", "         if (not self.seen):", "             return retval", "         retval += '# Use hard drive installation media\\n'", "-        if (self.biospart is not None):", "+        if (self.biospart < None):", "             retval += ('harddrive --dir=%s --biospart=%s\\n' % (self.dir, self.biospart))", "         else:", "             retval += ('harddrive --dir=%s --partition=%s\\n' % (self.dir, self.partition))"]]]}, "60": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_IsNot", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 3, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_IsNot", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 32, in runTest\n    self.assert_parse(\"harddrive --dir=/install --partition=sda2\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -22,7 +22,7 @@", "         return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "-        return (not (self == other))", "+        return (not (self is not other))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]]}, "24": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_NotEq", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 3, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_NotEq", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 32, in runTest\n    self.assert_parse(\"harddrive --dir=/install --partition=sda2\"))\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\nRecursionError: maximum recursion depth exceeded while calling a Python object\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -22,7 +22,7 @@", "         return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "-        return (not (self == other))", "+        return (not (self != other))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]]}, "81": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_Is", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 3, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_Is", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "occurrence": 3}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -22,7 +22,7 @@", "         return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "-        return (not (self == other))", "+        return (not (self is other))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]]}, "10": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 0, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_GtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 32, in runTest\n    self.assert_parse(\"harddrive --dir=/install --partition=sda2\"))\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 43, in __eq__\nTypeError: unorderable types: NoneType() >= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -19,7 +19,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", "+        return ((self.biospart >= other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]]}, "77": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_IsNot_with_Gt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 2, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_IsNot_with_Gt", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithGt", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 27, in runTest\n    self.assert_parse(\"harddrive --dir=/install --biospart=part\", \"harddrive --dir=/install --biospart=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.harddrive\", line 87, in parse\nTypeError: unorderable types: NoneType() > NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition > None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "63": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_IsNot_with_In", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 2, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_IsNot_with_In", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithIn", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 27, in runTest\n    self.assert_parse(\"harddrive --dir=/install --biospart=part\", \"harddrive --dir=/install --biospart=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.harddrive\", line 87, in parse\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition in None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "83": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_IsNot_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 1, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_IsNot_with_NotIn", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithNotIn", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 27, in runTest\n    self.assert_parse(\"harddrive --dir=/install --biospart=part\", \"harddrive --dir=/install --biospart=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.harddrive\", line 87, in parse\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart not in None) and (self.partition is not None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "51": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Is_with_Gt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 1, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Is_with_Gt", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithGt", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 28, in runTest\n    self.assert_parse(\"harddrive --dir=/install --partition=part\", \"harddrive --dir=/install --partition=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.harddrive\", line 86, in parse\nTypeError: unorderable types: str() > NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart is None) and (self.partition > None)) or ((self.biospart is not None) and (self.partition is not None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "23": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_NotEq", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 2, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_NotEq", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 36, in runTest\n    self.assert_parse(\"harddrive --dir=/other-install --biospart=sda1\"))\nAssertionError: True is not false\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -19,7 +19,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", "+        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir != other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]]}, "8": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Is_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 0, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Is_with_Eq", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithEq", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart == None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "11": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 1, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_GtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 36, in runTest\n    self.assert_parse(\"harddrive --dir=/other-install --biospart=sda1\"))\n  File \"pykickstart.commands.harddrive\", line 43, in __eq__\nTypeError: unorderable types: NoneType() >= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -19,7 +19,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", "+        return ((self.biospart == other.biospart) and (self.partition >= other.partition) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]]}, "9": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Is_with_Eq", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 1, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Is_with_Eq", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithEq", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart is None) and (self.partition == None)) or ((self.biospart is not None) and (self.partition is not None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "39": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_IsNot_with_Lt", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 1, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_IsNot_with_Lt", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithLt", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 27, in runTest\n    self.assert_parse(\"harddrive --dir=/install --biospart=part\", \"harddrive --dir=/install --biospart=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.harddrive\", line 87, in parse\nTypeError: unorderable types: str() < NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart < None) and (self.partition is not None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "66": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 0, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_Lt", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLt", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 32, in runTest\n    self.assert_parse(\"harddrive --dir=/install --partition=sda2\"))\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 43, in __eq__\nTypeError: unorderable types: NoneType() < NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -19,7 +19,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", "+        return ((self.biospart < other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]]}, "43": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_In", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 2, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_In", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -19,7 +19,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", "+        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir in other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]]}, "13": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_GtE", "3", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 3, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_GtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGtE", "occurrence": 3}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 32, in runTest\n    self.assert_parse(\"harddrive --dir=/install --partition=sda2\"))\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\nTypeError: unorderable types: FC3_HardDrive() >= FC3_HardDrive()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -22,7 +22,7 @@", "         return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "-        return (not (self == other))", "+        return (not (self >= other))", " ", "     def __str__(self):", "         retval = KickstartCommand.__str__(self)"]]]}, "14": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Is_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 0, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Is_with_NotIn", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithNotIn", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 27, in runTest\n    self.assert_parse(\"harddrive --dir=/install --biospart=part\", \"harddrive --dir=/install --biospart=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.harddrive\", line 86, in parse\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart not in None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "71": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Is_with_LtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 1, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Is_with_LtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithLtE", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 28, in runTest\n    self.assert_parse(\"harddrive --dir=/install --partition=part\", \"harddrive --dir=/install --partition=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.harddrive\", line 86, in parse\nTypeError: unorderable types: str() <= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart is None) and (self.partition <= None)) or ((self.biospart is not None) and (self.partition is not None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "80": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_Is", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 2, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_Is", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -19,7 +19,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", "+        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir is other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]]}, "82": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_IsNot_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 0, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_IsNot_with_NotIn", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithNotIn", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 27, in runTest\n    self.assert_parse(\"harddrive --dir=/install --biospart=part\", \"harddrive --dir=/install --biospart=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.harddrive\", line 55, in __str__\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -29,7 +29,7 @@", "         if (not self.seen):", "             return retval", "         retval += '# Use hard drive installation media\\n'", "-        if (self.biospart is not None):", "+        if (self.biospart not in None):", "             retval += ('harddrive --dir=%s --biospart=%s\\n' % (self.dir, self.biospart))", "         else:", "             retval += ('harddrive --dir=%s --partition=%s\\n' % (self.dir, self.partition))"]]]}, "29": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 0, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_LtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithLtE", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 32, in runTest\n    self.assert_parse(\"harddrive --dir=/install --partition=sda2\"))\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 43, in __eq__\nTypeError: unorderable types: NoneType() <= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -19,7 +19,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", "+        return ((self.biospart <= other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]]}, "72": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_IsNot_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 0, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_IsNot_with_NotEq", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithNotEq", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -29,7 +29,7 @@", "         if (not self.seen):", "             return retval", "         retval += '# Use hard drive installation media\\n'", "-        if (self.biospart is not None):", "+        if (self.biospart != None):", "             retval += ('harddrive --dir=%s --biospart=%s\\n' % (self.dir, self.biospart))", "         else:", "             retval += ('harddrive --dir=%s --partition=%s\\n' % (self.dir, self.partition))"]]]}, "18": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_IsNot_with_Is", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 2, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_IsNot_with_Is", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithIs", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 27, in runTest\n    self.assert_parse(\"harddrive --dir=/install --biospart=part\", \"harddrive --dir=/install --biospart=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.harddrive\", line 88, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of biospart or partition options must be specified.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "84": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_IsNot_with_NotIn", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 2, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_IsNot_with_NotIn", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithNotIn", "occurrence": 2}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 27, in runTest\n    self.assert_parse(\"harddrive --dir=/install --biospart=part\", \"harddrive --dir=/install --biospart=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.harddrive\", line 87, in parse\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition not in None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "26": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_NotIn", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 1, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_NotIn", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotIn", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 32, in runTest\n    self.assert_parse(\"harddrive --dir=/install --partition=sda2\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -19,7 +19,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", "+        return ((self.biospart == other.biospart) and (self.partition not in other.partition) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]]}, "2": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Is_with_GtE", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 1, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Is_with_GtE", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithGtE", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 28, in runTest\n    self.assert_parse(\"harddrive --dir=/install --partition=part\", \"harddrive --dir=/install --partition=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.harddrive\", line 86, in parse\nTypeError: unorderable types: str() >= NoneType()\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart is None) and (self.partition >= None)) or ((self.biospart is not None) and (self.partition is not None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "61": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_IsNot_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 0, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_IsNot_with_In", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsNotWithIn", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 27, in runTest\n    self.assert_parse(\"harddrive --dir=/install --biospart=part\", \"harddrive --dir=/install --biospart=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 167, in assert_parse\n    result = str(obj)\n  File \"pykickstart.commands.harddrive\", line 55, in __str__\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -29,7 +29,7 @@", "         if (not self.seen):", "             return retval", "         retval += '# Use hard drive installation media\\n'", "-        if (self.biospart is not None):", "+        if (self.biospart in None):", "             retval += ('harddrive --dir=%s --biospart=%s\\n' % (self.dir, self.biospart))", "         else:", "             retval += ('harddrive --dir=%s --partition=%s\\n' % (self.dir, self.partition))"]]]}, "19": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Is_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 0, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Is_with_IsNot", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithIsNot", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 27, in runTest\n    self.assert_parse(\"harddrive --dir=/install --biospart=part\", \"harddrive --dir=/install --biospart=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.harddrive\", line 88, in parse\npykickstart.errors.KickstartParseError: The following problem occurred on line 0 of the kickstart file:\n\nOne of biospart or partition options must be specified.\n\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart is not None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "33": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Is_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 0, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Is_with_In", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceIsWithIn", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 27, in runTest\n    self.assert_parse(\"harddrive --dir=/install --biospart=part\", \"harddrive --dir=/install --biospart=part\\n\")\n  File \"/home/atodorov/repos/git/pykickstart/tests/baseclass.py\", line 166, in assert_parse\n    obj = parser.parse(args[1:])\n  File \"pykickstart.commands.harddrive\", line 86, in parse\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -45,7 +45,7 @@", "     def parse(self, args):", "         ns = self.op.parse_args(args=args, lineno=self.lineno)", "         self.set_to_self(ns)", "-        if (((self.biospart is None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "+        if (((self.biospart in None) and (self.partition is None)) or ((self.biospart is not None) and (self.partition is not None))):", "             raise KickstartParseError(formatErrorMsg(self.lineno, msg=_('One of biospart or partition options must be specified.')))", "         return self", " "]]]}, "49": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "boolean_replacer", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 1, "module-name": "pykickstart.commands.harddrive", "op-name": "boolean_replacer", "result-data": [{"line_number": 74, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -39,7 +39,7 @@", "         op = KSOptionParser(prog='harddrive', description='\\n            Install from a directory of ISO images on a local drive, which must\\n            be either vfat or ext2. In addition to this directory, you must also\\n            provide the install.img in some way. You can either do this by\\n            booting off the boot.iso or by creating an images/ directory in the\\n            same directory as the ISO images and placing install.img in there.\\n            ', version=FC3)", "         op.add_argument('--biospart', version=FC3, help='BIOS partition to install from (such as 82p2).')", "         op.add_argument('--partition', version=FC3, help='Partition to install from (such as, sdb2).')", "-        op.add_argument('--dir', required=True, version=FC3, help='\\n                        Directory containing both the ISO images and the\\n                        images/install.img. For example::\\n\\n                        ``harddrive --partition=hdb2 --dir=/tmp/install-tree``\\n                        ')", "+        op.add_argument('--dir', required=False, version=FC3, help='\\n                        Directory containing both the ISO images and the\\n                        images/install.img. For example::\\n\\n                        ``harddrive --partition=hdb2 --dir=/tmp/install-tree``\\n                        ')", "         return op", " ", "     def parse(self, args):"]]]}, "58": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_IsNot", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 1, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_IsNot", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIsNot", "occurrence": 1}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 32, in runTest\n    self.assert_parse(\"harddrive --dir=/install --partition=sda2\"))\nAssertionError: False is not true\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -19,7 +19,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", "+        return ((self.biospart == other.biospart) and (self.partition is not other.partition) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]]}, "21": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 0, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_NotEq", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithNotEq", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 34, in runTest\n    self.assert_parse(\"harddrive --dir=/install --biospart=80p2\"))\nAssertionError: True is not false\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -19,7 +19,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", "+        return ((self.biospart != other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]]}, "55": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_Gt", "2", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 2, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_Gt", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithGt", "occurrence": 2}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -19,7 +19,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", "+        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir > other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]]}, "41": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 0, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_In", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIn", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/commands/harddrive.py\", line 32, in runTest\n    self.assert_parse(\"harddrive --dir=/install --partition=sda2\"))\n  File \"pykickstart.commands.harddrive\", line 46, in __ne__\n  File \"pykickstart.commands.harddrive\", line 43, in __eq__\nTypeError: argument of type 'NoneType' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -19,7 +19,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", "+        return ((self.biospart in other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]]}, "79": {"result-type": "normal", "command": ["cosmic-ray", "worker", "pykickstart.commands.harddrive", "replace_Eq_with_Is", "1", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "occurrence": 1, "module-name": "pykickstart.commands.harddrive", "op-name": "replace_Eq_with_Is", "result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceEqWithIs", "occurrence": 1}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/commands/harddrive.py", "@@ -19,7 +19,7 @@", "     def __eq__(self, other):", "         if (not other):", "             return False", "-        return ((self.biospart == other.biospart) and (self.partition == other.partition) and (self.dir == other.dir))", "+        return ((self.biospart == other.biospart) and (self.partition is other.partition) and (self.dir == other.dir))", " ", "     def __ne__(self, other):", "         return (not (self == other))"]]]}}, "_default": {}, "work-parameters": {"1": {"test-args": ["-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/commands/harddrive.py"], "test-runner": "nose", "timeout": 5.725280000000001}}}