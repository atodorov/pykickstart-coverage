{"work-parameters": {"1": {"test-runner": "nose", "timeout": 3.8445, "test-args": ["-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/load.py"]}}, "_default": {}, "work-items": {"17": {"result-data": [{"line_number": 30, "operator": "cosmic_ray.operators.boolean_replacer.BooleanReplacer", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "@@ -6,7 +6,7 @@", " from pykickstart.i18n import _", " from requests.exceptions import SSLError, RequestException", " _is_url = (lambda location: ('://' in location))", "-SSL_VERIFY = True", "+SSL_VERIFY = False", " ", " def load_to_str(location):", "     'Load a destination URL or file into a string.\\n    Type of input is inferred automatically.\\n\\n    Arguments:\\n    location -- URL or file name to load\\n\\n    Returns: string with contents\\n    Raises: KickstartError on error reading'"]]], "module-name": "pykickstart.load", "op-name": "boolean_replacer", "command": ["cosmic-ray", "worker", "pykickstart.load", "boolean_replacer", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/load.py"], "result-type": "normal", "occurrence": 0}, "18": {"result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithGt", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"pykickstart.load\", line 107, in _copy_file\n  File \"/home/atodorov/.virtualenvs/pykickstart_docs/lib64/python3.5/shutil.py\", line 114, in copyfile\n    with open(src, 'rb') as fsrc:\nFileNotFoundError: [Errno 2] No such file or directory: 'http://127.0.0.1:55482/testfile-utd55c7m'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/load.py\", line 109, in runTest\n    target_path = load.load_to_file(self._url, self._target_path)\n  File \"pykickstart.load\", line 70, in load_to_file\n  File \"pykickstart.load\", line 109, in _copy_file\npykickstart.errors.KickstartError: Error copying file: [Errno 2] No such file or directory: 'http://127.0.0.1:55482/testfile-utd55c7m'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "@@ -5,7 +5,7 @@", " from pykickstart.errors import KickstartError", " from pykickstart.i18n import _", " from requests.exceptions import SSLError, RequestException", "-_is_url = (lambda location: ('://' in location))", "+_is_url = (lambda location: ('://' > location))", " SSL_VERIFY = True", " ", " def load_to_str(location):"]]], "module-name": "pykickstart.load", "op-name": "replace_In_with_Gt", "command": ["cosmic-ray", "worker", "pykickstart.load", "replace_In_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/load.py"], "result-type": "normal", "occurrence": 0}, "11": {"result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithIsNot", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"pykickstart.load\", line 77, in _load_url\n  File \"/home/atodorov/.virtualenvs/pykickstart_docs/lib/python3.5/site-packages/requests/api.py\", line 71, in get\n    return request('get', url, params=params, **kwargs)\n  File \"/home/atodorov/.virtualenvs/pykickstart_docs/lib/python3.5/site-packages/requests/api.py\", line 57, in request\n    return session.request(method=method, url=url, **kwargs)\n  File \"/home/atodorov/.virtualenvs/pykickstart_docs/lib/python3.5/site-packages/requests/sessions.py\", line 461, in request\n    prep = self.prepare_request(req)\n  File \"/home/atodorov/.virtualenvs/pykickstart_docs/lib/python3.5/site-packages/requests/sessions.py\", line 394, in prepare_request\n    hooks=merge_hooks(request.hooks, self.hooks),\n  File \"/home/atodorov/.virtualenvs/pykickstart_docs/lib/python3.5/site-packages/requests/models.py\", line 295, in prepare\n    self.prepare_url(url, params)\n  File \"/home/atodorov/.virtualenvs/pykickstart_docs/lib/python3.5/site-packages/requests/models.py\", line 355, in prepare_url\n    raise MissingSchema(error)\nrequests.exceptions.MissingSchema: Invalid URL '/tmp/testfile-rszpym7v': No schema supplied. Perhaps you meant http:///tmp/testfile-rszpym7v?\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/load.py\", line 61, in runTest\n    target_path = load.load_to_file(self._path, self._target_path)\n  File \"pykickstart.load\", line 59, in load_to_file\n  File \"pykickstart.load\", line 81, in _load_url\npykickstart.errors.KickstartError: Error accessing URL \"/tmp/testfile-rszpym7v\": Invalid URL '/tmp/testfile-rszpym7v': No schema supplied. Perhaps you meant http:///tmp/testfile-rszpym7v?\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "@@ -5,7 +5,7 @@", " from pykickstart.errors import KickstartError", " from pykickstart.i18n import _", " from requests.exceptions import SSLError, RequestException", "-_is_url = (lambda location: ('://' in location))", "+_is_url = (lambda location: ('://' is not location))", " SSL_VERIFY = True", " ", " def load_to_str(location):"]]], "module-name": "pykickstart.load", "op-name": "replace_In_with_IsNot", "command": ["cosmic-ray", "worker", "pykickstart.load", "replace_In_with_IsNot", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/load.py"], "result-type": "normal", "occurrence": 0}, "14": {"result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIn", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/load.py\", line 109, in runTest\n    target_path = load.load_to_file(self._url, self._target_path)\n  File \"pykickstart.load\", line 59, in load_to_file\n  File \"pykickstart.load\", line 83, in _load_url\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "@@ -37,7 +37,7 @@", "         raise KickstartError(((_('Error securely accessing URL \"%s\"') % location) + ': {e}'.format(e=str(e))))", "     except RequestException as e:", "         raise KickstartError(((_('Error accessing URL \"%s\"') % location) + ': {e}'.format(e=str(e))))", "-    if (request.status_code != requests.codes.ok):", "+    if (request.status_code in requests.codes.ok):", "         raise KickstartError(((_('Error accessing URL \"%s\"') % location) + ': {c}'.format(c=str(request.status_code))))", "     return request.text", " "]]], "module-name": "pykickstart.load", "op-name": "replace_NotEq_with_In", "command": ["cosmic-ray", "worker", "pykickstart.load", "replace_NotEq_with_In", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/load.py"], "result-type": "normal", "occurrence": 0}, "7": {"result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithLtE", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "@@ -5,7 +5,7 @@", " from pykickstart.errors import KickstartError", " from pykickstart.i18n import _", " from requests.exceptions import SSLError, RequestException", "-_is_url = (lambda location: ('://' in location))", "+_is_url = (lambda location: ('://' <= location))", " SSL_VERIFY = True", " ", " def load_to_str(location):"]]], "module-name": "pykickstart.load", "op-name": "replace_In_with_LtE", "command": ["cosmic-ray", "worker", "pykickstart.load", "replace_In_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/load.py"], "result-type": "normal", "occurrence": 0}, "10": {"result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithLt", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "@@ -5,7 +5,7 @@", " from pykickstart.errors import KickstartError", " from pykickstart.i18n import _", " from requests.exceptions import SSLError, RequestException", "-_is_url = (lambda location: ('://' in location))", "+_is_url = (lambda location: ('://' < location))", " SSL_VERIFY = True", " ", " def load_to_str(location):"]]], "module-name": "pykickstart.load", "op-name": "replace_In_with_Lt", "command": ["cosmic-ray", "worker", "pykickstart.load", "replace_In_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/load.py"], "result-type": "normal", "occurrence": 0}, "15": {"result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGtE", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/load.py\", line 109, in runTest\n    target_path = load.load_to_file(self._url, self._target_path)\n  File \"pykickstart.load\", line 59, in load_to_file\n  File \"pykickstart.load\", line 84, in _load_url\npykickstart.errors.KickstartError: Error accessing URL \"http://127.0.0.1:53808/testfile-vpr_97dj\": 200\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "@@ -37,7 +37,7 @@", "         raise KickstartError(((_('Error securely accessing URL \"%s\"') % location) + ': {e}'.format(e=str(e))))", "     except RequestException as e:", "         raise KickstartError(((_('Error accessing URL \"%s\"') % location) + ': {e}'.format(e=str(e))))", "-    if (request.status_code != requests.codes.ok):", "+    if (request.status_code >= requests.codes.ok):", "         raise KickstartError(((_('Error accessing URL \"%s\"') % location) + ': {c}'.format(c=str(request.status_code))))", "     return request.text", " "]]], "module-name": "pykickstart.load", "op-name": "replace_NotEq_with_GtE", "command": ["cosmic-ray", "worker", "pykickstart.load", "replace_NotEq_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/load.py"], "result-type": "normal", "occurrence": 0}, "9": {"result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithIs", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/load.py\", line 109, in runTest\n    target_path = load.load_to_file(self._url, self._target_path)\n  File \"pykickstart.load\", line 59, in load_to_file\n  File \"pykickstart.load\", line 84, in _load_url\npykickstart.errors.KickstartError: Error accessing URL \"http://127.0.0.1:60452/testfile-eulebw8_\": 200\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "@@ -37,7 +37,7 @@", "         raise KickstartError(((_('Error securely accessing URL \"%s\"') % location) + ': {e}'.format(e=str(e))))", "     except RequestException as e:", "         raise KickstartError(((_('Error accessing URL \"%s\"') % location) + ': {e}'.format(e=str(e))))", "-    if (request.status_code != requests.codes.ok):", "+    if (request.status_code is requests.codes.ok):", "         raise KickstartError(((_('Error accessing URL \"%s\"') % location) + ': {c}'.format(c=str(request.status_code))))", "     return request.text", " "]]], "module-name": "pykickstart.load", "op-name": "replace_NotEq_with_Is", "command": ["cosmic-ray", "worker", "pykickstart.load", "replace_NotEq_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/load.py"], "result-type": "normal", "occurrence": 0}, "2": {"result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithNotIn", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/load.py\", line 109, in runTest\n    target_path = load.load_to_file(self._url, self._target_path)\n  File \"pykickstart.load\", line 59, in load_to_file\n  File \"pykickstart.load\", line 83, in _load_url\nTypeError: argument of type 'int' is not iterable\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "@@ -37,7 +37,7 @@", "         raise KickstartError(((_('Error securely accessing URL \"%s\"') % location) + ': {e}'.format(e=str(e))))", "     except RequestException as e:", "         raise KickstartError(((_('Error accessing URL \"%s\"') % location) + ': {e}'.format(e=str(e))))", "-    if (request.status_code != requests.codes.ok):", "+    if (request.status_code not in requests.codes.ok):", "         raise KickstartError(((_('Error accessing URL \"%s\"') % location) + ': {c}'.format(c=str(request.status_code))))", "     return request.text", " "]]], "module-name": "pykickstart.load", "op-name": "replace_NotEq_with_NotIn", "command": ["cosmic-ray", "worker", "pykickstart.load", "replace_NotEq_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/load.py"], "result-type": "normal", "occurrence": 0}, "5": {"result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithIs", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"pykickstart.load\", line 107, in _copy_file\n  File \"/home/atodorov/.virtualenvs/pykickstart_docs/lib64/python3.5/shutil.py\", line 114, in copyfile\n    with open(src, 'rb') as fsrc:\nFileNotFoundError: [Errno 2] No such file or directory: 'http://127.0.0.1:38403/testfile-lm3lu_vh'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/load.py\", line 109, in runTest\n    target_path = load.load_to_file(self._url, self._target_path)\n  File \"pykickstart.load\", line 70, in load_to_file\n  File \"pykickstart.load\", line 109, in _copy_file\npykickstart.errors.KickstartError: Error copying file: [Errno 2] No such file or directory: 'http://127.0.0.1:38403/testfile-lm3lu_vh'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "@@ -5,7 +5,7 @@", " from pykickstart.errors import KickstartError", " from pykickstart.i18n import _", " from requests.exceptions import SSLError, RequestException", "-_is_url = (lambda location: ('://' in location))", "+_is_url = (lambda location: ('://' is location))", " SSL_VERIFY = True", " ", " def load_to_str(location):"]]], "module-name": "pykickstart.load", "op-name": "replace_In_with_Is", "command": ["cosmic-ray", "worker", "pykickstart.load", "replace_In_with_Is", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/load.py"], "result-type": "normal", "occurrence": 0}, "16": {"result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLtE", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/load.py\", line 109, in runTest\n    target_path = load.load_to_file(self._url, self._target_path)\n  File \"pykickstart.load\", line 59, in load_to_file\n  File \"pykickstart.load\", line 84, in _load_url\npykickstart.errors.KickstartError: Error accessing URL \"http://127.0.0.1:37307/testfile-v6l9qhw6\": 200\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "@@ -37,7 +37,7 @@", "         raise KickstartError(((_('Error securely accessing URL \"%s\"') % location) + ': {e}'.format(e=str(e))))", "     except RequestException as e:", "         raise KickstartError(((_('Error accessing URL \"%s\"') % location) + ': {e}'.format(e=str(e))))", "-    if (request.status_code != requests.codes.ok):", "+    if (request.status_code <= requests.codes.ok):", "         raise KickstartError(((_('Error accessing URL \"%s\"') % location) + ': {c}'.format(c=str(request.status_code))))", "     return request.text", " "]]], "module-name": "pykickstart.load", "op-name": "replace_NotEq_with_LtE", "command": ["cosmic-ray", "worker", "pykickstart.load", "replace_NotEq_with_LtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/load.py"], "result-type": "normal", "occurrence": 0}, "6": {"result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithGtE", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"pykickstart.load\", line 107, in _copy_file\n  File \"/home/atodorov/.virtualenvs/pykickstart_docs/lib64/python3.5/shutil.py\", line 114, in copyfile\n    with open(src, 'rb') as fsrc:\nFileNotFoundError: [Errno 2] No such file or directory: 'http://127.0.0.1:42171/testfile-jk1l9lub'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/load.py\", line 109, in runTest\n    target_path = load.load_to_file(self._url, self._target_path)\n  File \"pykickstart.load\", line 70, in load_to_file\n  File \"pykickstart.load\", line 109, in _copy_file\npykickstart.errors.KickstartError: Error copying file: [Errno 2] No such file or directory: 'http://127.0.0.1:42171/testfile-jk1l9lub'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "@@ -5,7 +5,7 @@", " from pykickstart.errors import KickstartError", " from pykickstart.i18n import _", " from requests.exceptions import SSLError, RequestException", "-_is_url = (lambda location: ('://' in location))", "+_is_url = (lambda location: ('://' >= location))", " SSL_VERIFY = True", " ", " def load_to_str(location):"]]], "module-name": "pykickstart.load", "op-name": "replace_In_with_GtE", "command": ["cosmic-ray", "worker", "pykickstart.load", "replace_In_with_GtE", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/load.py"], "result-type": "normal", "occurrence": 0}, "8": {"result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithNotIn", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"pykickstart.load\", line 107, in _copy_file\n  File \"/home/atodorov/.virtualenvs/pykickstart_docs/lib64/python3.5/shutil.py\", line 114, in copyfile\n    with open(src, 'rb') as fsrc:\nFileNotFoundError: [Errno 2] No such file or directory: 'http://127.0.0.1:37366/testfile-iu8wbhav'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/load.py\", line 109, in runTest\n    target_path = load.load_to_file(self._url, self._target_path)\n  File \"pykickstart.load\", line 70, in load_to_file\n  File \"pykickstart.load\", line 109, in _copy_file\npykickstart.errors.KickstartError: Error copying file: [Errno 2] No such file or directory: 'http://127.0.0.1:37366/testfile-iu8wbhav'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "@@ -5,7 +5,7 @@", " from pykickstart.errors import KickstartError", " from pykickstart.i18n import _", " from requests.exceptions import SSLError, RequestException", "-_is_url = (lambda location: ('://' in location))", "+_is_url = (lambda location: ('://' not in location))", " SSL_VERIFY = True", " ", " def load_to_str(location):"]]], "module-name": "pykickstart.load", "op-name": "replace_In_with_NotIn", "command": ["cosmic-ray", "worker", "pykickstart.load", "replace_In_with_NotIn", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/load.py"], "result-type": "normal", "occurrence": 0}, "1": {"result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithEq", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/load.py\", line 109, in runTest\n    target_path = load.load_to_file(self._url, self._target_path)\n  File \"pykickstart.load\", line 59, in load_to_file\n  File \"pykickstart.load\", line 84, in _load_url\npykickstart.errors.KickstartError: Error accessing URL \"http://127.0.0.1:57169/testfile-2vbzeess\": 200\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "@@ -37,7 +37,7 @@", "         raise KickstartError(((_('Error securely accessing URL \"%s\"') % location) + ': {e}'.format(e=str(e))))", "     except RequestException as e:", "         raise KickstartError(((_('Error accessing URL \"%s\"') % location) + ': {e}'.format(e=str(e))))", "-    if (request.status_code != requests.codes.ok):", "+    if (request.status_code == requests.codes.ok):", "         raise KickstartError(((_('Error accessing URL \"%s\"') % location) + ': {c}'.format(c=str(request.status_code))))", "     return request.text", " "]]], "module-name": "pykickstart.load", "op-name": "replace_NotEq_with_Eq", "command": ["cosmic-ray", "worker", "pykickstart.load", "replace_NotEq_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/load.py"], "result-type": "normal", "occurrence": 0}, "4": {"result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithEq", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"pykickstart.load\", line 107, in _copy_file\n  File \"/home/atodorov/.virtualenvs/pykickstart_docs/lib64/python3.5/shutil.py\", line 114, in copyfile\n    with open(src, 'rb') as fsrc:\nFileNotFoundError: [Errno 2] No such file or directory: 'http://127.0.0.1:51933/testfile-8ob6cuvs'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/load.py\", line 109, in runTest\n    target_path = load.load_to_file(self._url, self._target_path)\n  File \"pykickstart.load\", line 70, in load_to_file\n  File \"pykickstart.load\", line 109, in _copy_file\npykickstart.errors.KickstartError: Error copying file: [Errno 2] No such file or directory: 'http://127.0.0.1:51933/testfile-8ob6cuvs'\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "@@ -5,7 +5,7 @@", " from pykickstart.errors import KickstartError", " from pykickstart.i18n import _", " from requests.exceptions import SSLError, RequestException", "-_is_url = (lambda location: ('://' in location))", "+_is_url = (lambda location: ('://' == location))", " SSL_VERIFY = True", " ", " def load_to_str(location):"]]], "module-name": "pykickstart.load", "op-name": "replace_In_with_Eq", "command": ["cosmic-ray", "worker", "pykickstart.load", "replace_In_with_Eq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/load.py"], "result-type": "normal", "occurrence": 0}, "12": {"result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithLt", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "@@ -37,7 +37,7 @@", "         raise KickstartError(((_('Error securely accessing URL \"%s\"') % location) + ': {e}'.format(e=str(e))))", "     except RequestException as e:", "         raise KickstartError(((_('Error accessing URL \"%s\"') % location) + ': {e}'.format(e=str(e))))", "-    if (request.status_code != requests.codes.ok):", "+    if (request.status_code < requests.codes.ok):", "         raise KickstartError(((_('Error accessing URL \"%s\"') % location) + ': {c}'.format(c=str(request.status_code))))", "     return request.text", " "]]], "module-name": "pykickstart.load", "op-name": "replace_NotEq_with_Lt", "command": ["cosmic-ray", "worker", "pykickstart.load", "replace_NotEq_with_Lt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/load.py"], "result-type": "normal", "occurrence": 0}, "13": {"result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceNotEqWithGt", "occurrence": 0}, ["Outcome.SURVIVED", ["--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "@@ -37,7 +37,7 @@", "         raise KickstartError(((_('Error securely accessing URL \"%s\"') % location) + ': {e}'.format(e=str(e))))", "     except RequestException as e:", "         raise KickstartError(((_('Error accessing URL \"%s\"') % location) + ': {e}'.format(e=str(e))))", "-    if (request.status_code != requests.codes.ok):", "+    if (request.status_code > requests.codes.ok):", "         raise KickstartError(((_('Error accessing URL \"%s\"') % location) + ': {c}'.format(c=str(request.status_code))))", "     return request.text", " "]]], "module-name": "pykickstart.load", "op-name": "replace_NotEq_with_Gt", "command": ["cosmic-ray", "worker", "pykickstart.load", "replace_NotEq_with_Gt", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/load.py"], "result-type": "normal", "occurrence": 0}, "3": {"result-data": [{"line_number": "<UNKNOWN>", "operator": "cosmic_ray.operators.relational_operator_replacement.ReplaceInWithNotEq", "occurrence": 0}, ["Outcome.KILLED", ["Traceback (most recent call last):\n  File \"pykickstart.load\", line 77, in _load_url\n  File \"/home/atodorov/.virtualenvs/pykickstart_docs/lib/python3.5/site-packages/requests/api.py\", line 71, in get\n    return request('get', url, params=params, **kwargs)\n  File \"/home/atodorov/.virtualenvs/pykickstart_docs/lib/python3.5/site-packages/requests/api.py\", line 57, in request\n    return session.request(method=method, url=url, **kwargs)\n  File \"/home/atodorov/.virtualenvs/pykickstart_docs/lib/python3.5/site-packages/requests/sessions.py\", line 461, in request\n    prep = self.prepare_request(req)\n  File \"/home/atodorov/.virtualenvs/pykickstart_docs/lib/python3.5/site-packages/requests/sessions.py\", line 394, in prepare_request\n    hooks=merge_hooks(request.hooks, self.hooks),\n  File \"/home/atodorov/.virtualenvs/pykickstart_docs/lib/python3.5/site-packages/requests/models.py\", line 295, in prepare\n    self.prepare_url(url, params)\n  File \"/home/atodorov/.virtualenvs/pykickstart_docs/lib/python3.5/site-packages/requests/models.py\", line 355, in prepare_url\n    raise MissingSchema(error)\nrequests.exceptions.MissingSchema: Invalid URL '/tmp/testfile-22kam93f': No schema supplied. Perhaps you meant http:///tmp/testfile-22kam93f?\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/atodorov/repos/git/pykickstart/tests/load.py\", line 61, in runTest\n    target_path = load.load_to_file(self._path, self._target_path)\n  File \"pykickstart.load\", line 59, in load_to_file\n  File \"pykickstart.load\", line 81, in _load_url\npykickstart.errors.KickstartError: Error accessing URL \"/tmp/testfile-22kam93f\": Invalid URL '/tmp/testfile-22kam93f': No schema supplied. Perhaps you meant http:///tmp/testfile-22kam93f?\n", "--- mutation diff ---", "--- a/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "+++ b/home/atodorov/repos/git/pykickstart/pykickstart/load.py", "@@ -5,7 +5,7 @@", " from pykickstart.errors import KickstartError", " from pykickstart.i18n import _", " from requests.exceptions import SSLError, RequestException", "-_is_url = (lambda location: ('://' in location))", "+_is_url = (lambda location: ('://' != location))", " SSL_VERIFY = True", " ", " def load_to_str(location):"]]], "module-name": "pykickstart.load", "op-name": "replace_In_with_NotEq", "command": ["cosmic-ray", "worker", "pykickstart.load", "replace_In_with_NotEq", "0", "nose", "--", "-v", "--stop", "-I", "__init__.py", "-I", "baseclass.py", "tests/load.py"], "result-type": "normal", "occurrence": 0}}}